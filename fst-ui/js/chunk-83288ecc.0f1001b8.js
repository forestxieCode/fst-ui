(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-83288ecc"],{"0dae":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[n("h2",{attrs:{id:"kuai-su-shang-shou"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kuai-su-shang-shou"}},[e._v("¶")]),e._v(" 快速上手")]),n("p",[e._v("本节将介绍如何在项目中使用 Fst-ui。")]),n("h3",{attrs:{id:"yin-ru-fst-ui"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yin-ru-fst-ui"}},[e._v("¶")]),e._v(" 引入 Fst-ui")]),n("p",[e._v("你可以引入整个 Fst-ui，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Fst-ui。")]),n("h4",{attrs:{id:"wan-zheng-yin-ru"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#wan-zheng-yin-ru"}},[e._v("¶")]),e._v(" 完整引入")]),n("p",[e._v("在 main.js 中写入以下内容：")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("import Vue from 'vue';\nimport ElementUi from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport FstUi from 'fst-ui';\nimport 'fst-ui/lib/theme-chalk/index.css';\nimport App from './App.vue';\n\nVue.use(ElementUi);\nVue.use(FstUi);\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n});\n")])]),n("p",[e._v("以上代码便完成了 Fst-ui 的引入。需要注意的是，Fst-ui 是基于ElementUi的，需要在之后引入该组件库。")]),n("h4",{attrs:{id:"an-xu-yin-ru"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#an-xu-yin-ru"}},[e._v("¶")]),e._v(" 按需引入")]),n("p",[e._v("借助 "),n("a",{attrs:{href:"https://github.com/QingWei-Li/babel-plugin-component"}},[e._v("babel-plugin-component")]),e._v("，我们可以只引入需要的组件，以达到减小项目体积的目的。")]),n("p",[e._v("首先，安装 babel-plugin-component：")]),n("pre",[n("code",{staticClass:"language-bash"},[e._v("npm install babel-plugin-component -D\n")])]),n("p",[e._v("然后，将 .babelrc 修改为：")]),n("pre",[n("code",{staticClass:"language-json"},[e._v('{\n  "presets": [["es2015", { "modules": false }]],\n  "plugins": [\n    [\n      "component",\n      {\n        "libraryName": "fst-ui",\n        "styleLibraryName": "theme-chalk"\n      }\n    ]\n  ]\n}\n')])]),n("p",[e._v("接下来，如果你只希望引入部分组件，比如 Button 和 Select，那么需要在 main.js 中写入以下内容：")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("import Vue from 'vue';\nimport { FstSearchTab, FstSearchTabGroup } from 'fst-ui';\nimport App from './App.vue';\n\nVue.component(FstSearchTab.name, FstSearchTab);\nVue.component(FstSearchTabGroup.name, FstSearchTabGroup);\n/* 或写为\n * Vue.use(FstSearchTab)\n * Vue.use(FstSearchTabGroup)\n */\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n});\n")])]),n("p",[e._v("完整组件列表和引入方式（完整组件列表以 "),n("a",{attrs:{href:"https://github.com/ElemeFE/element/blob/master/components.json"}},[e._v("components.json")]),e._v(" 为准）")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("import Vue from 'vue';\nimport {\n FstSearchTab,\n FstSearchTabGroup\n} from 'fst-ui';\n\nVue.use(FstSearchTab);\nVue.use(FstSearchTabGroup);\n")])]),n("h3",{attrs:{id:"kai-shi-shi-yong"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kai-shi-shi-yong"}},[e._v("¶")]),e._v(" 开始使用")]),n("p",[e._v("至此，一个基于 Vue 和 Fst-ui 的开发环境已经搭建完毕，现在就可以编写代码了。各个组件的使用方法请参阅它们各自的文档。")])])}],l=n("2be6"),s={},o=Object(l["a"])(s,a,r,!1,null,null,null);t["default"]=o.exports},2496:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[e._m(0),e._m(1),e._m(2),n("p",[e._v("简单使用")]),n("demo-block",[n("div",[n("p",[e._v("要使用它，只需要在"),n("code",[e._v("search-tab")]),e._v("元素中使用"),n("code",[e._v("v-model")]),e._v("绑定变量即可，列表数据通过"),n("code",[e._v("list")]),e._v("属性传递。")])]),n("template",{slot:"source"},[n("element-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div class=\"demo-search-tab-box\">\n    <span class=\"demo-search-tab-title\">区域：</span>\n    <fst-search-tab v-model=\"searchValue\" :list=\"data\"></fst-search-tab>\n  </div>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        searchValue: null,\n        data: [\n          {id: 1, name: '湖南'},\n          {id: 2, name: '湖北'},\n          {id: 3, name: '山东'},\n          {id: 4, name: '深圳'},\n          {id: 5, name: '上海'},\n          {id: 6, name: '北京'}\n        ]\n      };\n    }\n  };\n<\/script>\n")])])])],2),e._m(3),e._m(4),e._m(5),n("demo-block",[n("div",[n("p",[e._v("使用"),n("code",[e._v("search-tab-group")]),e._v("多行显示")])]),n("template",{slot:"source"},[n("element-demo1")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <fst-search-tab-group :searchOption=\"searchOption\" @change=\"changeHandle\"></fst-search-tab-group>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        searchOption: {\n          type: {\n            autoAddAll: true,\n            data: [\n              { name: '课件', id: 3 },\n              { name: '教案', id: 8 },\n              { name: '试卷', id: 7 },\n              { name: '学案', id: 4 },\n              { name: '资源包', id: 11 },\n              { name: '素材', id: 6 },\n              { name: '视频', id: 12 }\n            ],\n            name: '资源类型'\n          },\n          resourceFormat: {\n            data: [\n              {\n                name: '文档',\n                id: 1\n              },\n              {\n                name: '视频',\n                id: 2\n              },\n              {\n                name: '音频',\n                id: 3\n              },\n              {\n                name: '图片',\n                id: 4\n              }\n            ],\n            name: '资源格式'\n          },\n          shareType: {\n            name: '资源来源',\n            require: true,\n            defaultValue: 1,\n            data: [\n              {\n                name: '私有',\n                id: 0\n              },\n              {\n                name: '校本',\n                id: 1\n              },\n              {\n                name: '云端',\n                id: 2\n              }\n            ]\n          }\n        }\n      };\n    },\n    methods: {\n      changeHandle(val) {\n        console.log(val)\n      }\n    }\n  };\n<\/script>\n")])])])],2),e._m(6),n("p",[e._v("展示已选择的名字")]),n("demo-block",[n("div",[n("p",[e._v("可使用"),n("code",[e._v("unfoldOption")]),e._v("属性进行配置")])]),n("template",{slot:"source"},[n("element-demo2")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <fst-search-tab-group :searchOption=\"searchOption\" :unfoldOption=\"unfoldOption\" @change=\"changeHandle\"></fst-search-tab-group>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        unfoldOption: { name: '您已选择', unfold: true },\n        searchOption: {\n          type: {\n            autoAddAll: true,\n            data: [\n              { name: '课件', id: 3 },\n              { name: '教案', id: 8 },\n              { name: '试卷', id: 7 },\n              { name: '学案', id: 4 },\n              { name: '资源包', id: 11 },\n              { name: '素材', id: 6 },\n              { name: '视频', id: 12 }\n            ],\n            name: '资源类型'\n          },\n          resourceFormat: {\n            data: [\n              {\n                name: '文档',\n                id: 1\n              },\n              {\n                name: '视频',\n                id: 2\n              },\n              {\n                name: '音频',\n                id: 3\n              },\n              {\n                name: '图片',\n                id: 4\n              }\n            ],\n            name: '资源格式'\n          },\n          shareType: {\n            name: '资源来源',\n            data: [\n              {\n                name: '私有',\n                id: 0\n              },\n              {\n                name: '校本',\n                id: 1\n              },\n              {\n                name: '云端',\n                id: 2\n              }\n            ]\n          }\n        }\n      };\n    },\n    methods: {\n      changeHandle(val) {\n        console.log(val)\n      }\n    }\n  };\n<\/script>\n")])])])],2),e._m(7),n("p",[e._v("当第一排改变，下面几排也跟着相应的改变")]),n("demo-block",[n("div",[n("p",[e._v("添加url地址和linkage属性")])]),n("template",{slot:"source"},[n("element-demo3")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <fst-search-tab-group :searchOption=\"searchOption\" :request=\"request\" @change=\"changeHandle\"></fst-search-tab-group>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        request: this.$axios,\n        searchOption: {\n          stageId: {\n            require: true,\n            name: '学段',\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getPeriod',\n            linkage: true\n          },\n          subjectId: {\n            require: true,\n            name: '学科',\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getSubjects',\n            linkage: true\n          },\n          versionId: {\n            require: true,\n            name: '版本',\n            linkage: true,\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getVersions'\n          },\n          bookId: {\n            require: true,\n            name: '册别',\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getTextBooks'\n          }\n        },\n      };\n    },\n    methods: {\n      changeHandle(val) {\n        console.log(val)\n      }\n    }\n  };\n<\/script>\n")])])])],2),e._m(8),e._m(9),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14)],1)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"searchtab-sou-suo-kuang"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#searchtab-sou-suo-kuang"}},[e._v("¶")]),e._v(" SearchTab 搜索框")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("开发者：（谢森林）"),n("br"),e._v(" 用于页面的数据查询，以及表单提交，只需传递匹配的数据，在操作之后会通过事件拿到所操作的值。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"ji-chu-yong-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ji-chu-yong-fa"}},[e._v("¶")]),e._v(" 基础用法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"tip"},[n("p",[e._v("在一般搜索页面存在多个条件查询。如果每一个就是"),n("code",[e._v("fst-search-tab")]),e._v("，那么代码会显得有点臃肿，所有在这基础上再封装一层"),n("code",[e._v("fst-search-tab-group")]),e._v(",支持多条件查询。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"searchtabgroup-yong-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#searchtabgroup-yong-fa"}},[e._v("¶")]),e._v(" SearchTabGroup用法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("当需要多个"),n("code",[e._v("search-tab")]),e._v("时，可以使用"),n("code",[e._v("search-tab-group")]),e._v("多行显示")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"zhan-shi-yi-xuan-zhong-de-ming-zi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#zhan-shi-yi-xuan-zhong-de-ming-zi"}},[e._v("¶")]),e._v(" 展示已选中的名字")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"qing-qiu-jie-kou-qie-lian-dong"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qing-qiu-jie-kou-qie-lian-dong"}},[e._v("¶")]),e._v(" 请求接口且联动")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"tip"},[n("p",[e._v("注意：如果是接口请求数据，那么必须传一个"),n("code",[e._v("request")]),e._v("属性，对应的就是本项目的axios")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"searchoption-nei-de-attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#searchoption-nei-de-attributes"}},[e._v("¶")]),e._v(" searchOption 内的 Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("name")]),n("td",[e._v("标签名字")]),n("td",[e._v("string")]),n("td",[e._v("必填")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("data")]),n("td",[e._v("展示的默认数据非接口数据")]),n("td",[e._v("arroy")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("url")]),n("td",[e._v("请求的接口地址与data属性互斥")]),n("td",[e._v("string")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("require")]),n("td",[e._v("必选标记")]),n("td",[e._v("blooen")]),n("td",[e._v("false/true")]),n("td",[e._v("false")])]),n("tr",[n("td",[e._v("autoAddAll")]),n("td",[e._v("是否需要添加全部选项")]),n("td",[e._v("blooen")]),n("td",[e._v("false/true")]),n("td",[e._v("false")])]),n("tr",[n("td",[e._v("defaultValue")]),n("td",[e._v("默认值")]),n("td",[e._v("number")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("prop")]),n("td",[e._v("自定义数据格式")]),n("td",[e._v("object")]),n("td",[e._v("—")]),n("td",[e._v("{id:'id', name:'name'}")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"unfoldoption-nei-de-attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unfoldoption-nei-de-attributes"}},[e._v("¶")]),e._v(" unfoldOption 内的 Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("name")]),n("td",[e._v("标题名字")]),n("td",[e._v("string")]),n("td",[e._v("必填")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("unfold")]),n("td",[e._v("是否需要展开")]),n("td",[e._v("blooen")]),n("td",[e._v("false/true")]),n("td",[e._v("false")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"events"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("¶")]),e._v(" Events")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("事件名称")]),n("th",[e._v("说明")]),n("th",[e._v("回调参数")])])]),n("tbody",[n("tr",[n("td",[e._v("change")]),n("td",[e._v("当search-tab点击时出发")]),n("td",[e._v("回调一个object数据，分对应着每一个search-tab选择的值")])])])])}],l=n("0b38"),s={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",{staticClass:"demo-search-tab-box"},[n("span",{staticClass:"demo-search-tab-title"},[e._v("区域：")]),e._v(" "),n("fst-search-tab",{attrs:{list:e.data},model:{value:e.searchValue,callback:function(t){e.searchValue=t},expression:"searchValue"}})],1)]],2)},t=[],n={data:function(){return{searchValue:null,data:[{id:1,name:"湖南"},{id:2,name:"湖北"},{id:3,name:"山东"},{id:4,name:"深圳"},{id:5,name:"上海"},{id:6,name:"北京"}]}}};return Object(l["a"])({render:e,staticRenderFns:t},n)}(),"element-demo1":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("fst-search-tab-group",{attrs:{searchOption:e.searchOption},on:{change:e.changeHandle}})]],2)},t=[],n={data:function(){return{searchOption:{type:{autoAddAll:!0,data:[{name:"课件",id:3},{name:"教案",id:8},{name:"试卷",id:7},{name:"学案",id:4},{name:"资源包",id:11},{name:"素材",id:6},{name:"视频",id:12}],name:"资源类型"},resourceFormat:{data:[{name:"文档",id:1},{name:"视频",id:2},{name:"音频",id:3},{name:"图片",id:4}],name:"资源格式"},shareType:{name:"资源来源",require:!0,defaultValue:1,data:[{name:"私有",id:0},{name:"校本",id:1},{name:"云端",id:2}]}}}},methods:{changeHandle:function(e){console.log(e)}}};return Object(l["a"])({render:e,staticRenderFns:t},n)}(),"element-demo2":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("fst-search-tab-group",{attrs:{searchOption:e.searchOption,unfoldOption:e.unfoldOption},on:{change:e.changeHandle}})]],2)},t=[],n={data:function(){return{unfoldOption:{name:"您已选择",unfold:!0},searchOption:{type:{autoAddAll:!0,data:[{name:"课件",id:3},{name:"教案",id:8},{name:"试卷",id:7},{name:"学案",id:4},{name:"资源包",id:11},{name:"素材",id:6},{name:"视频",id:12}],name:"资源类型"},resourceFormat:{data:[{name:"文档",id:1},{name:"视频",id:2},{name:"音频",id:3},{name:"图片",id:4}],name:"资源格式"},shareType:{name:"资源来源",data:[{name:"私有",id:0},{name:"校本",id:1},{name:"云端",id:2}]}}}},methods:{changeHandle:function(e){console.log(e)}}};return Object(l["a"])({render:e,staticRenderFns:t},n)}(),"element-demo3":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("fst-search-tab-group",{attrs:{searchOption:e.searchOption,request:e.request},on:{change:e.changeHandle}})]],2)},t=[],n={data:function(){return{request:this.$axios,searchOption:{stageId:{require:!0,name:"学段",url:"https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getPeriod",linkage:!0},subjectId:{require:!0,name:"学科",url:"https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getSubjects",linkage:!0},versionId:{require:!0,name:"版本",linkage:!0,url:"https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getVersions"},bookId:{require:!0,name:"册别",url:"https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getTextBooks"}}}},methods:{changeHandle:function(e){console.log(e)}}};return Object(l["a"])({render:e,staticRenderFns:t},n)}()}},o=s,i=n("2be6"),c=Object(i["a"])(o,a,r,!1,null,null,null);t["default"]=c.exports},5111:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[n("h2",{attrs:{id:"guo-ji-hua"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#guo-ji-hua"}},[e._v("¶")]),e._v(" 国际化")]),n("p",[e._v("Element 组件内部默认使用中文，若希望使用其他语言，则需要进行多语言设置。以英文为例，在 main.js 中：")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("// 完整引入 Element\nimport Vue from 'vue'\nimport ElementUI from 'element-ui'\nimport locale from 'element-ui/lib/locale/lang/en'\n\nVue.use(ElementUI, { locale })\n")])]),n("p",[e._v("或")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("// 按需引入 Element\nimport Vue from 'vue'\nimport { Button, Select } from 'element-ui'\nimport lang from 'element-ui/lib/locale/lang/en'\nimport locale from 'element-ui/lib/locale'\n\n// 设置语言\nlocale.use(lang)\n\n// 引入组件\nVue.component(Button.name, Button)\nVue.component(Select.name, Select)\n")])]),n("p",[e._v("如果使用其它语言，默认情况下中文语言包依旧是被引入的，可以使用 webpack 的 NormalModuleReplacementPlugin 替换默认语言包。")]),n("p",[n("strong",[e._v("webpack.config.js")])]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("{\n  plugins: [\n    new webpack.NormalModuleReplacementPlugin(/element-ui[\\/\\\\]lib[\\/\\\\]locale[\\/\\\\]lang[\\/\\\\]zh-CN/, 'element-ui/lib/locale/lang/en')\n  ]\n}\n")])]),n("h2",{attrs:{id:"jian-rong-vue-i18n-5-x"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jian-rong-vue-i18n-5-x"}},[e._v("¶")]),e._v(" 兼容 "),n("code",[e._v("vue-i18n@5.x")])]),n("p",[e._v("Element 兼容 "),n("a",{attrs:{href:"https://github.com/kazupon/vue-i18n"}},[e._v("vue-i18n@5.x")]),e._v("，搭配使用能更方便地实现多语言切换。")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("import Vue from 'vue'\nimport VueI18n from 'vue-i18n'\nimport Element from 'element-ui'\nimport enLocale from 'element-ui/lib/locale/lang/en'\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'\n\nVue.use(VueI18n)\nVue.use(Element)\n\nVue.config.lang = 'zh-cn'\nVue.locale('zh-cn', zhLocale)\nVue.locale('en', enLocale)\n")])]),n("h2",{attrs:{id:"jian-rong-qi-ta-i18n-cha-jian"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jian-rong-qi-ta-i18n-cha-jian"}},[e._v("¶")]),e._v(" 兼容其他 i18n 插件")]),n("p",[e._v("如果不使用 "),n("code",[e._v("vue-i18n@5.x")]),e._v("，而是用其他的 i18n 插件，Element 将无法兼容，但是可以自定义 Element 的 i18n 的处理方法。")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("import Vue from 'vue'\nimport Element from 'element-ui'\nimport enLocale from 'element-ui/lib/locale/lang/en'\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'\n\nVue.use(Element, {\n  i18n: function (path, options) {\n    // ...\n  }\n})\n")])]),n("h2",{attrs:{id:"jian-rong-vue-i18n-6-x"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jian-rong-vue-i18n-6-x"}},[e._v("¶")]),e._v(" 兼容 "),n("code",[e._v("vue-i18n@6.x")])]),n("p",[e._v("默认不支持 6.x 的 "),n("code",[e._v("vue-i18n")]),e._v("，你需要手动处理。")]),n("pre",[n("code",{staticClass:"language-javascript"},[e._v("import Vue from 'vue'\nimport Element from 'element-ui'\nimport VueI18n from 'vue-i18n'\nimport enLocale from 'element-ui/lib/locale/lang/en'\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'\n\nVue.use(VueI18n)\n\nconst messages = {\n  en: {\n    message: 'hello',\n    ...enLocale // 或者用 Object.assign({ message: 'hello' }, enLocale)\n  },\n  zh: {\n    message: '你好',\n    ...zhLocale // 或者用 Object.assign({ message: '你好' }, zhLocale)\n  }\n}\n// Create VueI18n instance with options\nconst i18n = new VueI18n({\n  locale: 'en', // set locale\n  messages, // set locale messages\n})\n\nVue.use(Element, {\n  i18n: (key, value) => i18n.t(key, value)\n})\n\nnew Vue({ i18n }).$mount('#app')\n")])]),n("h2",{attrs:{id:"an-xu-jia-zai-li-ding-zhi-i18n"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#an-xu-jia-zai-li-ding-zhi-i18n"}},[e._v("¶")]),e._v(" 按需加载里定制 i18n")]),n("pre",[n("code",{staticClass:"language-js"},[e._v("import Vue from 'vue'\nimport DatePicker from 'element/lib/date-picker'\nimport VueI18n from 'vue-i18n'\n\nimport enLocale from 'element-ui/lib/locale/lang/en'\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'\nimport ElementLocale from 'element-ui/lib/locale'\n\nVue.use(VueI18n)\nVue.use(DatePicker)\n\nconst messages = {\n  en: {\n    message: 'hello',\n    ...enLocale\n  },\n  zh: {\n    message: '你好',\n    ...zhLocale\n  }\n}\n// Create VueI18n instance with options\nconst i18n = new VueI18n({\n  locale: 'en', // set locale\n  messages, // set locale messages\n})\n\nElementLocale.i18n((key, value) => i18n.t(key, value))\n")])]),n("h2",{attrs:{id:"tong-guo-cdn-de-fang-shi-jia-zai-yu-yan-wen-jian"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tong-guo-cdn-de-fang-shi-jia-zai-yu-yan-wen-jian"}},[e._v("¶")]),e._v(" 通过 CDN 的方式加载语言文件")]),n("pre",[n("code",{staticClass:"language-html"},[e._v('<script src="//unpkg.com/vue"><\/script>\n<script src="//unpkg.com/element-ui"><\/script>\n<script src="//unpkg.com/element-ui/lib/umd/locale/en.js"><\/script>\n\n<script>\n  ELEMENT.locale(ELEMENT.lang.en)\n<\/script>\n')])]),n("p",[e._v("搭配 "),n("code",[e._v("vue-i18n")]),e._v(" 使用")]),n("pre",[n("code",{staticClass:"language-html"},[e._v('<script src="//unpkg.com/vue"><\/script>\n<script src="//unpkg.com/vue-i18n/dist/vue-i18n.js"><\/script>\n<script src="//unpkg.com/element-ui"><\/script>\n<script src="//unpkg.com/element-ui/lib/umd/locale/zh-CN.js"><\/script>\n<script src="//unpkg.com/element-ui/lib/umd/locale/en.js"><\/script>\n\n<script>\n  Vue.locale(\'en\', ELEMENT.lang.en)\n  Vue.locale(\'zh-cn\', ELEMENT.lang.zhCN)\n<\/script>\n')])]),n("p",[e._v("目前 Element 内置了以下语言：")]),n("ul",{staticClass:"language-list"},[n("li",[e._v("简体中文（zh-CN）")]),n("li",[e._v("英语（en）")]),n("li",[e._v("德语（de）")]),n("li",[e._v("葡萄牙语（pt）")]),n("li",[e._v("西班牙语（es）")]),n("li",[e._v("丹麦语（da）")]),n("li",[e._v("法语（fr）")]),n("li",[e._v("挪威语（nb-NO）")]),n("li",[e._v("繁体中文（zh-TW）")]),n("li",[e._v("意大利语（it）")]),n("li",[e._v("韩语（ko）")]),n("li",[e._v("日语（ja）")]),n("li",[e._v("荷兰语（nl）")]),n("li",[e._v("越南语（vi）")]),n("li",[e._v("俄语（ru-RU）")]),n("li",[e._v("土耳其语（tr-TR）")]),n("li",[e._v("巴西葡萄牙语（pt-br）")]),n("li",[e._v("波斯语（fa）")]),n("li",[e._v("泰语（th）")]),n("li",[e._v("印尼语（id）")]),n("li",[e._v("保加利亚语（bg）")]),n("li",[e._v("波兰语（pl）")]),n("li",[e._v("芬兰语（fi）")]),n("li",[e._v("瑞典语（sv-SE）")]),n("li",[e._v("希腊语（el）")]),n("li",[e._v("斯洛伐克语（sk）")]),n("li",[e._v("加泰罗尼亚语（ca）")]),n("li",[e._v("捷克语（cs-CZ）")]),n("li",[e._v("乌克兰语（ua）")]),n("li",[e._v("土库曼语（tk）")]),n("li",[e._v("泰米尔语（ta）")]),n("li",[e._v("拉脱维亚语（lv）")]),n("li",[e._v("南非荷兰语（af-ZA）")]),n("li",[e._v("爱沙尼亚语（ee）")]),n("li",[e._v("斯洛文尼亚语（sl）")]),n("li",[e._v("阿拉伯语（ar）")]),n("li",[e._v("希伯来语（he）")]),n("li",[e._v("立陶宛语（lt）")]),n("li",[e._v("蒙古语（mn）")]),n("li",[e._v("哈萨克斯坦语（kz）")]),n("li",[e._v("匈牙利语（hu）")]),n("li",[e._v("罗马尼亚语（ro）")]),n("li",[e._v("库尔德语（ku）")]),n("li",[e._v("维吾尔语（ug-CN）")]),n("li",[e._v("高棉语（km）")]),n("li",[e._v("塞尔维亚语（sr）")]),n("li",[e._v("巴斯克语（eu）")]),n("li",[e._v("吉尔吉斯语（kg）")]),n("li",[e._v("亚美尼亚语 (hy)")]),n("li",[e._v("克罗地亚 (hr)")]),n("li",[e._v("世界语 (eo)")])]),n("p",[e._v("如果你需要使用其他的语言，欢迎贡献 PR：只需在 "),n("a",{attrs:{href:"https://github.com/ElemeFE/element/tree/dev/src/locale/lang"}},[e._v("这里")]),e._v(" 添加一个语言配置文件即可。")])])}],l=n("2be6"),s={},o=Object(l["a"])(s,a,r,!1,null,null,null);t["default"]=o.exports},"6fb1":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[e._m(0),e._m(1),e._m(2),n("p",[e._v("简单使用")]),n("demo-block",[n("div",[n("p",[e._v("只显示表头与数据")])]),n("template",{slot:"source"},[n("element-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div style=\"height: 100px;\">\n    <fst-table :columns=\"columns\" :data=\"data\" :pagination=\"false\"/>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        }\n      ]),\n      data: [\n        {\n          name: '森林',\n          sex: 1,\n          age: 18\n        }\n      ],\n      // 是否显示多选框\n      selectable: true,\n      // 是否显示序号列\n      sequence: true\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(3),n("p",[e._v("使用分页")]),n("demo-block",[n("div",[n("p",[e._v("显示分页组件，配置参数")])]),n("template",{slot:"source"},[n("element-demo1")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <fst-table\n    v-loading=\"loading\"\n    :columns=\"columns\"\n    :data=\"data\"\n    :current-page.sync=\"currentPage\"\n    :page-size.sync=\"pageSize\"\n    :total=\"total\"\n    height=\"auto\"\n    @page-change=\"$_handlePageChange\"\n  />\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        }\n      ]),\n      data: [],\n      // 当前页码\n      currentPage: 1,\n      // 每页条数\n      pageSize: 10,\n      // 总条数\n      total: 0,\n      loading: false\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    // 加载表格数据\n    loadData() {\n      this.loading = true\n      setTimeout(() => {\n        this.total = 40\n        const { currentPage, pageSize } = this\n        this.data = new Array(pageSize).fill({}).map((item, index) => {\n          return {\n            name: `森林${currentPage + (index + 1) * 10}`,\n            sex: Math.random() > 0.5 ? 1 : 0,\n            age: Math.floor(Math.random() * 100)\n          }\n        })\n        this.loading = false\n      }, 1000)\n    },\n    $_handlePageChange() {\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\n      console.log(this.pageSize, this.currentPage)\n      this.loadData()\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(4),n("p",[e._v("使用顶部按钮与行操作按钮")]),n("demo-block",[n("div",[n("p",[e._v("顶部按钮与行操作按钮")])]),n("template",{slot:"source"},[n("element-demo2")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div style=\"height: 300px;\">\n    <fst-table\n      v-loading=\"loading\"\n      :columns=\"columns\"\n      :data=\"data\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n      :buttons=\"buttons\"\n      @page-change=\"$_handlePageChange\"\n    />\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          // 可以指定列的宽度，与element-ui原生用法一致\n          width: 220,\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        },\n        {\n          label: '公众号',\n          prop: 'officialAccount'\n        },\n        // 行编辑按钮，在表格末尾出现，自动锁定右侧\n        {\n          width: 180,\n          label: '操作',\n          actions: [\n            {\n              id: 'follow',\n              text: '添加好友',\n              click: this.$_handleFollowAuthor\n            },\n            {\n              id: 'edit',\n              text: '编辑',\n              // 可以通过before控制按钮是否显示，比如下面年龄四十岁的才会显示编辑按钮\n              before(row) {\n                return row.age < 40\n              },\n              click: this.$_handleEdit\n            },\n            {\n              id: 'delete',\n              text: '删除',\n              icon: 'el-icon-delete',\n              disabled(row) {\n                return row.sex === 0\n              },\n              // 为了拿到this,这里需要用箭头函数\n              click: () => {\n                this.$alert('女生被禁止删除了')\n              }\n            }\n          ]\n        }\n      ]),\n      data: [],\n      // 当前页码\n      currentPage: 1,\n      // 每页条数\n      pageSize: 10,\n      // 总条数\n      total: 0,\n      loading: false,\n      buttons: Object.freeze([\n        {\n          // id 必须有而且是在当前按钮数组里面是唯一的\n          id: 'add',\n          text: '新增',\n          type: 'primary',\n          icon: 'el-icon-circle-plus',\n          click: this.$_handleAdd\n        },\n        {\n          id: 'delete',\n          text: '删除',\n          // rows 是表格选中的行，如果没有选中行，则禁用删除按钮, disabled可以是一个boolean值或者函数\n          disabled: rows => !rows.length,\n          click: this.$_handleRemove\n        },\n        {\n          id: 'auth',\n          text: '这个按钮根据权限显示',\n          // 可以通过返回 true/false来控制按钮是否显示\n          before: (/** rows */) => {\n            return true\n          }\n        },\n        {\n          id: 'dropdown',\n          text: '下拉按钮',\n          children: [\n            {\n              id: 'moveUp',\n              text: '上移',\n              icon: 'el-icon-arrow-up',\n              click: () => {\n                console.log('上移')\n              }\n            },\n            {\n              id: 'moveDown',\n              text: '下移',\n              icon: 'el-icon-arrow-down',\n              disabled: rows => !rows.length,\n              click: () => {\n                console.log('下移')\n              }\n            }\n          ]\n        }\n      ])\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    // 加载表格数据\n    loadData() {\n      this.loading = true\n      setTimeout(() => {\n        this.total = 40\n        const { currentPage, pageSize } = this\n        this.data = new Array(pageSize).fill({}).map((item, index) => {\n          return {\n            id: currentPage + (index + 1) * 10,\n            name: `森林${currentPage + (index + 1) * 10}`,\n            sex: Math.random() > 0.5 ? 1 : 0,\n            age: Math.floor(Math.random() * 100),\n            officialAccount: '前端Sir'\n          }\n        })\n        this.loading = false\n      }, 1000)\n    },\n    $_handlePageChange() {\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\n      console.log(this.pageSize, this.currentPage)\n      this.loadData()\n    },\n    // 新增\n    $_handleAdd() {\n      this.$alert('点击了新增按钮')\n    },\n    // 顶部按钮会自动将表格所选的行传出来\n    $_handleRemove(rows) {\n      const ids = rows.map(({ id }) => id)\n      this.$alert(`要删除的行id为${ids.join(',')}`)\n    },\n    // 关注作者公众号\n    $_handleFollowAuthor() {\n      const image = require('../assets/images/qrcode.png')\n      const h = this.$createElement\n      this.$msgbox({\n        title: '扫码添加',\n        message: h('img', {\n          attrs: {\n            src: image\n          },\n          style: {\n            width: '400px'\n          }\n        })\n      })\n    },\n    /**\n     * row 这一行的数据\n     */\n    $_handleEdit(row, column) {\n      console.log(row, column)\n      this.$alert(`点击了姓名为【${row.name}】的行上的按钮`)\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(5),n("p",[e._v("按钮使用插槽")]),n("demo-block",[n("div",[n("p",[e._v("按钮使用插槽")])]),n("template",{slot:"source"},[n("element-demo3")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div style=\"height: 300px;\">\n    <fst-table\n      v-loading=\"loading\"\n      :columns=\"columns\"\n      :data=\"data\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n      :buttons=\"buttons\"\n      @page-change=\"$_handlePageChange\"\n    >\n      <template #button=\"{id}\">\n        <template v-if=\"id === 'slot'\">\n          <el-button type=\"primary\" size=\"small\">\n            自定义顶部按钮\n          </el-button>\n        </template>\n      </template>\n\n      <template #action=\"{id}\">\n        <template v-if=\"id === 'slot'\">\n          <el-button type=\"text\" size=\"small\">\n            自定义操作按钮\n          </el-button>\n        </template>\n      </template>\n    </fst-table>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          // 可以指定列的宽度，与element-ui原生用法一致\n          width: 220,\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        },\n        {\n          label: '好友',\n          prop: 'officialAccount'\n        },\n        // 行编辑按钮，在表格末尾出现，自动锁定右侧\n        {\n          width: 220,\n          label: '操作',\n          actions: [\n            {\n              id: 'follow',\n              text: '添加好友',\n              click: this.$_handleFollowAuthor\n            },\n            {\n              id: 'slot',\n              useSlot: true\n            }\n          ]\n        }\n      ]),\n      data: [],\n      // 当前页码\n      currentPage: 1,\n      // 每页条数\n      pageSize: 10,\n      // 总条数\n      total: 0,\n      loading: false,\n      buttons: Object.freeze([\n        {\n          // id 必须有而且是在当前按钮数组里面是唯一的\n          id: 'add',\n          text: '新增',\n          type: 'primary',\n          icon: 'el-icon-circle-plus',\n          click: this.$_handleAdd\n        },\n        {\n          id: 'slot',\n          useSlot: true\n        }\n      ])\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    // 加载表格数据\n    loadData() {\n      this.loading = true\n      setTimeout(() => {\n        this.total = 40\n        const { currentPage, pageSize } = this\n        this.data = new Array(pageSize).fill({}).map((item, index) => {\n          return {\n            id: currentPage + (index + 1) * 10,\n            name: `森林${currentPage + (index + 1) * 10}`,\n            sex: Math.random() > 0.5 ? 1 : 0,\n            age: Math.floor(Math.random() * 100),\n            officialAccount: '前端Sir'\n          }\n        })\n        this.loading = false\n      }, 1000)\n    },\n    $_handlePageChange() {\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\n      console.log(this.pageSize, this.currentPage)\n      this.loadData()\n    },\n    // 新增\n    $_handleAdd() {\n      this.$alert('点击了新增按钮')\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(6),n("p",[e._v("表格行编辑")]),n("demo-block",[n("div",[n("p",[e._v("表格行编辑")])]),n("template",{slot:"source"},[n("element-demo4")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div style=\"height: 150px;\">\n    <fst-table\n      ref=\"table\"\n      :columns=\"columns\"\n      :data=\"data\"\n      :pagination=\"false\"\n      :selectable=\"selectable\"\n      :sequence=\"sequence\"\n    />\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          label: '姓名',\n          prop: 'name',\n          editable: true,\n          field: {\n            componentType: 'input',\n            rules: [\n              {\n                required: true,\n                message: '请输入姓名'\n              }\n            ]\n          }\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === '1' ? '男' : '女'\n          },\n          editable: true,\n          field: {\n            componentType: 'select',\n            options: [\n              {\n                label: '男',\n                value: '1'\n              },\n              {\n                label: '女',\n                value: '0'\n              }\n            ]\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age',\n          editable: true,\n          field: {\n            componentType: 'number'\n          }\n        },\n        {\n          label: '操作',\n          actions: [\n            {\n              id: 'edit',\n              text: '编辑',\n              before: row => {\n                return !this.editIds.includes(row.id)\n              },\n              click: this.$_handleEdit\n            },\n            {\n              id: 'save',\n              text: '保存',\n              before: row => {\n                return this.editIds.includes(row.id)\n              },\n              click: this.$_handleSave\n            }\n          ]\n        }\n      ]),\n      data: [\n        {\n          // 行编辑必须指定rowKey字段，默认是id,如果修改为其他字段，需要给表格指定row-key=\"字段名\"\n          id: '0',\n          name: '森林',\n          sex: '1',\n          age: 18\n        },\n        {\n          // 行编辑必须指定rowKey字段，默认是id,如果修改为其他字段，需要给表格指定row-key=\"字段名\"\n          id: '1',\n          name: '森林1',\n          sex: '0',\n          age: 18\n        }\n      ],\n      // 是否显示多选框\n      selectable: true,\n      // 是否显示序号列\n      sequence: true,\n      editIds: []\n    }\n  },\n  methods: {\n    $_handleEdit(row) {\n      // 通过调用 startEditRow 可以开启行编辑\n      this.$refs.table.startEditRow(row.id)\n      // 记录开启了行编辑的id\n      this.editIds.push(row.id)\n    },\n    $_handleSave(row) {\n      this.$refs.table.endEditRow(row.id, (valid, result, oldRow) => {\n        if (valid) {\n          const index = this.editIds.findIndex(item => item === row.id)\n          this.editIds.splice(index, 1)\n        } else {\n          // 如果校验失败，则返回校验的第一个输入框的异常信息\n          console.log(result)\n          this.$message.error(result.message)\n        }\n      })\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(7),e._m(8),e._m(9),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14),e._m(15),e._m(16),e._m(17),e._m(18),e._m(19),e._m(20),e._m(21),e._m(22),e._m(23)],1)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"searchtab-table"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#searchtab-table"}},[e._v("¶")]),e._v(" SearchTab Table")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("开发者：（谢森林）"),n("br"),e._v(" 将表格常用的功能进行了整合封装，能高效完成常规业务开发")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"ji-chu-yong-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ji-chu-yong-fa"}},[e._v("¶")]),e._v(" 基础用法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"shi-yong-fen-ye"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shi-yong-fen-ye"}},[e._v("¶")]),e._v(" 使用分页")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"ding-bu-an-niu-yu-xing-cao-zuo-an-niu"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ding-bu-an-niu-yu-xing-cao-zuo-an-niu"}},[e._v("¶")]),e._v(" 顶部按钮与行操作按钮")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"an-niu-cha-cao"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#an-niu-cha-cao"}},[e._v("¶")]),e._v(" 按钮插槽")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"biao-ge-xing-bian-ji"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#biao-ge-xing-bian-ji"}},[e._v("¶")]),e._v(" 表格行编辑")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"table-attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#table-attributes"}},[e._v("¶")]),e._v(" Table Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("columns")]),n("td",[e._v("表格列,详见字段属性说明")]),n("td",[n("code",[e._v("Array<Object>")])]),n("td",[n("code",[e._v("[]")])])]),n("tr",[n("td",[e._v("buttons")]),n("td",[e._v("表格上方的按钮，详见按钮字符说明")]),n("td",[n("code",[e._v("Array<Object>")])]),n("td",[n("code",[e._v("[]")])])]),n("tr",[n("td",[e._v("pagination")]),n("td",[e._v("是否启用分页")]),n("td",[n("code",[e._v("Boolean")])]),n("td",[n("code",[e._v("false")])])]),n("tr",[n("td",[e._v("pageSize")]),n("td",[e._v("分页后每页条数")]),n("td",[n("code",[e._v("Number")])]),n("td",[n("code",[e._v("10")])])]),n("tr",[n("td",[e._v("total")]),n("td",[e._v("分页后数据总条数")]),n("td",[n("code",[e._v("Number")])]),n("td",[n("code",[e._v("0")])])]),n("tr",[n("td",[e._v("currentPage")]),n("td",[e._v("分页后当前页码")]),n("td",[n("code",[e._v("Number")])]),n("td",[n("code",[e._v("0")])])]),n("tr",[n("td",[e._v("selectable")]),n("td",[e._v("表格是否显示复选框")]),n("td",[n("code",[e._v("Boolean")])]),n("td",[n("code",[e._v("true")])])]),n("tr",[n("td",[e._v("sequence")]),n("td",[e._v("表格前是否显示序号列")]),n("td",[n("code",[e._v("Boolean")])]),n("td",[n("code",[e._v("false")])])]),n("tr",[n("td",[e._v("height")]),n("td",[e._v("表格高度,只有在特定情况下使用")]),n("td",[e._v("`Number")]),n("td",[e._v("String")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"table-event"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#table-event"}},[e._v("¶")]),e._v(" Table Event")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("em",[e._v("表格除了以下事件外，可以使用element ui 表格组件的其他所有事件")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("事件名")]),n("th",[e._v("说明")]),n("th",[e._v("参数")])])]),n("tbody",[n("tr",[n("td",[e._v("query")]),n("td",[e._v("有搜索字段后点击搜索按钮触发")]),n("td",[n("code",[e._v("formData")]),e._v(":输入的搜索条件")])]),n("tr",[n("td",[e._v("page-change")]),n("td",[e._v("用户修改分页条数，页码等触发")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("selection-change")]),n("td",[e._v("用户修改复选框选中的行时触发")]),n("td",[n("code",[e._v("selection")]),e._v(": 选中的行数据")])]),n("tr",[n("td",[e._v("current-change")]),n("td",[e._v("用户点击行时触发")]),n("td",[n("code",[e._v("current")]),e._v(": 点击的行数据")])]),n("tr",[n("td",[e._v("sort-change")]),n("td",[e._v("在启用表头排序后排序状态发生变化触发")]),n("td",[e._v("-")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"table-function"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#table-function"}},[e._v("¶")]),e._v(" Table Function")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("方法名")]),n("th",[e._v("说明")]),n("th",[e._v("参数")]),n("th",[e._v("返回值")])])]),n("tbody",[n("tr",[n("td",[e._v("startEditRow")]),n("td",[e._v("开始行编辑")]),n("td",[n("code",[e._v("index")]),e._v(": 编辑的行索引")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("endEditRow")]),n("td",[e._v("结束行编辑")]),n("td",[n("code",[e._v("callback(valid, data, rows)")]),e._v(": 回调函数， valid: 行编辑验证是否成功 data: 验证成功行编辑数据，失败时为失败原因 rows: 编辑的这一行的原始数据")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("isEditRow")]),n("td",[e._v("当前表格是否正在行编辑")]),n("td",[e._v("-")]),n("td",[n("code",[e._v("result:Boolean")])])]),n("tr",[n("td",[e._v("cancelEditRow")]),n("td",[e._v("取消行编辑")]),n("td",[e._v("-")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("getSelectionRows")]),n("td",[e._v("获取复选框选中的行")]),n("td",[e._v("-")]),n("td",[n("code",[e._v("rows:Array<row>")])])]),n("tr",[n("td",[e._v("getCurrentRow")]),n("td",[e._v("获取点击行选中的行")]),n("td",[e._v("-")]),n("td",[n("code",[e._v("row:Object")])])]),n("tr",[n("td",[e._v("setCurrentRow")]),n("td",[e._v("单行选中时设置选中的行")]),n("td",[n("code",[e._v("row:Object")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("getEditFieldValues")]),n("td",[e._v("获取正在编辑的行的数据")]),n("td",[e._v("-")]),n("td",[n("code",[e._v("data:Object")])])]),n("tr",[n("td",[e._v("setEditFieldValues")]),n("td",[e._v("设置正在编辑行的数据")]),n("td",[n("code",[e._v("data:Object")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("toggleRowSelection")]),n("td",[e._v("启用复选后切换行的选中状态")]),n("td",[n("code",[e._v("row: Object, select: Boolean")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("resetQueryFields")]),n("td",[e._v("重置搜索条件")]),n("td",[e._v("-")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("doLayout")]),n("td",[e._v("重新布局表格,当表格父容器由隐藏状态变为显示时，可能表格布局会错乱")]),n("td",[e._v("-")]),n("td",[e._v("-")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"slot"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#slot"}},[e._v("¶")]),e._v(" Slot")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("插槽")]),n("th",[e._v("说明")]),n("th",[e._v("参数")])])]),n("tbody",[n("tr",[n("td",[e._v("column")]),n("td",[e._v("表格列插槽，可以自定义表格列渲染方式")]),n("td",[n("code",[e._v("{row,column,prop,cellValue,$index,field}")]),e._v(" "),n("code",[e._v("field")]),e._v("为行编辑字段信息")])]),n("tr",[n("td",[e._v("header")]),n("td",[e._v("自定义表格表头显示方式")]),n("td",[n("code",[e._v("{label,prop,column, $index, field }")])])]),n("tr",[n("td",[e._v("button")]),n("td",[e._v("自定义表头顶部按钮")]),n("td",[n("code",[e._v("{button, selectedRow}")]),e._v(" "),n("code",[e._v("selectedRow")]),e._v("为选中的表格行数据")])]),n("tr",[n("td",[e._v("toolbar")]),n("td",[e._v("自定义顶部工具条, 工具条会放在左侧按钮与右侧搜索区域中间")]),n("td",[e._v("-")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"column-attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#column-attributes"}},[e._v("¶")]),e._v(" Column Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("em",[e._v("列属性除以下属性外，elementui 列其他属性均可使用")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("label")]),n("td",[e._v("列名")]),n("td",[n("code",[e._v("String")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("prop")]),n("td",[e._v("列属性")]),n("td",[n("code",[e._v("String")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("width")]),n("td",[e._v("表头宽度")]),n("td",[n("code",[e._v("Number")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("sortable")]),n("td",[e._v("是否排序列")]),n("td",[n("code",[e._v("Boolean")])]),n("td",[n("code",[e._v("false")])])]),n("tr",[n("td",[e._v("formatter")]),n("td",[e._v("单个元格式化")]),n("td",[n("code",[e._v("(row,column,cellValue):String")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("nests")]),n("td",[e._v("嵌套列")]),n("td",[n("code",[e._v("Array<Column>")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("events")]),n("td",[e._v("单元格事件，见elementui单元格事件")]),n("td",[n("code",[e._v("Object<Event>")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("actions")]),n("td",[e._v("操作列，详见操作列属性")]),n("td",[n("code",[e._v("Array<Object> ")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("editable")]),n("td",[e._v("是否可编辑行")]),n("td",[n("code",[e._v("Boolean")])]),n("td",[n("code",[e._v("false")])])]),n("tr",[n("td",[e._v("field")]),n("td",[e._v("行编辑字符，详见行编辑字段属性")]),n("td",[n("code",[e._v("Object")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("beforeEdit")]),n("td",[e._v("当前单元格开启编辑时调用，返回true则开启编辑")]),n("td",[n("code",[e._v("(row,column,cellValue,index):Boolean")])]),n("td")]),n("tr",[n("td",[e._v("useSlot")]),n("td",[e._v("是否在当前列使用插槽，插槽名称为 "),n("code",[e._v("column")])]),n("td",[n("code",[e._v("Boolean")])]),n("td",[n("code",[e._v("false")])])]),n("tr",[n("td",[e._v("hidden")]),n("td",[e._v("是否隐藏当前列")]),n("td",[e._v("`Boolean")]),n("td",[e._v("Function`")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"table-headbtn-attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#table-headbtn-attributes"}},[e._v("¶")]),e._v(" Table HeadBtn Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("em",[e._v("表头按钮除以下属性外，elementui 按钮其他属性均可使用")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("id")]),n("td",[e._v("按钮唯一标识，必填")]),n("td",[e._v("`String")]),n("td",[e._v("Number`")])]),n("tr",[n("td",[e._v("text")]),n("td",[e._v("按钮显示文字")]),n("td",[n("code",[e._v("String")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("icon")]),n("td",[e._v("按钮显示图标")]),n("td",[n("code",[e._v("String")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("click")]),n("td",[e._v("点击按钮事件,传入选中的行数据")]),n("td",[n("code",[e._v("(rows):void")])]),n("td",[e._v("-")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h4",{attrs:{id:"row-button-attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#row-button-attributes"}},[e._v("¶")]),e._v(" row Button Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("id")]),n("td",[e._v("按钮唯一标识，必填")]),n("td",[e._v("`String")]),n("td",[e._v("Number`")])]),n("tr",[n("td",[e._v("text")]),n("td",[e._v("按钮冒泡显示的文字")]),n("td",[n("code",[e._v("String")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("icon")]),n("td",[e._v("按钮图标，必填")]),n("td",[n("code",[e._v("String")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("before")]),n("td",[e._v("按钮渲染前调用，返回false不渲染按钮")]),n("td",[n("code",[e._v("(row,column,index):Boolean")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("click")]),n("td",[e._v("点击按钮事件")]),n("td",[n("code",[e._v("(row,column,index):void")])]),n("td",[e._v("-")])])])])}],l=n("0b38"),s=(n("c87f"),n("cfce"),n("8b85"),n("ef14"),n("868d"),n("8d0d"),n("c78b"),n("bdf7"),n("11ed"),{name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",{staticStyle:{height:"100px"}},[n("fst-table",{attrs:{columns:e.columns,data:e.data,pagination:!1}})],1)]],2)},t=[],n={data:function(){return{columns:Object.freeze([{label:"姓名",prop:"name"},{label:"性别",prop:"sex",formatter:function(e,t,n){return 1===n?"男":"女"}},{label:"年龄",prop:"age"}]),data:[{name:"森林",sex:1,age:18}],selectable:!0,sequence:!0}}};return Object(l["a"])({render:e,staticRenderFns:t},n)}(),"element-demo1":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("fst-table",{directives:[{name:"loading",rawName:"v-loading",value:e.loading,expression:"loading"}],attrs:{columns:e.columns,data:e.data,"current-page":e.currentPage,"page-size":e.pageSize,total:e.total,height:"auto"},on:{"update:currentPage":function(t){e.currentPage=t},"update:current-page":function(t){e.currentPage=t},"update:pageSize":function(t){e.pageSize=t},"update:page-size":function(t){e.pageSize=t},"page-change":e.$_handlePageChange}})]],2)},t=[],n={data:function(){return{columns:Object.freeze([{label:"姓名",prop:"name"},{label:"性别",prop:"sex",formatter:function(e,t,n){return 1===n?"男":"女"}},{label:"年龄",prop:"age"}]),data:[],currentPage:1,pageSize:10,total:0,loading:!1}},created:function(){this.loadData()},methods:{loadData:function(){var e=this;this.loading=!0,setTimeout((function(){e.total=40;var t=e.currentPage,n=e.pageSize;e.data=new Array(n).fill({}).map((function(e,n){return{name:"森林".concat(t+10*(n+1)),sex:Math.random()>.5?1:0,age:Math.floor(100*Math.random())}})),e.loading=!1}),1e3)},$_handlePageChange:function(){console.log(this.pageSize,this.currentPage),this.loadData()}}};return Object(l["a"])({render:e,staticRenderFns:t},n)}(),"element-demo2":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",{staticStyle:{height:"300px"}},[n("fst-table",{directives:[{name:"loading",rawName:"v-loading",value:e.loading,expression:"loading"}],attrs:{columns:e.columns,data:e.data,"current-page":e.currentPage,"page-size":e.pageSize,total:e.total,buttons:e.buttons},on:{"update:currentPage":function(t){e.currentPage=t},"update:current-page":function(t){e.currentPage=t},"update:pageSize":function(t){e.pageSize=t},"update:page-size":function(t){e.pageSize=t},"page-change":e.$_handlePageChange}})],1)]],2)},t=[],a={data:function(){var e=this;return{columns:Object.freeze([{width:220,label:"姓名",prop:"name"},{label:"性别",prop:"sex",formatter:function(e,t,n){return 1===n?"男":"女"}},{label:"年龄",prop:"age"},{label:"公众号",prop:"officialAccount"},{width:180,label:"操作",actions:[{id:"follow",text:"添加好友",click:this.$_handleFollowAuthor},{id:"edit",text:"编辑",before:function(e){return e.age<40},click:this.$_handleEdit},{id:"delete",text:"删除",icon:"el-icon-delete",disabled:function(e){return 0===e.sex},click:function(){e.$alert("女生被禁止删除了")}}]}]),data:[],currentPage:1,pageSize:10,total:0,loading:!1,buttons:Object.freeze([{id:"add",text:"新增",type:"primary",icon:"el-icon-circle-plus",click:this.$_handleAdd},{id:"delete",text:"删除",disabled:function(e){return!e.length},click:this.$_handleRemove},{id:"auth",text:"这个按钮根据权限显示",before:function(){return!0}},{id:"dropdown",text:"下拉按钮",children:[{id:"moveUp",text:"上移",icon:"el-icon-arrow-up",click:function(){console.log("上移")}},{id:"moveDown",text:"下移",icon:"el-icon-arrow-down",disabled:function(e){return!e.length},click:function(){console.log("下移")}}]}])}},created:function(){this.loadData()},methods:{loadData:function(){var e=this;this.loading=!0,setTimeout((function(){e.total=40;var t=e.currentPage,n=e.pageSize;e.data=new Array(n).fill({}).map((function(e,n){return{id:t+10*(n+1),name:"森林".concat(t+10*(n+1)),sex:Math.random()>.5?1:0,age:Math.floor(100*Math.random()),officialAccount:"前端Sir"}})),e.loading=!1}),1e3)},$_handlePageChange:function(){console.log(this.pageSize,this.currentPage),this.loadData()},$_handleAdd:function(){this.$alert("点击了新增按钮")},$_handleRemove:function(e){var t=e.map((function(e){var t=e.id;return t}));this.$alert("要删除的行id为".concat(t.join(",")))},$_handleFollowAuthor:function(){var e=n("a76d"),t=this.$createElement;this.$msgbox({title:"扫码添加",message:t("img",{attrs:{src:e},style:{width:"400px"}})})},$_handleEdit:function(e,t){console.log(e,t),this.$alert("点击了姓名为【".concat(e.name,"】的行上的按钮"))}}};return Object(l["a"])({render:e,staticRenderFns:t},a)}(),"element-demo3":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",{staticStyle:{height:"300px"}},[n("fst-table",{directives:[{name:"loading",rawName:"v-loading",value:e.loading,expression:"loading"}],attrs:{columns:e.columns,data:e.data,"current-page":e.currentPage,"page-size":e.pageSize,total:e.total,buttons:e.buttons},on:{"update:currentPage":function(t){e.currentPage=t},"update:current-page":function(t){e.currentPage=t},"update:pageSize":function(t){e.pageSize=t},"update:page-size":function(t){e.pageSize=t},"page-change":e.$_handlePageChange},scopedSlots:e._u([{key:"button",fn:function(t){var a=t.id;return["slot"===a?[n("el-button",{attrs:{type:"primary",size:"small"}},[e._v("\n            自定义顶部按钮\n          ")])]:e._e()]}},{key:"action",fn:function(t){var a=t.id;return["slot"===a?[n("el-button",{attrs:{type:"text",size:"small"}},[e._v("\n            自定义操作按钮\n          ")])]:e._e()]}}])})],1)]],2)},t=[],n={data:function(){return{columns:Object.freeze([{width:220,label:"姓名",prop:"name"},{label:"性别",prop:"sex",formatter:function(e,t,n){return 1===n?"男":"女"}},{label:"年龄",prop:"age"},{label:"好友",prop:"officialAccount"},{width:220,label:"操作",actions:[{id:"follow",text:"添加好友",click:this.$_handleFollowAuthor},{id:"slot",useSlot:!0}]}]),data:[],currentPage:1,pageSize:10,total:0,loading:!1,buttons:Object.freeze([{id:"add",text:"新增",type:"primary",icon:"el-icon-circle-plus",click:this.$_handleAdd},{id:"slot",useSlot:!0}])}},created:function(){this.loadData()},methods:{loadData:function(){var e=this;this.loading=!0,setTimeout((function(){e.total=40;var t=e.currentPage,n=e.pageSize;e.data=new Array(n).fill({}).map((function(e,n){return{id:t+10*(n+1),name:"森林".concat(t+10*(n+1)),sex:Math.random()>.5?1:0,age:Math.floor(100*Math.random()),officialAccount:"前端Sir"}})),e.loading=!1}),1e3)},$_handlePageChange:function(){console.log(this.pageSize,this.currentPage),this.loadData()},$_handleAdd:function(){this.$alert("点击了新增按钮")}}};return Object(l["a"])({render:e,staticRenderFns:t},n)}(),"element-demo4":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",{staticStyle:{height:"150px"}},[n("fst-table",{ref:"table",attrs:{columns:e.columns,data:e.data,pagination:!1,selectable:e.selectable,sequence:e.sequence}})],1)]],2)},t=[],n={data:function(){var e=this;return{columns:Object.freeze([{label:"姓名",prop:"name",editable:!0,field:{componentType:"input",rules:[{required:!0,message:"请输入姓名"}]}},{label:"性别",prop:"sex",formatter:function(e,t,n){return"1"===n?"男":"女"},editable:!0,field:{componentType:"select",options:[{label:"男",value:"1"},{label:"女",value:"0"}]}},{label:"年龄",prop:"age",editable:!0,field:{componentType:"number"}},{label:"操作",actions:[{id:"edit",text:"编辑",before:function(t){return!e.editIds.includes(t.id)},click:this.$_handleEdit},{id:"save",text:"保存",before:function(t){return e.editIds.includes(t.id)},click:this.$_handleSave}]}]),data:[{id:"0",name:"森林",sex:"1",age:18},{id:"1",name:"森林1",sex:"0",age:18}],selectable:!0,sequence:!0,editIds:[]}},methods:{$_handleEdit:function(e){this.$refs.table.startEditRow(e.id),this.editIds.push(e.id)},$_handleSave:function(e){var t=this;this.$refs.table.endEditRow(e.id,(function(n,a,r){if(n){var l=t.editIds.findIndex((function(t){return t===e.id}));t.editIds.splice(l,1)}else console.log(a),t.$message.error(a.message)}))}}};return Object(l["a"])({render:e,staticRenderFns:t},n)}()}}),o=s,i=n("2be6"),c=Object(i["a"])(o,a,r,!1,null,null,null);t["default"]=c.exports},"828a":function(e,t,n){var a={"./docs/i18n.md":"5111","./docs/icon.md":"9bcd","./docs/installation.md":"acec","./docs/quickstart.md":"0dae","./docs/search-tab.md":"2496","./docs/table.md":"6fb1","./docs/tree-select.md":"cea0"};function r(e){var t=l(e);return n(t)}function l(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=l,e.exports=r,r.id="828a"},"9bcd":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[e._m(0),n("p",[e._v("提供了一套常用的图标集合。")]),e._m(1),e._m(2),n("demo-block",[n("template",{slot:"source"},[n("element-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<i class="el-icon-edit"></i>\n<i class="el-icon-share"></i>\n<i class="el-icon-delete"></i>\n<el-button type="primary" icon="el-icon-search">搜索</el-button>\n\n')])])])],2),e._m(3),n("ul",{staticClass:"icon-list"},e._l(e.$icon,(function(t){return n("li",{key:t},[n("span",[n("i",{class:"el-icon-"+t}),n("span",{staticClass:"icon-name"},[e._v(e._s("el-icon-"+t))])])])})),0)],1)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"icon-tu-biao"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#icon-tu-biao"}},[e._v("¶")]),e._v(" Icon 图标")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"shi-yong-fang-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shi-yong-fang-fa"}},[e._v("¶")]),e._v(" 使用方法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("直接通过设置类名为 "),n("code",[e._v("el-icon-iconName")]),e._v(" 来使用即可。例如：")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"tu-biao-ji-he"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tu-biao-ji-he"}},[e._v("¶")]),e._v(" 图标集合")])}],l=n("0b38"),s={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("i",{staticClass:"el-icon-edit"}),e._v(" "),n("i",{staticClass:"el-icon-share"}),e._v(" "),n("i",{staticClass:"el-icon-delete"}),e._v(" "),n("el-button",{attrs:{type:"primary",icon:"el-icon-search"}},[e._v("搜索")])],1)},t=[],n={};return Object(l["a"])({render:e,staticRenderFns:t},n)}()}},o=s,i=n("2be6"),c=Object(i["a"])(o,a,r,!1,null,null,null);t["default"]=c.exports},a76d:function(e,t,n){e.exports=n.p+"img/qrcode.85df5887.png"},acec:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[n("h2",{attrs:{id:"an-zhuang"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#an-zhuang"}},[e._v("¶")]),e._v(" 安装")]),n("h3",{attrs:{id:"npm-an-zhuang"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-an-zhuang"}},[e._v("¶")]),e._v(" npm 安装")]),n("p",[e._v("推荐使用 npm 的方式安装，它能更好地和 "),n("a",{attrs:{href:"https://webpack.js.org/"}},[e._v("webpack")]),e._v(" 打包工具配合使用。")]),n("pre",[n("code",{staticClass:"language-shell"},[e._v("npm i fst-ui -S\n")])])])}],l=n("2be6"),s={},o=Object(l["a"])(s,a,r,!1,null,null,null);t["default"]=o.exports},cea0:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[e._m(0),e._m(1),e._m(2),e._m(3),n("demo-block",[n("div",[n("p",[e._v("会根据values的类型区分单选或者多选，selectParams 为el-select 参数， treeParams为 el-tree 参数")])]),n("template",{slot:"source"},[n("element-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <fst-tree-select  v-model=\"values\" :selectParams=\"selectParams\" :treeParams=\"treeParams\"></fst-tree-select>\n</template>\n\n<script>\n  export default { \n    data() {\n      return {\n        values: '',\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          clickParent: true,\n          data: [{\n            label: `节点：1`,\n            id: 1,\n            children: [\n              {\n                label: `节点：2`,\n                id: 2,\n              }\n            ]\n          }],\n          props: {\n            children: 'children',\n            label: 'label',\n            value: 'id'\n        },\n      }\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(4),e._m(5),n("demo-block",[n("div",[n("p",[e._v("会根据values的类型区分单选或者多选，selectParams 为el-select 参数， treeParams为 el-tree 参数")])]),n("template",{slot:"source"},[n("element-demo1")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <fst-tree-select  v-model=\"values\" :selectParams=\"selectParams\" :treeParams=\"treeParams\"></fst-tree-select>\n</template>\n\n<script>\n  export default { \n    data() {\n      return {\n        values: [],\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          data: [{\n            label: `节点：1`,\n            id: 1,\n            children: [\n              {\n                label: `节点：2`,\n                id: 2,\n              }\n            ]\n          }],\n          props: {\n            children: 'children',\n            label: 'label',\n            value: 'id'\n        },\n      }\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(6),n("p",[e._v("更新、渲染")]),n("demo-block",[n("div",[n("p",[e._v("调用组件"),n("code",[e._v("treeDataUpdateFun")]),e._v("可更新tree数据，"),n("code",[e._v("renderContent")]),e._v("可自定义树节点绘制")])]),n("template",{slot:"source"},[n("element-demo2")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <fst-tree-select  v-model=\"values\" :selectParams=\"selectParams\" :treeParams=\"treeParams\" ref=\"treeSelect\"></fst-tree-select>\n</template>\n\n<script>\n  export default { \n    data() {\n      return {\n        values: [],\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          clickParent: false,\n          data: [],\n          leafOnly: true,\n          renderContent: this._renderFun,\n          props: {\n            children: 'children',\n            label: 'name',\n            rootId: '0',\n            disabled: 'disabled',\n            parentId: 'parentId',\n            value: 'id'\n          },\n       }\n     }\n   },\n   mounted() {\n      let data = [];\n      const { label, children, parentId, value, rootId } = this.treeParams.props;\n      for (let i = 0; i < 5; i++) {\n          let rootNode = {\n              [label]: `节点：${i}`,\n              [parentId]: rootId,\n              [value]: i,\n              [children]: []\n          };\n          for (let a = 0; a < 5; a++) {\n              let subId = `${rootNode[value]}_${a}`;\n              let subNode = {\n                  [label]: `子节点：${subId}`,\n                  [parentId]: rootNode[value],\n                  [value]: subId,\n                  [children]: []\n              };\n              for (let b = 0; b < 5; b++) {\n                  let endId = `${subId}_${b}`;\n                  let endNode = {\n                      [label]: `末级节点：${endId}`,\n                      [parentId]: subNode[value],\n                      [value]: endId,\n                      [children]: []\n                  };\n                  subNode[children].push(endNode);\n              }\n              rootNode[children].push(subNode);\n          }\n          data.push(rootNode);\n      }\n      this.$nextTick(() => {\n          this.$refs.treeSelect.treeDataUpdateFun(data);\n      });\n  },\n  methods: {\n    _renderFun(h, { node, data, store }) {\n      const { props, clickParent } = this.treeParams;\n      return (\n          <span class={['custom-tree-node', !clickParent && data[props.children] && data[props.children].length ? 'disabled' : null]}>\n              <span>{node.label}</span>\n          </span>\n      );\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(7),n("p",[e._v("搜索")]),n("demo-block",[n("div",[n("p",[e._v("配置"),n("code",[e._v("filterable:true")])])]),n("template",{slot:"source"},[n("element-demo3")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <fst-tree-select  v-model=\"values\" :selectParams=\"selectParams\" :treeParams=\"treeParams\" ref=\"treeSelect\"></fst-tree-select>\n</template>\n\n<script>\n  export default { \n    data() {\n      return {\n        values: [],\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          clickParent: true,\n          filterable: true,\n          // 只想要子节点，不需要父节点\n          leafOnly: true,\n          includeHalfChecked: false,\n          'check-strictly': false,\n          'default-expand-all': true,\n          'expand-on-click-node': false,\n          'render-content': this._renderFun,\n          props: {\n            children: 'children',\n            label: 'name',\n            rootId: '0',\n            disabled: 'disabled',\n            parentId: 'parentId',\n            value: 'id'\n          },\n       }\n     }\n   },\n   mounted() {\n      let data = [];\n      const { label, children, parentId, value, rootId } = this.treeParams.props;\n      for (let i = 0; i < 5; i++) {\n          let rootNode = {\n              [label]: `节点：${i}`,\n              [parentId]: rootId,\n              [value]: i,\n              [children]: []\n          };\n          for (let a = 0; a < 5; a++) {\n              let subId = `${rootNode[value]}_${a}`;\n              let subNode = {\n                  [label]: `子节点：${subId}`,\n                  [parentId]: rootNode[value],\n                  [value]: subId,\n                  [children]: []\n              };\n              for (let b = 0; b < 5; b++) {\n                  let endId = `${subId}_${b}`;\n                  let endNode = {\n                      [label]: `末级节点：${endId}`,\n                      [parentId]: subNode[value],\n                      [value]: endId,\n                      [children]: []\n                  };\n                  subNode[children].push(endNode);\n              }\n              rootNode[children].push(subNode);\n          }\n          data.push(rootNode);\n      }\n      this.$nextTick(() => {\n          this.$refs.treeSelect.treeDataUpdateFun(data);\n      });\n  },\n  methods: {\n    _renderFun(h, { node, data, store }) {\n      const { props, clickParent } = this.treeParams;\n      return (\n          <span class={['custom-tree-node', !clickParent && data[props.children] && data[props.children].length ? 'disabled' : null]}>\n              <span>{node.label}</span>\n          </span>\n      );\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(8),e._m(9),e._m(10),e._m(11),e._m(12),e._m(13)],1)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"tree-select"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tree-select"}},[e._v("¶")]),e._v(" tree-select")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("开发者：（dawdler）"),n("br"),e._v(" 类似 Select 的选择控件，可选择的数据结构是一个树形结构时，可以使用 TreeSelect，例如公司层级、学科系统、分类目录等等。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"dan-xuan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dan-xuan"}},[e._v("¶")]),e._v(" 单选")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("初始"),n("code",[e._v("fst-tree-select")]),e._v("组件")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"duo-xuan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#duo-xuan"}},[e._v("¶")]),e._v(" 多选")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("treeParams")]),e._v("参数")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"shou-dong-geng-xin-tree-jie-dian-shu-ju-zi-ding-yi-xuan-ran"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shou-dong-geng-xin-tree-jie-dian-shu-ju-zi-ding-yi-xuan-ran"}},[e._v("¶")]),e._v(" 手动更新tree节点数据，自定义渲染")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"zhi-chi-tree-sou-suo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#zhi-chi-tree-sou-suo"}},[e._v("¶")]),e._v(" 支持tree搜索")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"props"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[e._v("¶")]),e._v(" Props")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Name")]),n("th",[e._v("Description")]),n("th",[e._v("Type")]),n("th",[e._v("Required")]),n("th",[e._v("Default")])])]),n("tbody",[n("tr",[n("td",[e._v("value")]),n("td",[e._v("v-model,存储的是treeParams.data里面的id")]),n("td",[n("code",[e._v("String")]),e._v(" / "),n("code",[e._v("Array")]),e._v(" / "),n("code",[e._v("Number")])]),n("td",[n("code",[e._v("false")])]),n("td",[n("code",[e._v("''")])])]),n("tr",[n("td",[e._v("styles")]),n("td",[e._v("el-select样式")]),n("td",[n("code",[e._v("Object")])]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("{}")])]),n("tr",[n("td",[e._v("selectClass")]),n("td",[e._v("下拉框 挂类")]),n("td",[n("code",[e._v("String")])]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("popoverClass")]),n("td",[e._v("popover 挂类")]),n("td",[n("code",[e._v("String")])]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("disabled")]),n("td",[e._v("是否禁用文本框")]),n("td",[n("code",[e._v("Boolean")])]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("false")])]),n("tr",[n("td",[e._v("placement")]),n("td",[e._v("弹出框位置")]),n("td",[n("code",[e._v("String")])]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("bottom")])]),n("tr",[n("td",[e._v("treeRenderFun")]),n("td",[e._v("树渲染方法，具体参考el-tree Function(h, { node, data, store }) {}")]),n("td",[n("code",[e._v("Function")])]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("filterNodeMethod")]),n("td",[e._v("搜索过滤方法，具体参考el-tree Function(h, { value, data, node }) {}")]),n("td",[n("code",[e._v("Function")])]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("selectParams")]),n("td",[e._v("文本框参数，几乎支持el-select所有的API"),n("br"),e._v(" 取消参数："),n("br"),e._v(" 设定下拉框的弹出框隐藏："),n("br"),e._v(" "),n("code",[e._v(':popper-append-to-body="false"')]),e._v(" "),n("br"),e._v(" 搜索从弹出框里面执行： "),n("br"),e._v(" "),n("code",[e._v('filterable="false"')])]),n("td",[n("code",[e._v("Object")])]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("Object默认参数："),n("br"),n("br"),e._v(" 是否可以清空选项："),n("br"),e._v(" "),n("code",[e._v("clearable: true,")]),n("br"),n("br"),e._v(" 是否禁用："),n("br"),e._v(" "),n("code",[e._v("disabled: false,")]),n("br"),n("br"),e._v(" 搜索框placeholder文字："),n("br"),e._v(" "),n("code",[e._v("placeholder: '请选择',")]),n("br"),n("br")])]),n("tr",[n("td",[e._v("treeParams")]),n("td",[e._v("下拉树参数，几乎支持el-tree所有的API"),n("br"),e._v(" 取消参数:"),n("br"),e._v(" "),n("code",[e._v(':show-checkbox="selectParams.multiple"')]),n("br"),e._v(" 使用下拉框参数multiple判断是否对树进行多选"),n("br"),e._v(" 取消对el-tree的人为传参show-checkbox"),n("br"),e._v(" "),n("code",[e._v(':node-key="propsValue"')]),e._v(" 自动获取treeParams.props.value"),n("br"),e._v(" "),n("code",[e._v(':draggable="false"')]),e._v(" 屏蔽拖动")]),n("td",[n("code",[e._v("Object")])]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("Object默认参数："),n("br"),n("br"),e._v(" 在有子级的情况下是否点击父级关闭弹出框,false 只能点击子级关闭弹出框："),n("br"),n("br"),e._v(" "),n("code",[e._v("clickParent: false")]),n("br"),n("br"),e._v(" 是否显示搜索框："),n("br"),n("br"),e._v(" "),n("code",[e._v("filterable: false")]),n("br"),n("br"),e._v(" 是否只是叶子节点："),n("br"),n("br"),e._v(" "),n("code",[e._v("leafOnly: false")]),n("br"),n("br"),e._v(" 是否包含半选节点："),n("br"),n("br"),e._v(" "),n("code",[e._v("includeHalfChecked: false")]),n("br"),n("br"),e._v(" 下拉树的数据："),n("br"),n("br"),e._v(" "),n("code",[e._v("data:[]")]),n("br"),n("br"),e._v(" 下拉树的props："),n("br"),n("br"),e._v(" "),n("code",[e._v("props: {")]),n("br"),e._v(" "),n("code",[e._v("children: 'children',")]),n("br"),e._v(" "),n("code",[e._v("label: 'name',")]),n("br"),e._v(" "),n("code",[e._v("value: 'flowId',")]),n("br"),e._v(" "),n("code",[e._v("disabled: 'disabled'")]),n("br"),e._v(" "),n("code",[e._v("}")])])]),n("tr",[n("td",[e._v("children")]),n("td",[e._v("-")]),n("td",[e._v("—")]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("label")]),n("td",[e._v("-")]),n("td",[e._v("—")]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("code")]),n("td",[e._v("-")]),n("td",[e._v("—")]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("value")]),n("td",[e._v("-")]),n("td",[e._v("—")]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("disabled")]),n("td",[e._v("-")]),n("td",[e._v("—")]),n("td",[n("code",[e._v("false")])]),n("td",[e._v("-")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"events"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("¶")]),e._v(" Events")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Event Name")]),n("th",[e._v("Description")]),n("th",[e._v("Parameters")])])]),n("tbody",[n("tr",[n("td",[e._v("searchFun")]),n("td",[e._v("对外抛出搜索方法，自行判断是走后台查询，还是前端过滤"),n("br"),e._v(" 前端过滤：this.$refs.treeSelect.$refs.tree.filter(value);"),n("br"),e._v(" 后台查询：this.$refs.treeSelect.treeDataUpdateFun(data);")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("node-click")]),n("td",[e._v("点击节点，对外抛出 "),n("code",[e._v("data, node, vm")]),n("br"),e._v(" "),n("code",[e._v("data:")]),e._v(" 当前点击的节点数据"),n("br"),e._v(" "),n("code",[e._v("node:")]),e._v(" 当前点击的node"),n("br"),e._v(" "),n("code",[e._v("vm:")]),e._v(" 当前组件的vm")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("check")]),n("td",[e._v("点击复选框，对外抛出 "),n("code",[e._v("data, node, vm")]),n("br"),e._v(" "),n("code",[e._v("data:")]),e._v(" 当前点击的节点数据"),n("br"),e._v(" "),n("code",[e._v("node:")]),e._v(" 当前点击的node"),n("br"),e._v(" "),n("code",[e._v("vm:")]),e._v(" 当前组件的vm")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("removeTag")]),n("td",[e._v("-")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("input")]),n("td",[e._v("下拉框清空，对外抛出``this.$emit('input', multiple ? [] : '');`")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("select-clear")]),n("td",[e._v("下拉框清空，对外抛出``this.$emit('select-clear');`")]),n("td",[e._v("-")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"methods"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("¶")]),e._v(" Methods")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Method")]),n("th",[e._v("Description")]),n("th",[e._v("Parameters")])])]),n("tbody",[n("tr",[n("td",[e._v("treeDataUpdateFun")]),n("td",[e._v("树列表更新数据")]),n("td",[e._v("Array")])]),n("tr",[n("td",[e._v("filterFun")]),n("td",[e._v("本地过滤方法")]),n("td",[e._v("String")])])])])}],l=n("ce37"),s=n("0b38"),o=(n("ef1f"),n("918c"),n("d86f"),{name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("fst-tree-select",{attrs:{selectParams:e.selectParams,treeParams:e.treeParams},model:{value:e.values,callback:function(t){e.values=t},expression:"values"}})]],2)},t=[],n={data:function(){return{values:"",selectParams:{clearable:!0,placeholder:"请选择"},treeParams:{clickParent:!0,data:[{label:"节点：1",id:1,children:[{label:"节点：2",id:2}]}],props:{children:"children",label:"label",value:"id"}}}}};return Object(s["a"])({render:e,staticRenderFns:t},n)}(),"element-demo1":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("fst-tree-select",{attrs:{selectParams:e.selectParams,treeParams:e.treeParams},model:{value:e.values,callback:function(t){e.values=t},expression:"values"}})]],2)},t=[],n={data:function(){return{values:[],selectParams:{clearable:!0,placeholder:"请选择"},treeParams:{data:[{label:"节点：1",id:1,children:[{label:"节点：2",id:2}]}],props:{children:"children",label:"label",value:"id"}}}}};return Object(s["a"])({render:e,staticRenderFns:t},n)}(),"element-demo2":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("fst-tree-select",{ref:"treeSelect",attrs:{selectParams:e.selectParams,treeParams:e.treeParams},model:{value:e.values,callback:function(t){e.values=t},expression:"values"}})]],2)},t=[],n={data:function(){return{values:[],selectParams:{clearable:!0,placeholder:"请选择"},treeParams:{clickParent:!1,data:[],leafOnly:!0,renderContent:this._renderFun,props:{children:"children",label:"name",rootId:"0",disabled:"disabled",parentId:"parentId",value:"id"}}}},mounted:function(){for(var e=this,t=[],n=this.treeParams.props,a=n.label,r=n.children,s=n.parentId,o=n.value,i=n.rootId,c=0;c<5;c++){for(var d,u=(d={},Object(l["a"])(d,a,"节点：".concat(c)),Object(l["a"])(d,s,i),Object(l["a"])(d,o,c),Object(l["a"])(d,r,[]),d),v=0;v<5;v++){for(var _,h="".concat(u[o],"_").concat(v),m=(_={},Object(l["a"])(_,a,"子节点：".concat(h)),Object(l["a"])(_,s,u[o]),Object(l["a"])(_,o,h),Object(l["a"])(_,r,[]),_),p=0;p<5;p++){var f,b="".concat(h,"_").concat(p),g=(f={},Object(l["a"])(f,a,"末级节点：".concat(b)),Object(l["a"])(f,s,m[o]),Object(l["a"])(f,o,b),Object(l["a"])(f,r,[]),f);m[r].push(g)}u[r].push(m)}t.push(u)}this.$nextTick((function(){e.$refs.treeSelect.treeDataUpdateFun(t)}))},methods:{_renderFun:function(e,t){var n=t.node,a=t.data,r=(t.store,this.treeParams),l=r.props,s=r.clickParent;return e("span",{class:["custom-tree-node",!s&&a[l.children]&&a[l.children].length?"disabled":null]},[e("span",[n.label])])}}};return Object(s["a"])({render:e,staticRenderFns:t},n)}(),"element-demo3":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("fst-tree-select",{ref:"treeSelect",attrs:{selectParams:e.selectParams,treeParams:e.treeParams},model:{value:e.values,callback:function(t){e.values=t},expression:"values"}})]],2)},t=[],n={data:function(){return{values:[],selectParams:{clearable:!0,placeholder:"请选择"},treeParams:{clickParent:!0,filterable:!0,leafOnly:!0,includeHalfChecked:!1,"check-strictly":!1,"default-expand-all":!0,"expand-on-click-node":!1,"render-content":this._renderFun,props:{children:"children",label:"name",rootId:"0",disabled:"disabled",parentId:"parentId",value:"id"}}}},mounted:function(){for(var e=this,t=[],n=this.treeParams.props,a=n.label,r=n.children,s=n.parentId,o=n.value,i=n.rootId,c=0;c<5;c++){for(var d,u=(d={},Object(l["a"])(d,a,"节点：".concat(c)),Object(l["a"])(d,s,i),Object(l["a"])(d,o,c),Object(l["a"])(d,r,[]),d),v=0;v<5;v++){for(var _,h="".concat(u[o],"_").concat(v),m=(_={},Object(l["a"])(_,a,"子节点：".concat(h)),Object(l["a"])(_,s,u[o]),Object(l["a"])(_,o,h),Object(l["a"])(_,r,[]),_),p=0;p<5;p++){var f,b="".concat(h,"_").concat(p),g=(f={},Object(l["a"])(f,a,"末级节点：".concat(b)),Object(l["a"])(f,s,m[o]),Object(l["a"])(f,o,b),Object(l["a"])(f,r,[]),f);m[r].push(g)}u[r].push(m)}t.push(u)}this.$nextTick((function(){e.$refs.treeSelect.treeDataUpdateFun(t)}))},methods:{_renderFun:function(e,t){var n=t.node,a=t.data,r=(t.store,this.treeParams),l=r.props,s=r.clickParent;return e("span",{class:["custom-tree-node",!s&&a[l.children]&&a[l.children].length?"disabled":null]},[e("span",[n.label])])}}};return Object(s["a"])({render:e,staticRenderFns:t},n)}()}}),i=o,c=n("2be6"),d=Object(c["a"])(i,a,r,!1,null,null,null);t["default"]=d.exports}}]);
//# sourceMappingURL=chunk-83288ecc.0f1001b8.js.map