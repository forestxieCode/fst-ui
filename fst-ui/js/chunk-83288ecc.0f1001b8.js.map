{"version":3,"sources":["webpack:///./src/docs/quickstart.md?aa23","webpack:///./src/docs/quickstart.md","webpack:///./src/docs/search-tab.md?e8ff","webpack:///src/docs/search-tab.md","webpack:///./src/docs/search-tab.md?1a40","webpack:///./src/docs/search-tab.md","webpack:///./src/docs/i18n.md?0c6a","webpack:///./src/docs/i18n.md","webpack:///./src/docs/table.md?0b7e","webpack:///src/docs/table.md","webpack:///./src/docs/table.md?3176","webpack:///./src/docs/table.md","webpack:///./src sync ^\\.\\/docs.*\\.md$","webpack:///./src/docs/icon.md?8833","webpack:///src/docs/icon.md","webpack:///./src/docs/icon.md?90fb","webpack:///./src/docs/icon.md","webpack:///./src/assets/images/qrcode.png","webpack:///./src/docs/installation.md?eeb6","webpack:///./src/docs/installation.md","webpack:///./src/docs/tree-select.md?96b1","webpack:///src/docs/tree-select.md","webpack:///./src/docs/tree-select.md?d33c","webpack:///./src/docs/tree-select.md"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","_v","script","component","slot","pre","name","components","model","value","callback","expression","data","searchValue","id","democomponentExport","on","searchOption","type","autoAddAll","resourceFormat","shareType","require","defaultValue","methods","changeHandle","val","console","unfoldOption","unfold","request","stageId","url","linkage","subjectId","versionId","bookId","staticStyle","columns","label","prop","formatter","row","column","cellValue","sex","age","selectable","sequence","directives","rawName","currentPage","pageSize","total","loading","created","loadData","setTimeout","$_handlePageChange","width","actions","text","click","before","icon","disabled","buttons","children","officialAccount","$_handleAdd","$_handleRemove","rows","$_handleFollowAuthor","title","message","src","style","$_handleEdit","scopedSlots","key","fn","useSlot","ref","editable","field","componentType","rules","required","options","editIds","$_handleSave","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_l","class","_s","values","selectParams","clearable","placeholder","treeParams","clickParent","props","leafOnly","renderContent","rootId","parentId","mounted","i","subId","rootNode","endId","subNode","_renderFun","h","node","filterable","includeHalfChecked"],"mappings":"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AGA,CACAmB,UACApB,WACAqB,SACA,CACA9C,YACA+C,YACAC,iCAEA,CACAhD,UACAmE,gBAKArE,QAEAuC,cAEAC,YAEAC,QACAC,WACAY,uBACA,CAEApD,SACA+C,UACA3C,eACA8C,2BACAF,wBAEA,CACAhD,UACAmE,gBAKA1B,QAnEA,WAoEA,iBAEA/B,SAEAgC,SAFA,WAEA,WACA,gBACAC,uBACA,WACA,iCACA,gDACA,OACA3C,cACAR,6BACAuC,yBACAC,kCACAsB,4BAGA,eACA,MAEAV,mBAnBA,WAqBA/B,4CACA,iBAGA0C,YAzBA,WA0BA,0BAIA,uBACA/E,SACAQ,mBACAiB,GAjHA,GAmHA,2BAEA,yFAAAsB,aAAA,iCAAA6C,YAAAlF,OAAA,qGACA,KAGA,GACAY,KADA,WACA,WACA,OACA0B,uBACA,CACAC,WACAC,YACA2C,YACAC,OACAC,sBACAC,OACA,CACAC,YACAb,oBAKA,CACAnC,WACAC,WAEAC,UAJA,SAIAC,EAAAC,EAAAC,GACA,uBAEAuC,YACAC,OACAC,uBACAG,SACA,CACAjD,UACA9B,WAEA,CACA8B,UACA9B,cAKA,CACA8B,WACAC,WACA2C,YACAC,OACAC,yBAGA,CACA9C,WACAqB,SACA,CACA9C,UACA+C,UACAE,mBACA,iCAEAD,yBAEA,CACAhD,UACA+C,UACAE,mBACA,iCAEAD,6BAKAlD,MACA,CAEAE,OACAR,UACAuC,QACAC,QAEA,CAEAhC,OACAR,WACAuC,QACAC,SAIAC,cAEAC,YACAyC,aAGAjE,SACAqD,aADA,SACAnC,GAEA,oCAEA,yBAEAgD,aAPA,SAOAhD,GAAA,WACA,kDACA,MACA,0DACA,2BAGAf,eACA,kCAMA,uBACArC,SACAQ,mBACAiB,GA3HA,MCp5CuX,I,YCOnXZ,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,aAAAA,E,gCClBf,IAAIwF,EAAM,CACT,iBAAkB,OAClB,iBAAkB,OAClB,yBAA0B,OAC1B,uBAAwB,OACxB,uBAAwB,OACxB,kBAAmB,OACnB,wBAAyB,QAI1B,SAASC,EAAeC,GACvB,IAAI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","file":"js/chunk-83288ecc.0f1001b8.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content element-doc\"},[_c('h2',{attrs:{\"id\":\"kuai-su-shang-shou\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#kuai-su-shang-shou\"}},[_vm._v(\"¶\")]),_vm._v(\" 快速上手\")]),_c('p',[_vm._v(\"本节将介绍如何在项目中使用 Fst-ui。\")]),_c('h3',{attrs:{\"id\":\"yin-ru-fst-ui\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#yin-ru-fst-ui\"}},[_vm._v(\"¶\")]),_vm._v(\" 引入 Fst-ui\")]),_c('p',[_vm._v(\"你可以引入整个 Fst-ui，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Fst-ui。\")]),_c('h4',{attrs:{\"id\":\"wan-zheng-yin-ru\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#wan-zheng-yin-ru\"}},[_vm._v(\"¶\")]),_vm._v(\" 完整引入\")]),_c('p',[_vm._v(\"在 main.js 中写入以下内容：\")]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"import Vue from 'vue';\\nimport ElementUi from 'element-ui';\\nimport 'element-ui/lib/theme-chalk/index.css';\\nimport FstUi from 'fst-ui';\\nimport 'fst-ui/lib/theme-chalk/index.css';\\nimport App from './App.vue';\\n\\nVue.use(ElementUi);\\nVue.use(FstUi);\\n\\nnew Vue({\\n  el: '#app',\\n  render: h => h(App)\\n});\\n\")])]),_c('p',[_vm._v(\"以上代码便完成了 Fst-ui 的引入。需要注意的是，Fst-ui 是基于ElementUi的，需要在之后引入该组件库。\")]),_c('h4',{attrs:{\"id\":\"an-xu-yin-ru\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#an-xu-yin-ru\"}},[_vm._v(\"¶\")]),_vm._v(\" 按需引入\")]),_c('p',[_vm._v(\"借助 \"),_c('a',{attrs:{\"href\":\"https://github.com/QingWei-Li/babel-plugin-component\"}},[_vm._v(\"babel-plugin-component\")]),_vm._v(\"，我们可以只引入需要的组件，以达到减小项目体积的目的。\")]),_c('p',[_vm._v(\"首先，安装 babel-plugin-component：\")]),_c('pre',[_c('code',{staticClass:\"language-bash\"},[_vm._v(\"npm install babel-plugin-component -D\\n\")])]),_c('p',[_vm._v(\"然后，将 .babelrc 修改为：\")]),_c('pre',[_c('code',{staticClass:\"language-json\"},[_vm._v(\"{\\n  \\\"presets\\\": [[\\\"es2015\\\", { \\\"modules\\\": false }]],\\n  \\\"plugins\\\": [\\n    [\\n      \\\"component\\\",\\n      {\\n        \\\"libraryName\\\": \\\"fst-ui\\\",\\n        \\\"styleLibraryName\\\": \\\"theme-chalk\\\"\\n      }\\n    ]\\n  ]\\n}\\n\")])]),_c('p',[_vm._v(\"接下来，如果你只希望引入部分组件，比如 Button 和 Select，那么需要在 main.js 中写入以下内容：\")]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"import Vue from 'vue';\\nimport { FstSearchTab, FstSearchTabGroup } from 'fst-ui';\\nimport App from './App.vue';\\n\\nVue.component(FstSearchTab.name, FstSearchTab);\\nVue.component(FstSearchTabGroup.name, FstSearchTabGroup);\\n/* 或写为\\n * Vue.use(FstSearchTab)\\n * Vue.use(FstSearchTabGroup)\\n */\\n\\nnew Vue({\\n  el: '#app',\\n  render: h => h(App)\\n});\\n\")])]),_c('p',[_vm._v(\"完整组件列表和引入方式（完整组件列表以 \"),_c('a',{attrs:{\"href\":\"https://github.com/ElemeFE/element/blob/master/components.json\"}},[_vm._v(\"components.json\")]),_vm._v(\" 为准）\")]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"import Vue from 'vue';\\nimport {\\n FstSearchTab,\\n FstSearchTabGroup\\n} from 'fst-ui';\\n\\nVue.use(FstSearchTab);\\nVue.use(FstSearchTabGroup);\\n\")])]),_c('h3',{attrs:{\"id\":\"kai-shi-shi-yong\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#kai-shi-shi-yong\"}},[_vm._v(\"¶\")]),_vm._v(\" 开始使用\")]),_c('p',[_vm._v(\"至此，一个基于 Vue 和 Fst-ui 的开发环境已经搭建完毕，现在就可以编写代码了。各个组件的使用方法请参阅它们各自的文档。\")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./quickstart.md?vue&type=template&id=edd457fa&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content element-doc\"},[_vm._m(0),_vm._m(1),_vm._m(2),_c('p',[_vm._v(\"简单使用\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"要使用它，只需要在\"),_c('code',[_vm._v(\"search-tab\")]),_vm._v(\"元素中使用\"),_c('code',[_vm._v(\"v-model\")]),_vm._v(\"绑定变量即可，列表数据通过\"),_c('code',[_vm._v(\"list\")]),_vm._v(\"属性传递。\")])]),_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div class=\\\"demo-search-tab-box\\\">\\n    <span class=\\\"demo-search-tab-title\\\">区域：</span>\\n    <fst-search-tab v-model=\\\"searchValue\\\" :list=\\\"data\\\"></fst-search-tab>\\n  </div>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        searchValue: null,\\n        data: [\\n          {id: 1, name: '湖南'},\\n          {id: 2, name: '湖北'},\\n          {id: 3, name: '山东'},\\n          {id: 4, name: '深圳'},\\n          {id: 5, name: '上海'},\\n          {id: 6, name: '北京'}\\n        ]\\n      };\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(3),_vm._m(4),_vm._m(5),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"使用\"),_c('code',[_vm._v(\"search-tab-group\")]),_vm._v(\"多行显示\")])]),_c('template',{slot:\"source\"},[_c('element-demo1')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <fst-search-tab-group :searchOption=\\\"searchOption\\\" @change=\\\"changeHandle\\\"></fst-search-tab-group>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        searchOption: {\\n          type: {\\n            autoAddAll: true,\\n            data: [\\n              { name: '课件', id: 3 },\\n              { name: '教案', id: 8 },\\n              { name: '试卷', id: 7 },\\n              { name: '学案', id: 4 },\\n              { name: '资源包', id: 11 },\\n              { name: '素材', id: 6 },\\n              { name: '视频', id: 12 }\\n            ],\\n            name: '资源类型'\\n          },\\n          resourceFormat: {\\n            data: [\\n              {\\n                name: '文档',\\n                id: 1\\n              },\\n              {\\n                name: '视频',\\n                id: 2\\n              },\\n              {\\n                name: '音频',\\n                id: 3\\n              },\\n              {\\n                name: '图片',\\n                id: 4\\n              }\\n            ],\\n            name: '资源格式'\\n          },\\n          shareType: {\\n            name: '资源来源',\\n            require: true,\\n            defaultValue: 1,\\n            data: [\\n              {\\n                name: '私有',\\n                id: 0\\n              },\\n              {\\n                name: '校本',\\n                id: 1\\n              },\\n              {\\n                name: '云端',\\n                id: 2\\n              }\\n            ]\\n          }\\n        }\\n      };\\n    },\\n    methods: {\\n      changeHandle(val) {\\n        console.log(val)\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(6),_c('p',[_vm._v(\"展示已选择的名字\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"可使用\"),_c('code',[_vm._v(\"unfoldOption\")]),_vm._v(\"属性进行配置\")])]),_c('template',{slot:\"source\"},[_c('element-demo2')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <fst-search-tab-group :searchOption=\\\"searchOption\\\" :unfoldOption=\\\"unfoldOption\\\" @change=\\\"changeHandle\\\"></fst-search-tab-group>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        unfoldOption: { name: '您已选择', unfold: true },\\n        searchOption: {\\n          type: {\\n            autoAddAll: true,\\n            data: [\\n              { name: '课件', id: 3 },\\n              { name: '教案', id: 8 },\\n              { name: '试卷', id: 7 },\\n              { name: '学案', id: 4 },\\n              { name: '资源包', id: 11 },\\n              { name: '素材', id: 6 },\\n              { name: '视频', id: 12 }\\n            ],\\n            name: '资源类型'\\n          },\\n          resourceFormat: {\\n            data: [\\n              {\\n                name: '文档',\\n                id: 1\\n              },\\n              {\\n                name: '视频',\\n                id: 2\\n              },\\n              {\\n                name: '音频',\\n                id: 3\\n              },\\n              {\\n                name: '图片',\\n                id: 4\\n              }\\n            ],\\n            name: '资源格式'\\n          },\\n          shareType: {\\n            name: '资源来源',\\n            data: [\\n              {\\n                name: '私有',\\n                id: 0\\n              },\\n              {\\n                name: '校本',\\n                id: 1\\n              },\\n              {\\n                name: '云端',\\n                id: 2\\n              }\\n            ]\\n          }\\n        }\\n      };\\n    },\\n    methods: {\\n      changeHandle(val) {\\n        console.log(val)\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(7),_c('p',[_vm._v(\"当第一排改变，下面几排也跟着相应的改变\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"添加url地址和linkage属性\")])]),_c('template',{slot:\"source\"},[_c('element-demo3')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <fst-search-tab-group :searchOption=\\\"searchOption\\\" :request=\\\"request\\\" @change=\\\"changeHandle\\\"></fst-search-tab-group>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        request: this.$axios,\\n        searchOption: {\\n          stageId: {\\n            require: true,\\n            name: '学段',\\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getPeriod',\\n            linkage: true\\n          },\\n          subjectId: {\\n            require: true,\\n            name: '学科',\\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getSubjects',\\n            linkage: true\\n          },\\n          versionId: {\\n            require: true,\\n            name: '版本',\\n            linkage: true,\\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getVersions'\\n          },\\n          bookId: {\\n            require: true,\\n            name: '册别',\\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getTextBooks'\\n          }\\n        },\\n      };\\n    },\\n    methods: {\\n      changeHandle(val) {\\n        console.log(val)\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(8),_vm._m(9),_vm._m(10),_vm._m(11),_vm._m(12),_vm._m(13),_vm._m(14)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"searchtab-sou-suo-kuang\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#searchtab-sou-suo-kuang\"}},[_vm._v(\"¶\")]),_vm._v(\" SearchTab 搜索框\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"开发者：（谢森林）\"),_c('br'),_vm._v(\" 用于页面的数据查询，以及表单提交，只需传递匹配的数据，在操作之后会通过事件拿到所操作的值。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"ji-chu-yong-fa\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#ji-chu-yong-fa\"}},[_vm._v(\"¶\")]),_vm._v(\" 基础用法\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tip\"},[_c('p',[_vm._v(\"在一般搜索页面存在多个条件查询。如果每一个就是\"),_c('code',[_vm._v(\"fst-search-tab\")]),_vm._v(\"，那么代码会显得有点臃肿，所有在这基础上再封装一层\"),_c('code',[_vm._v(\"fst-search-tab-group\")]),_vm._v(\",支持多条件查询。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"searchtabgroup-yong-fa\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#searchtabgroup-yong-fa\"}},[_vm._v(\"¶\")]),_vm._v(\" SearchTabGroup用法\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"当需要多个\"),_c('code',[_vm._v(\"search-tab\")]),_vm._v(\"时，可以使用\"),_c('code',[_vm._v(\"search-tab-group\")]),_vm._v(\"多行显示\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"zhan-shi-yi-xuan-zhong-de-ming-zi\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zhan-shi-yi-xuan-zhong-de-ming-zi\"}},[_vm._v(\"¶\")]),_vm._v(\" 展示已选中的名字\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"qing-qiu-jie-kou-qie-lian-dong\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#qing-qiu-jie-kou-qie-lian-dong\"}},[_vm._v(\"¶\")]),_vm._v(\" 请求接口且联动\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tip\"},[_c('p',[_vm._v(\"注意：如果是接口请求数据，那么必须传一个\"),_c('code',[_vm._v(\"request\")]),_vm._v(\"属性，对应的就是本项目的axios\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"searchoption-nei-de-attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#searchoption-nei-de-attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" searchOption 内的 Attributes\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"可选值\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"name\")]),_c('td',[_vm._v(\"标签名字\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"必填\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"data\")]),_c('td',[_vm._v(\"展示的默认数据非接口数据\")]),_c('td',[_vm._v(\"arroy\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"url\")]),_c('td',[_vm._v(\"请求的接口地址与data属性互斥\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"require\")]),_c('td',[_vm._v(\"必选标记\")]),_c('td',[_vm._v(\"blooen\")]),_c('td',[_vm._v(\"false/true\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"autoAddAll\")]),_c('td',[_vm._v(\"是否需要添加全部选项\")]),_c('td',[_vm._v(\"blooen\")]),_c('td',[_vm._v(\"false/true\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"defaultValue\")]),_c('td',[_vm._v(\"默认值\")]),_c('td',[_vm._v(\"number\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"prop\")]),_c('td',[_vm._v(\"自定义数据格式\")]),_c('td',[_vm._v(\"object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"{id:'id', name:'name'}\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"unfoldoption-nei-de-attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#unfoldoption-nei-de-attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" unfoldOption 内的 Attributes\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"可选值\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"name\")]),_c('td',[_vm._v(\"标题名字\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"必填\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"unfold\")]),_c('td',[_vm._v(\"是否需要展开\")]),_c('td',[_vm._v(\"blooen\")]),_c('td',[_vm._v(\"false/true\")]),_c('td',[_vm._v(\"false\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"events\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#events\"}},[_vm._v(\"¶\")]),_vm._v(\" Events\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"事件名称\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"回调参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"change\")]),_c('td',[_vm._v(\"当search-tab点击时出发\")]),_c('td',[_vm._v(\"回调一个object数据，分对应着每一个search-tab选择的值\")])])])])}]\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content element-doc\">\n        <h2 id=\"searchtab-sou-suo-kuang\"><a class=\"header-anchor\" href=\"#searchtab-sou-suo-kuang\">¶</a> SearchTab 搜索框</h2>\n<p>开发者：（谢森林）<br/>\n用于页面的数据查询，以及表单提交，只需传递匹配的数据，在操作之后会通过事件拿到所操作的值。</p>\n<h3 id=\"ji-chu-yong-fa\"><a class=\"header-anchor\" href=\"#ji-chu-yong-fa\">¶</a> 基础用法</h3>\n<p>简单使用</p>\n<demo-block>\n        <div><p>要使用它，只需要在<code>search-tab</code>元素中使用<code>v-model</code>绑定变量即可，列表数据通过<code>list</code>属性传递。</p>\n</div>\n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div class=&quot;demo-search-tab-box&quot;&gt;\n    &lt;span class=&quot;demo-search-tab-title&quot;&gt;区域：&lt;/span&gt;\n    &lt;fst-search-tab v-model=&quot;searchValue&quot; :list=&quot;data&quot;&gt;&lt;/fst-search-tab&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        searchValue: null,\n        data: [\n          {id: 1, name: '湖南'},\n          {id: 2, name: '湖北'},\n          {id: 3, name: '山东'},\n          {id: 4, name: '深圳'},\n          {id: 5, name: '上海'},\n          {id: 6, name: '北京'}\n        ]\n      };\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><div class=\"tip\">\n<p>在一般搜索页面存在多个条件查询。如果每一个就是<code>fst-search-tab</code>，那么代码会显得有点臃肿，所有在这基础上再封装一层<code>fst-search-tab-group</code>,支持多条件查询。</p>\n</div>\n<h3 id=\"searchtabgroup-yong-fa\"><a class=\"header-anchor\" href=\"#searchtabgroup-yong-fa\">¶</a> SearchTabGroup用法</h3>\n<p>当需要多个<code>search-tab</code>时，可以使用<code>search-tab-group</code>多行显示</p>\n<demo-block>\n        <div><p>使用<code>search-tab-group</code>多行显示</p>\n</div>\n        <template slot=\"source\"><element-demo1 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;fst-search-tab-group :searchOption=&quot;searchOption&quot; @change=&quot;changeHandle&quot;&gt;&lt;/fst-search-tab-group&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        searchOption: {\n          type: {\n            autoAddAll: true,\n            data: [\n              { name: '课件', id: 3 },\n              { name: '教案', id: 8 },\n              { name: '试卷', id: 7 },\n              { name: '学案', id: 4 },\n              { name: '资源包', id: 11 },\n              { name: '素材', id: 6 },\n              { name: '视频', id: 12 }\n            ],\n            name: '资源类型'\n          },\n          resourceFormat: {\n            data: [\n              {\n                name: '文档',\n                id: 1\n              },\n              {\n                name: '视频',\n                id: 2\n              },\n              {\n                name: '音频',\n                id: 3\n              },\n              {\n                name: '图片',\n                id: 4\n              }\n            ],\n            name: '资源格式'\n          },\n          shareType: {\n            name: '资源来源',\n            require: true,\n            defaultValue: 1,\n            data: [\n              {\n                name: '私有',\n                id: 0\n              },\n              {\n                name: '校本',\n                id: 1\n              },\n              {\n                name: '云端',\n                id: 2\n              }\n            ]\n          }\n        }\n      };\n    },\n    methods: {\n      changeHandle(val) {\n        console.log(val)\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"zhan-shi-yi-xuan-zhong-de-ming-zi\"><a class=\"header-anchor\" href=\"#zhan-shi-yi-xuan-zhong-de-ming-zi\">¶</a> 展示已选中的名字</h3>\n<p>展示已选择的名字</p>\n<demo-block>\n        <div><p>可使用<code>unfoldOption</code>属性进行配置</p>\n</div>\n        <template slot=\"source\"><element-demo2 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;fst-search-tab-group :searchOption=&quot;searchOption&quot; :unfoldOption=&quot;unfoldOption&quot; @change=&quot;changeHandle&quot;&gt;&lt;/fst-search-tab-group&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        unfoldOption: { name: '您已选择', unfold: true },\n        searchOption: {\n          type: {\n            autoAddAll: true,\n            data: [\n              { name: '课件', id: 3 },\n              { name: '教案', id: 8 },\n              { name: '试卷', id: 7 },\n              { name: '学案', id: 4 },\n              { name: '资源包', id: 11 },\n              { name: '素材', id: 6 },\n              { name: '视频', id: 12 }\n            ],\n            name: '资源类型'\n          },\n          resourceFormat: {\n            data: [\n              {\n                name: '文档',\n                id: 1\n              },\n              {\n                name: '视频',\n                id: 2\n              },\n              {\n                name: '音频',\n                id: 3\n              },\n              {\n                name: '图片',\n                id: 4\n              }\n            ],\n            name: '资源格式'\n          },\n          shareType: {\n            name: '资源来源',\n            data: [\n              {\n                name: '私有',\n                id: 0\n              },\n              {\n                name: '校本',\n                id: 1\n              },\n              {\n                name: '云端',\n                id: 2\n              }\n            ]\n          }\n        }\n      };\n    },\n    methods: {\n      changeHandle(val) {\n        console.log(val)\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"qing-qiu-jie-kou-qie-lian-dong\"><a class=\"header-anchor\" href=\"#qing-qiu-jie-kou-qie-lian-dong\">¶</a> 请求接口且联动</h3>\n<p>当第一排改变，下面几排也跟着相应的改变</p>\n<demo-block>\n        <div><p>添加url地址和linkage属性</p>\n</div>\n        <template slot=\"source\"><element-demo3 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;fst-search-tab-group :searchOption=&quot;searchOption&quot; :request=&quot;request&quot; @change=&quot;changeHandle&quot;&gt;&lt;/fst-search-tab-group&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        request: this.$axios,\n        searchOption: {\n          stageId: {\n            require: true,\n            name: '学段',\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getPeriod',\n            linkage: true\n          },\n          subjectId: {\n            require: true,\n            name: '学科',\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getSubjects',\n            linkage: true\n          },\n          versionId: {\n            require: true,\n            name: '版本',\n            linkage: true,\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getVersions'\n          },\n          bookId: {\n            require: true,\n            name: '册别',\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getTextBooks'\n          }\n        },\n      };\n    },\n    methods: {\n      changeHandle(val) {\n        console.log(val)\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><div class=\"tip\">\n<p>注意：如果是接口请求数据，那么必须传一个<code>request</code>属性，对应的就是本项目的axios</p>\n</div>\n<h3 id=\"searchoption-nei-de-attributes\"><a class=\"header-anchor\" href=\"#searchoption-nei-de-attributes\">¶</a> searchOption 内的 Attributes</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>标签名字</td>\n<td>string</td>\n<td>必填</td>\n<td>—</td>\n</tr>\n<tr>\n<td>data</td>\n<td>展示的默认数据非接口数据</td>\n<td>arroy</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>url</td>\n<td>请求的接口地址与data属性互斥</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>require</td>\n<td>必选标记</td>\n<td>blooen</td>\n<td>false/true</td>\n<td>false</td>\n</tr>\n<tr>\n<td>autoAddAll</td>\n<td>是否需要添加全部选项</td>\n<td>blooen</td>\n<td>false/true</td>\n<td>false</td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>默认值</td>\n<td>number</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>prop</td>\n<td>自定义数据格式</td>\n<td>object</td>\n<td>—</td>\n<td>{id:'id', name:'name'}</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"unfoldoption-nei-de-attributes\"><a class=\"header-anchor\" href=\"#unfoldoption-nei-de-attributes\">¶</a> unfoldOption 内的 Attributes</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>标题名字</td>\n<td>string</td>\n<td>必填</td>\n<td>—</td>\n</tr>\n<tr>\n<td>unfold</td>\n<td>是否需要展开</td>\n<td>blooen</td>\n<td>false/true</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"events\"><a class=\"header-anchor\" href=\"#events\">¶</a> Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>change</td>\n<td>当search-tab点击时出发</td>\n<td>回调一个object数据，分对应着每一个search-tab选择的值</td>\n</tr>\n</tbody>\n</table>\n\n      </section>\n    </template>\n    <script>\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticClass:\"demo-search-tab-box\"},[_c('span',{staticClass:\"demo-search-tab-title\"},[_vm._v(\"区域：\")]),_vm._v(\" \"),_c('fst-search-tab',{attrs:{\"list\":_vm.data},model:{value:(_vm.searchValue),callback:function ($$v) {_vm.searchValue=$$v},expression:\"searchValue\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        searchValue: null,\n        data: [\n          {id: 1, name: '湖南'},\n          {id: 2, name: '湖北'},\n          {id: 3, name: '山东'},\n          {id: 4, name: '深圳'},\n          {id: 5, name: '上海'},\n          {id: 6, name: '北京'}\n        ]\n      };\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo1\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('fst-search-tab-group',{attrs:{\"searchOption\":_vm.searchOption},on:{\"change\":_vm.changeHandle}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        searchOption: {\n          type: {\n            autoAddAll: true,\n            data: [\n              { name: '课件', id: 3 },\n              { name: '教案', id: 8 },\n              { name: '试卷', id: 7 },\n              { name: '学案', id: 4 },\n              { name: '资源包', id: 11 },\n              { name: '素材', id: 6 },\n              { name: '视频', id: 12 }\n            ],\n            name: '资源类型'\n          },\n          resourceFormat: {\n            data: [\n              {\n                name: '文档',\n                id: 1\n              },\n              {\n                name: '视频',\n                id: 2\n              },\n              {\n                name: '音频',\n                id: 3\n              },\n              {\n                name: '图片',\n                id: 4\n              }\n            ],\n            name: '资源格式'\n          },\n          shareType: {\n            name: '资源来源',\n            require: true,\n            defaultValue: 1,\n            data: [\n              {\n                name: '私有',\n                id: 0\n              },\n              {\n                name: '校本',\n                id: 1\n              },\n              {\n                name: '云端',\n                id: 2\n              }\n            ]\n          }\n        }\n      };\n    },\n    methods: {\n      changeHandle(val) {\n        console.log(val)\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo2\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('fst-search-tab-group',{attrs:{\"searchOption\":_vm.searchOption,\"unfoldOption\":_vm.unfoldOption},on:{\"change\":_vm.changeHandle}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        unfoldOption: { name: '您已选择', unfold: true },\n        searchOption: {\n          type: {\n            autoAddAll: true,\n            data: [\n              { name: '课件', id: 3 },\n              { name: '教案', id: 8 },\n              { name: '试卷', id: 7 },\n              { name: '学案', id: 4 },\n              { name: '资源包', id: 11 },\n              { name: '素材', id: 6 },\n              { name: '视频', id: 12 }\n            ],\n            name: '资源类型'\n          },\n          resourceFormat: {\n            data: [\n              {\n                name: '文档',\n                id: 1\n              },\n              {\n                name: '视频',\n                id: 2\n              },\n              {\n                name: '音频',\n                id: 3\n              },\n              {\n                name: '图片',\n                id: 4\n              }\n            ],\n            name: '资源格式'\n          },\n          shareType: {\n            name: '资源来源',\n            data: [\n              {\n                name: '私有',\n                id: 0\n              },\n              {\n                name: '校本',\n                id: 1\n              },\n              {\n                name: '云端',\n                id: 2\n              }\n            ]\n          }\n        }\n      };\n    },\n    methods: {\n      changeHandle(val) {\n        console.log(val)\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo3\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('fst-search-tab-group',{attrs:{\"searchOption\":_vm.searchOption,\"request\":_vm.request},on:{\"change\":_vm.changeHandle}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        request: this.$axios,\n        searchOption: {\n          stageId: {\n            require: true,\n            name: '学段',\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getPeriod',\n            linkage: true\n          },\n          subjectId: {\n            require: true,\n            name: '学科',\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getSubjects',\n            linkage: true\n          },\n          versionId: {\n            require: true,\n            name: '版本',\n            linkage: true,\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getVersions'\n          },\n          bookId: {\n            require: true,\n            name: '册别',\n            url: 'https://test.cunwedu.com.cn/teachingresource/v1/resource-common/getTextBooks'\n          }\n        },\n      };\n    },\n    methods: {\n      changeHandle(val) {\n        console.log(val)\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  ","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js!../../loader/md-loader/index.js!../../../../node_modules/eslint-loader/index.js??ref--14-0!./search-tab.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js!../../loader/md-loader/index.js!../../../../node_modules/eslint-loader/index.js??ref--14-0!./search-tab.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./search-tab.md?vue&type=template&id=4c04b21a&\"\nimport script from \"./search-tab.md?vue&type=script&lang=js&\"\nexport * from \"./search-tab.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content element-doc\"},[_c('h2',{attrs:{\"id\":\"guo-ji-hua\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#guo-ji-hua\"}},[_vm._v(\"¶\")]),_vm._v(\" 国际化\")]),_c('p',[_vm._v(\"Element 组件内部默认使用中文，若希望使用其他语言，则需要进行多语言设置。以英文为例，在 main.js 中：\")]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"// 完整引入 Element\\nimport Vue from 'vue'\\nimport ElementUI from 'element-ui'\\nimport locale from 'element-ui/lib/locale/lang/en'\\n\\nVue.use(ElementUI, { locale })\\n\")])]),_c('p',[_vm._v(\"或\")]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"// 按需引入 Element\\nimport Vue from 'vue'\\nimport { Button, Select } from 'element-ui'\\nimport lang from 'element-ui/lib/locale/lang/en'\\nimport locale from 'element-ui/lib/locale'\\n\\n// 设置语言\\nlocale.use(lang)\\n\\n// 引入组件\\nVue.component(Button.name, Button)\\nVue.component(Select.name, Select)\\n\")])]),_c('p',[_vm._v(\"如果使用其它语言，默认情况下中文语言包依旧是被引入的，可以使用 webpack 的 NormalModuleReplacementPlugin 替换默认语言包。\")]),_c('p',[_c('strong',[_vm._v(\"webpack.config.js\")])]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"{\\n  plugins: [\\n    new webpack.NormalModuleReplacementPlugin(/element-ui[\\\\/\\\\\\\\]lib[\\\\/\\\\\\\\]locale[\\\\/\\\\\\\\]lang[\\\\/\\\\\\\\]zh-CN/, 'element-ui/lib/locale/lang/en')\\n  ]\\n}\\n\")])]),_c('h2',{attrs:{\"id\":\"jian-rong-vue-i18n-5-x\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#jian-rong-vue-i18n-5-x\"}},[_vm._v(\"¶\")]),_vm._v(\" 兼容 \"),_c('code',[_vm._v(\"vue-i18n@5.x\")])]),_c('p',[_vm._v(\"Element 兼容 \"),_c('a',{attrs:{\"href\":\"https://github.com/kazupon/vue-i18n\"}},[_vm._v(\"vue-i18n@5.x\")]),_vm._v(\"，搭配使用能更方便地实现多语言切换。\")]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"import Vue from 'vue'\\nimport VueI18n from 'vue-i18n'\\nimport Element from 'element-ui'\\nimport enLocale from 'element-ui/lib/locale/lang/en'\\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'\\n\\nVue.use(VueI18n)\\nVue.use(Element)\\n\\nVue.config.lang = 'zh-cn'\\nVue.locale('zh-cn', zhLocale)\\nVue.locale('en', enLocale)\\n\")])]),_c('h2',{attrs:{\"id\":\"jian-rong-qi-ta-i18n-cha-jian\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#jian-rong-qi-ta-i18n-cha-jian\"}},[_vm._v(\"¶\")]),_vm._v(\" 兼容其他 i18n 插件\")]),_c('p',[_vm._v(\"如果不使用 \"),_c('code',[_vm._v(\"vue-i18n@5.x\")]),_vm._v(\"，而是用其他的 i18n 插件，Element 将无法兼容，但是可以自定义 Element 的 i18n 的处理方法。\")]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"import Vue from 'vue'\\nimport Element from 'element-ui'\\nimport enLocale from 'element-ui/lib/locale/lang/en'\\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'\\n\\nVue.use(Element, {\\n  i18n: function (path, options) {\\n    // ...\\n  }\\n})\\n\")])]),_c('h2',{attrs:{\"id\":\"jian-rong-vue-i18n-6-x\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#jian-rong-vue-i18n-6-x\"}},[_vm._v(\"¶\")]),_vm._v(\" 兼容 \"),_c('code',[_vm._v(\"vue-i18n@6.x\")])]),_c('p',[_vm._v(\"默认不支持 6.x 的 \"),_c('code',[_vm._v(\"vue-i18n\")]),_vm._v(\"，你需要手动处理。\")]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"import Vue from 'vue'\\nimport Element from 'element-ui'\\nimport VueI18n from 'vue-i18n'\\nimport enLocale from 'element-ui/lib/locale/lang/en'\\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'\\n\\nVue.use(VueI18n)\\n\\nconst messages = {\\n  en: {\\n    message: 'hello',\\n    ...enLocale // 或者用 Object.assign({ message: 'hello' }, enLocale)\\n  },\\n  zh: {\\n    message: '你好',\\n    ...zhLocale // 或者用 Object.assign({ message: '你好' }, zhLocale)\\n  }\\n}\\n// Create VueI18n instance with options\\nconst i18n = new VueI18n({\\n  locale: 'en', // set locale\\n  messages, // set locale messages\\n})\\n\\nVue.use(Element, {\\n  i18n: (key, value) => i18n.t(key, value)\\n})\\n\\nnew Vue({ i18n }).$mount('#app')\\n\")])]),_c('h2',{attrs:{\"id\":\"an-xu-jia-zai-li-ding-zhi-i18n\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#an-xu-jia-zai-li-ding-zhi-i18n\"}},[_vm._v(\"¶\")]),_vm._v(\" 按需加载里定制 i18n\")]),_c('pre',[_c('code',{staticClass:\"language-js\"},[_vm._v(\"import Vue from 'vue'\\nimport DatePicker from 'element/lib/date-picker'\\nimport VueI18n from 'vue-i18n'\\n\\nimport enLocale from 'element-ui/lib/locale/lang/en'\\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'\\nimport ElementLocale from 'element-ui/lib/locale'\\n\\nVue.use(VueI18n)\\nVue.use(DatePicker)\\n\\nconst messages = {\\n  en: {\\n    message: 'hello',\\n    ...enLocale\\n  },\\n  zh: {\\n    message: '你好',\\n    ...zhLocale\\n  }\\n}\\n// Create VueI18n instance with options\\nconst i18n = new VueI18n({\\n  locale: 'en', // set locale\\n  messages, // set locale messages\\n})\\n\\nElementLocale.i18n((key, value) => i18n.t(key, value))\\n\")])]),_c('h2',{attrs:{\"id\":\"tong-guo-cdn-de-fang-shi-jia-zai-yu-yan-wen-jian\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#tong-guo-cdn-de-fang-shi-jia-zai-yu-yan-wen-jian\"}},[_vm._v(\"¶\")]),_vm._v(\" 通过 CDN 的方式加载语言文件\")]),_c('pre',[_c('code',{staticClass:\"language-html\"},[_vm._v(\"<script src=\\\"//unpkg.com/vue\\\"></script>\\n<script src=\\\"//unpkg.com/element-ui\\\"></script>\\n<script src=\\\"//unpkg.com/element-ui/lib/umd/locale/en.js\\\"></script>\\n\\n<script>\\n  ELEMENT.locale(ELEMENT.lang.en)\\n</script>\\n\")])]),_c('p',[_vm._v(\"搭配 \"),_c('code',[_vm._v(\"vue-i18n\")]),_vm._v(\" 使用\")]),_c('pre',[_c('code',{staticClass:\"language-html\"},[_vm._v(\"<script src=\\\"//unpkg.com/vue\\\"></script>\\n<script src=\\\"//unpkg.com/vue-i18n/dist/vue-i18n.js\\\"></script>\\n<script src=\\\"//unpkg.com/element-ui\\\"></script>\\n<script src=\\\"//unpkg.com/element-ui/lib/umd/locale/zh-CN.js\\\"></script>\\n<script src=\\\"//unpkg.com/element-ui/lib/umd/locale/en.js\\\"></script>\\n\\n<script>\\n  Vue.locale('en', ELEMENT.lang.en)\\n  Vue.locale('zh-cn', ELEMENT.lang.zhCN)\\n</script>\\n\")])]),_c('p',[_vm._v(\"目前 Element 内置了以下语言：\")]),_c('ul',{staticClass:\"language-list\"},[_c('li',[_vm._v(\"简体中文（zh-CN）\")]),_c('li',[_vm._v(\"英语（en）\")]),_c('li',[_vm._v(\"德语（de）\")]),_c('li',[_vm._v(\"葡萄牙语（pt）\")]),_c('li',[_vm._v(\"西班牙语（es）\")]),_c('li',[_vm._v(\"丹麦语（da）\")]),_c('li',[_vm._v(\"法语（fr）\")]),_c('li',[_vm._v(\"挪威语（nb-NO）\")]),_c('li',[_vm._v(\"繁体中文（zh-TW）\")]),_c('li',[_vm._v(\"意大利语（it）\")]),_c('li',[_vm._v(\"韩语（ko）\")]),_c('li',[_vm._v(\"日语（ja）\")]),_c('li',[_vm._v(\"荷兰语（nl）\")]),_c('li',[_vm._v(\"越南语（vi）\")]),_c('li',[_vm._v(\"俄语（ru-RU）\")]),_c('li',[_vm._v(\"土耳其语（tr-TR）\")]),_c('li',[_vm._v(\"巴西葡萄牙语（pt-br）\")]),_c('li',[_vm._v(\"波斯语（fa）\")]),_c('li',[_vm._v(\"泰语（th）\")]),_c('li',[_vm._v(\"印尼语（id）\")]),_c('li',[_vm._v(\"保加利亚语（bg）\")]),_c('li',[_vm._v(\"波兰语（pl）\")]),_c('li',[_vm._v(\"芬兰语（fi）\")]),_c('li',[_vm._v(\"瑞典语（sv-SE）\")]),_c('li',[_vm._v(\"希腊语（el）\")]),_c('li',[_vm._v(\"斯洛伐克语（sk）\")]),_c('li',[_vm._v(\"加泰罗尼亚语（ca）\")]),_c('li',[_vm._v(\"捷克语（cs-CZ）\")]),_c('li',[_vm._v(\"乌克兰语（ua）\")]),_c('li',[_vm._v(\"土库曼语（tk）\")]),_c('li',[_vm._v(\"泰米尔语（ta）\")]),_c('li',[_vm._v(\"拉脱维亚语（lv）\")]),_c('li',[_vm._v(\"南非荷兰语（af-ZA）\")]),_c('li',[_vm._v(\"爱沙尼亚语（ee）\")]),_c('li',[_vm._v(\"斯洛文尼亚语（sl）\")]),_c('li',[_vm._v(\"阿拉伯语（ar）\")]),_c('li',[_vm._v(\"希伯来语（he）\")]),_c('li',[_vm._v(\"立陶宛语（lt）\")]),_c('li',[_vm._v(\"蒙古语（mn）\")]),_c('li',[_vm._v(\"哈萨克斯坦语（kz）\")]),_c('li',[_vm._v(\"匈牙利语（hu）\")]),_c('li',[_vm._v(\"罗马尼亚语（ro）\")]),_c('li',[_vm._v(\"库尔德语（ku）\")]),_c('li',[_vm._v(\"维吾尔语（ug-CN）\")]),_c('li',[_vm._v(\"高棉语（km）\")]),_c('li',[_vm._v(\"塞尔维亚语（sr）\")]),_c('li',[_vm._v(\"巴斯克语（eu）\")]),_c('li',[_vm._v(\"吉尔吉斯语（kg）\")]),_c('li',[_vm._v(\"亚美尼亚语 (hy)\")]),_c('li',[_vm._v(\"克罗地亚 (hr)\")]),_c('li',[_vm._v(\"世界语 (eo)\")])]),_c('p',[_vm._v(\"如果你需要使用其他的语言，欢迎贡献 PR：只需在 \"),_c('a',{attrs:{\"href\":\"https://github.com/ElemeFE/element/tree/dev/src/locale/lang\"}},[_vm._v(\"这里\")]),_vm._v(\" 添加一个语言配置文件即可。\")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./i18n.md?vue&type=template&id=6c03c500&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content element-doc\"},[_vm._m(0),_vm._m(1),_vm._m(2),_c('p',[_vm._v(\"简单使用\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"只显示表头与数据\")])]),_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div style=\\\"height: 100px;\\\">\\n    <fst-table :columns=\\\"columns\\\" :data=\\\"data\\\" :pagination=\\\"false\\\"/>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      columns: Object.freeze([\\n        {\\n          label: '姓名',\\n          prop: 'name'\\n        },\\n        {\\n          label: '性别',\\n          prop: 'sex',\\n          // 格式化表格,与element-ui 的表格属性相同\\n          formatter(row, column, cellValue) {\\n            return cellValue === 1 ? '男' : '女'\\n          }\\n        },\\n        {\\n          label: '年龄',\\n          prop: 'age'\\n        }\\n      ]),\\n      data: [\\n        {\\n          name: '森林',\\n          sex: 1,\\n          age: 18\\n        }\\n      ],\\n      // 是否显示多选框\\n      selectable: true,\\n      // 是否显示序号列\\n      sequence: true\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(3),_c('p',[_vm._v(\"使用分页\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"显示分页组件，配置参数\")])]),_c('template',{slot:\"source\"},[_c('element-demo1')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <fst-table\\n    v-loading=\\\"loading\\\"\\n    :columns=\\\"columns\\\"\\n    :data=\\\"data\\\"\\n    :current-page.sync=\\\"currentPage\\\"\\n    :page-size.sync=\\\"pageSize\\\"\\n    :total=\\\"total\\\"\\n    height=\\\"auto\\\"\\n    @page-change=\\\"$_handlePageChange\\\"\\n  />\\n</template>\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      columns: Object.freeze([\\n        {\\n          label: '姓名',\\n          prop: 'name'\\n        },\\n        {\\n          label: '性别',\\n          prop: 'sex',\\n          // 格式化表格,与element-ui 的表格属性相同\\n          formatter(row, column, cellValue) {\\n            return cellValue === 1 ? '男' : '女'\\n          }\\n        },\\n        {\\n          label: '年龄',\\n          prop: 'age'\\n        }\\n      ]),\\n      data: [],\\n      // 当前页码\\n      currentPage: 1,\\n      // 每页条数\\n      pageSize: 10,\\n      // 总条数\\n      total: 0,\\n      loading: false\\n    }\\n  },\\n  created() {\\n    this.loadData()\\n  },\\n  methods: {\\n    // 加载表格数据\\n    loadData() {\\n      this.loading = true\\n      setTimeout(() => {\\n        this.total = 40\\n        const { currentPage, pageSize } = this\\n        this.data = new Array(pageSize).fill({}).map((item, index) => {\\n          return {\\n            name: `森林${currentPage + (index + 1) * 10}`,\\n            sex: Math.random() > 0.5 ? 1 : 0,\\n            age: Math.floor(Math.random() * 100)\\n          }\\n        })\\n        this.loading = false\\n      }, 1000)\\n    },\\n    $_handlePageChange() {\\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\\n      console.log(this.pageSize, this.currentPage)\\n      this.loadData()\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(4),_c('p',[_vm._v(\"使用顶部按钮与行操作按钮\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"顶部按钮与行操作按钮\")])]),_c('template',{slot:\"source\"},[_c('element-demo2')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div style=\\\"height: 300px;\\\">\\n    <fst-table\\n      v-loading=\\\"loading\\\"\\n      :columns=\\\"columns\\\"\\n      :data=\\\"data\\\"\\n      :current-page.sync=\\\"currentPage\\\"\\n      :page-size.sync=\\\"pageSize\\\"\\n      :total=\\\"total\\\"\\n      :buttons=\\\"buttons\\\"\\n      @page-change=\\\"$_handlePageChange\\\"\\n    />\\n  </div>\\n</template>\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      columns: Object.freeze([\\n        {\\n          // 可以指定列的宽度，与element-ui原生用法一致\\n          width: 220,\\n          label: '姓名',\\n          prop: 'name'\\n        },\\n        {\\n          label: '性别',\\n          prop: 'sex',\\n          // 格式化表格,与element-ui 的表格属性相同\\n          formatter(row, column, cellValue) {\\n            return cellValue === 1 ? '男' : '女'\\n          }\\n        },\\n        {\\n          label: '年龄',\\n          prop: 'age'\\n        },\\n        {\\n          label: '公众号',\\n          prop: 'officialAccount'\\n        },\\n        // 行编辑按钮，在表格末尾出现，自动锁定右侧\\n        {\\n          width: 180,\\n          label: '操作',\\n          actions: [\\n            {\\n              id: 'follow',\\n              text: '添加好友',\\n              click: this.$_handleFollowAuthor\\n            },\\n            {\\n              id: 'edit',\\n              text: '编辑',\\n              // 可以通过before控制按钮是否显示，比如下面年龄四十岁的才会显示编辑按钮\\n              before(row) {\\n                return row.age < 40\\n              },\\n              click: this.$_handleEdit\\n            },\\n            {\\n              id: 'delete',\\n              text: '删除',\\n              icon: 'el-icon-delete',\\n              disabled(row) {\\n                return row.sex === 0\\n              },\\n              // 为了拿到this,这里需要用箭头函数\\n              click: () => {\\n                this.$alert('女生被禁止删除了')\\n              }\\n            }\\n          ]\\n        }\\n      ]),\\n      data: [],\\n      // 当前页码\\n      currentPage: 1,\\n      // 每页条数\\n      pageSize: 10,\\n      // 总条数\\n      total: 0,\\n      loading: false,\\n      buttons: Object.freeze([\\n        {\\n          // id 必须有而且是在当前按钮数组里面是唯一的\\n          id: 'add',\\n          text: '新增',\\n          type: 'primary',\\n          icon: 'el-icon-circle-plus',\\n          click: this.$_handleAdd\\n        },\\n        {\\n          id: 'delete',\\n          text: '删除',\\n          // rows 是表格选中的行，如果没有选中行，则禁用删除按钮, disabled可以是一个boolean值或者函数\\n          disabled: rows => !rows.length,\\n          click: this.$_handleRemove\\n        },\\n        {\\n          id: 'auth',\\n          text: '这个按钮根据权限显示',\\n          // 可以通过返回 true/false来控制按钮是否显示\\n          before: (/** rows */) => {\\n            return true\\n          }\\n        },\\n        {\\n          id: 'dropdown',\\n          text: '下拉按钮',\\n          children: [\\n            {\\n              id: 'moveUp',\\n              text: '上移',\\n              icon: 'el-icon-arrow-up',\\n              click: () => {\\n                console.log('上移')\\n              }\\n            },\\n            {\\n              id: 'moveDown',\\n              text: '下移',\\n              icon: 'el-icon-arrow-down',\\n              disabled: rows => !rows.length,\\n              click: () => {\\n                console.log('下移')\\n              }\\n            }\\n          ]\\n        }\\n      ])\\n    }\\n  },\\n  created() {\\n    this.loadData()\\n  },\\n  methods: {\\n    // 加载表格数据\\n    loadData() {\\n      this.loading = true\\n      setTimeout(() => {\\n        this.total = 40\\n        const { currentPage, pageSize } = this\\n        this.data = new Array(pageSize).fill({}).map((item, index) => {\\n          return {\\n            id: currentPage + (index + 1) * 10,\\n            name: `森林${currentPage + (index + 1) * 10}`,\\n            sex: Math.random() > 0.5 ? 1 : 0,\\n            age: Math.floor(Math.random() * 100),\\n            officialAccount: '前端Sir'\\n          }\\n        })\\n        this.loading = false\\n      }, 1000)\\n    },\\n    $_handlePageChange() {\\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\\n      console.log(this.pageSize, this.currentPage)\\n      this.loadData()\\n    },\\n    // 新增\\n    $_handleAdd() {\\n      this.$alert('点击了新增按钮')\\n    },\\n    // 顶部按钮会自动将表格所选的行传出来\\n    $_handleRemove(rows) {\\n      const ids = rows.map(({ id }) => id)\\n      this.$alert(`要删除的行id为${ids.join(',')}`)\\n    },\\n    // 关注作者公众号\\n    $_handleFollowAuthor() {\\n      const image = require('../assets/images/qrcode.png')\\n      const h = this.$createElement\\n      this.$msgbox({\\n        title: '扫码添加',\\n        message: h('img', {\\n          attrs: {\\n            src: image\\n          },\\n          style: {\\n            width: '400px'\\n          }\\n        })\\n      })\\n    },\\n    /**\\n     * row 这一行的数据\\n     */\\n    $_handleEdit(row, column) {\\n      console.log(row, column)\\n      this.$alert(`点击了姓名为【${row.name}】的行上的按钮`)\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(5),_c('p',[_vm._v(\"按钮使用插槽\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"按钮使用插槽\")])]),_c('template',{slot:\"source\"},[_c('element-demo3')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div style=\\\"height: 300px;\\\">\\n    <fst-table\\n      v-loading=\\\"loading\\\"\\n      :columns=\\\"columns\\\"\\n      :data=\\\"data\\\"\\n      :current-page.sync=\\\"currentPage\\\"\\n      :page-size.sync=\\\"pageSize\\\"\\n      :total=\\\"total\\\"\\n      :buttons=\\\"buttons\\\"\\n      @page-change=\\\"$_handlePageChange\\\"\\n    >\\n      <template #button=\\\"{id}\\\">\\n        <template v-if=\\\"id === 'slot'\\\">\\n          <el-button type=\\\"primary\\\" size=\\\"small\\\">\\n            自定义顶部按钮\\n          </el-button>\\n        </template>\\n      </template>\\n\\n      <template #action=\\\"{id}\\\">\\n        <template v-if=\\\"id === 'slot'\\\">\\n          <el-button type=\\\"text\\\" size=\\\"small\\\">\\n            自定义操作按钮\\n          </el-button>\\n        </template>\\n      </template>\\n    </fst-table>\\n  </div>\\n</template>\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      columns: Object.freeze([\\n        {\\n          // 可以指定列的宽度，与element-ui原生用法一致\\n          width: 220,\\n          label: '姓名',\\n          prop: 'name'\\n        },\\n        {\\n          label: '性别',\\n          prop: 'sex',\\n          // 格式化表格,与element-ui 的表格属性相同\\n          formatter(row, column, cellValue) {\\n            return cellValue === 1 ? '男' : '女'\\n          }\\n        },\\n        {\\n          label: '年龄',\\n          prop: 'age'\\n        },\\n        {\\n          label: '好友',\\n          prop: 'officialAccount'\\n        },\\n        // 行编辑按钮，在表格末尾出现，自动锁定右侧\\n        {\\n          width: 220,\\n          label: '操作',\\n          actions: [\\n            {\\n              id: 'follow',\\n              text: '添加好友',\\n              click: this.$_handleFollowAuthor\\n            },\\n            {\\n              id: 'slot',\\n              useSlot: true\\n            }\\n          ]\\n        }\\n      ]),\\n      data: [],\\n      // 当前页码\\n      currentPage: 1,\\n      // 每页条数\\n      pageSize: 10,\\n      // 总条数\\n      total: 0,\\n      loading: false,\\n      buttons: Object.freeze([\\n        {\\n          // id 必须有而且是在当前按钮数组里面是唯一的\\n          id: 'add',\\n          text: '新增',\\n          type: 'primary',\\n          icon: 'el-icon-circle-plus',\\n          click: this.$_handleAdd\\n        },\\n        {\\n          id: 'slot',\\n          useSlot: true\\n        }\\n      ])\\n    }\\n  },\\n  created() {\\n    this.loadData()\\n  },\\n  methods: {\\n    // 加载表格数据\\n    loadData() {\\n      this.loading = true\\n      setTimeout(() => {\\n        this.total = 40\\n        const { currentPage, pageSize } = this\\n        this.data = new Array(pageSize).fill({}).map((item, index) => {\\n          return {\\n            id: currentPage + (index + 1) * 10,\\n            name: `森林${currentPage + (index + 1) * 10}`,\\n            sex: Math.random() > 0.5 ? 1 : 0,\\n            age: Math.floor(Math.random() * 100),\\n            officialAccount: '前端Sir'\\n          }\\n        })\\n        this.loading = false\\n      }, 1000)\\n    },\\n    $_handlePageChange() {\\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\\n      console.log(this.pageSize, this.currentPage)\\n      this.loadData()\\n    },\\n    // 新增\\n    $_handleAdd() {\\n      this.$alert('点击了新增按钮')\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(6),_c('p',[_vm._v(\"表格行编辑\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"表格行编辑\")])]),_c('template',{slot:\"source\"},[_c('element-demo4')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div style=\\\"height: 150px;\\\">\\n    <fst-table\\n      ref=\\\"table\\\"\\n      :columns=\\\"columns\\\"\\n      :data=\\\"data\\\"\\n      :pagination=\\\"false\\\"\\n      :selectable=\\\"selectable\\\"\\n      :sequence=\\\"sequence\\\"\\n    />\\n  </div>\\n</template>\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      columns: Object.freeze([\\n        {\\n          label: '姓名',\\n          prop: 'name',\\n          editable: true,\\n          field: {\\n            componentType: 'input',\\n            rules: [\\n              {\\n                required: true,\\n                message: '请输入姓名'\\n              }\\n            ]\\n          }\\n        },\\n        {\\n          label: '性别',\\n          prop: 'sex',\\n          // 格式化表格,与element-ui 的表格属性相同\\n          formatter(row, column, cellValue) {\\n            return cellValue === '1' ? '男' : '女'\\n          },\\n          editable: true,\\n          field: {\\n            componentType: 'select',\\n            options: [\\n              {\\n                label: '男',\\n                value: '1'\\n              },\\n              {\\n                label: '女',\\n                value: '0'\\n              }\\n            ]\\n          }\\n        },\\n        {\\n          label: '年龄',\\n          prop: 'age',\\n          editable: true,\\n          field: {\\n            componentType: 'number'\\n          }\\n        },\\n        {\\n          label: '操作',\\n          actions: [\\n            {\\n              id: 'edit',\\n              text: '编辑',\\n              before: row => {\\n                return !this.editIds.includes(row.id)\\n              },\\n              click: this.$_handleEdit\\n            },\\n            {\\n              id: 'save',\\n              text: '保存',\\n              before: row => {\\n                return this.editIds.includes(row.id)\\n              },\\n              click: this.$_handleSave\\n            }\\n          ]\\n        }\\n      ]),\\n      data: [\\n        {\\n          // 行编辑必须指定rowKey字段，默认是id,如果修改为其他字段，需要给表格指定row-key=\\\"字段名\\\"\\n          id: '0',\\n          name: '森林',\\n          sex: '1',\\n          age: 18\\n        },\\n        {\\n          // 行编辑必须指定rowKey字段，默认是id,如果修改为其他字段，需要给表格指定row-key=\\\"字段名\\\"\\n          id: '1',\\n          name: '森林1',\\n          sex: '0',\\n          age: 18\\n        }\\n      ],\\n      // 是否显示多选框\\n      selectable: true,\\n      // 是否显示序号列\\n      sequence: true,\\n      editIds: []\\n    }\\n  },\\n  methods: {\\n    $_handleEdit(row) {\\n      // 通过调用 startEditRow 可以开启行编辑\\n      this.$refs.table.startEditRow(row.id)\\n      // 记录开启了行编辑的id\\n      this.editIds.push(row.id)\\n    },\\n    $_handleSave(row) {\\n      this.$refs.table.endEditRow(row.id, (valid, result, oldRow) => {\\n        if (valid) {\\n          const index = this.editIds.findIndex(item => item === row.id)\\n          this.editIds.splice(index, 1)\\n        } else {\\n          // 如果校验失败，则返回校验的第一个输入框的异常信息\\n          console.log(result)\\n          this.$message.error(result.message)\\n        }\\n      })\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(7),_vm._m(8),_vm._m(9),_vm._m(10),_vm._m(11),_vm._m(12),_vm._m(13),_vm._m(14),_vm._m(15),_vm._m(16),_vm._m(17),_vm._m(18),_vm._m(19),_vm._m(20),_vm._m(21),_vm._m(22),_vm._m(23)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"searchtab-table\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#searchtab-table\"}},[_vm._v(\"¶\")]),_vm._v(\" SearchTab Table\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"开发者：（谢森林）\"),_c('br'),_vm._v(\" 将表格常用的功能进行了整合封装，能高效完成常规业务开发\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"ji-chu-yong-fa\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#ji-chu-yong-fa\"}},[_vm._v(\"¶\")]),_vm._v(\" 基础用法\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"shi-yong-fen-ye\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#shi-yong-fen-ye\"}},[_vm._v(\"¶\")]),_vm._v(\" 使用分页\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"ding-bu-an-niu-yu-xing-cao-zuo-an-niu\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#ding-bu-an-niu-yu-xing-cao-zuo-an-niu\"}},[_vm._v(\"¶\")]),_vm._v(\" 顶部按钮与行操作按钮\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"an-niu-cha-cao\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#an-niu-cha-cao\"}},[_vm._v(\"¶\")]),_vm._v(\" 按钮插槽\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"biao-ge-xing-bian-ji\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#biao-ge-xing-bian-ji\"}},[_vm._v(\"¶\")]),_vm._v(\" 表格行编辑\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"table-attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" Table Attributes\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"columns\")]),_c('td',[_vm._v(\"表格列,详见字段属性说明\")]),_c('td',[_c('code',[_vm._v(\"Array<Object>\")])]),_c('td',[_c('code',[_vm._v(\"[]\")])])]),_c('tr',[_c('td',[_vm._v(\"buttons\")]),_c('td',[_vm._v(\"表格上方的按钮，详见按钮字符说明\")]),_c('td',[_c('code',[_vm._v(\"Array<Object>\")])]),_c('td',[_c('code',[_vm._v(\"[]\")])])]),_c('tr',[_c('td',[_vm._v(\"pagination\")]),_c('td',[_vm._v(\"是否启用分页\")]),_c('td',[_c('code',[_vm._v(\"Boolean\")])]),_c('td',[_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"pageSize\")]),_c('td',[_vm._v(\"分页后每页条数\")]),_c('td',[_c('code',[_vm._v(\"Number\")])]),_c('td',[_c('code',[_vm._v(\"10\")])])]),_c('tr',[_c('td',[_vm._v(\"total\")]),_c('td',[_vm._v(\"分页后数据总条数\")]),_c('td',[_c('code',[_vm._v(\"Number\")])]),_c('td',[_c('code',[_vm._v(\"0\")])])]),_c('tr',[_c('td',[_vm._v(\"currentPage\")]),_c('td',[_vm._v(\"分页后当前页码\")]),_c('td',[_c('code',[_vm._v(\"Number\")])]),_c('td',[_c('code',[_vm._v(\"0\")])])]),_c('tr',[_c('td',[_vm._v(\"selectable\")]),_c('td',[_vm._v(\"表格是否显示复选框\")]),_c('td',[_c('code',[_vm._v(\"Boolean\")])]),_c('td',[_c('code',[_vm._v(\"true\")])])]),_c('tr',[_c('td',[_vm._v(\"sequence\")]),_c('td',[_vm._v(\"表格前是否显示序号列\")]),_c('td',[_c('code',[_vm._v(\"Boolean\")])]),_c('td',[_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"height\")]),_c('td',[_vm._v(\"表格高度,只有在特定情况下使用\")]),_c('td',[_vm._v(\"`Number\")]),_c('td',[_vm._v(\"String\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"table-event\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-event\"}},[_vm._v(\"¶\")]),_vm._v(\" Table Event\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('em',[_vm._v(\"表格除了以下事件外，可以使用element ui 表格组件的其他所有事件\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"事件名\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"query\")]),_c('td',[_vm._v(\"有搜索字段后点击搜索按钮触发\")]),_c('td',[_c('code',[_vm._v(\"formData\")]),_vm._v(\":输入的搜索条件\")])]),_c('tr',[_c('td',[_vm._v(\"page-change\")]),_c('td',[_vm._v(\"用户修改分页条数，页码等触发\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"selection-change\")]),_c('td',[_vm._v(\"用户修改复选框选中的行时触发\")]),_c('td',[_c('code',[_vm._v(\"selection\")]),_vm._v(\": 选中的行数据\")])]),_c('tr',[_c('td',[_vm._v(\"current-change\")]),_c('td',[_vm._v(\"用户点击行时触发\")]),_c('td',[_c('code',[_vm._v(\"current\")]),_vm._v(\": 点击的行数据\")])]),_c('tr',[_c('td',[_vm._v(\"sort-change\")]),_c('td',[_vm._v(\"在启用表头排序后排序状态发生变化触发\")]),_c('td',[_vm._v(\"-\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"table-function\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-function\"}},[_vm._v(\"¶\")]),_vm._v(\" Table Function\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"方法名\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"返回值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"startEditRow\")]),_c('td',[_vm._v(\"开始行编辑\")]),_c('td',[_c('code',[_vm._v(\"index\")]),_vm._v(\": 编辑的行索引\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"endEditRow\")]),_c('td',[_vm._v(\"结束行编辑\")]),_c('td',[_c('code',[_vm._v(\"callback(valid, data, rows)\")]),_vm._v(\": 回调函数， valid: 行编辑验证是否成功 data: 验证成功行编辑数据，失败时为失败原因 rows: 编辑的这一行的原始数据\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"isEditRow\")]),_c('td',[_vm._v(\"当前表格是否正在行编辑\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_c('code',[_vm._v(\"result:Boolean\")])])]),_c('tr',[_c('td',[_vm._v(\"cancelEditRow\")]),_c('td',[_vm._v(\"取消行编辑\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"getSelectionRows\")]),_c('td',[_vm._v(\"获取复选框选中的行\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_c('code',[_vm._v(\"rows:Array<row>\")])])]),_c('tr',[_c('td',[_vm._v(\"getCurrentRow\")]),_c('td',[_vm._v(\"获取点击行选中的行\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_c('code',[_vm._v(\"row:Object\")])])]),_c('tr',[_c('td',[_vm._v(\"setCurrentRow\")]),_c('td',[_vm._v(\"单行选中时设置选中的行\")]),_c('td',[_c('code',[_vm._v(\"row:Object\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"getEditFieldValues\")]),_c('td',[_vm._v(\"获取正在编辑的行的数据\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_c('code',[_vm._v(\"data:Object\")])])]),_c('tr',[_c('td',[_vm._v(\"setEditFieldValues\")]),_c('td',[_vm._v(\"设置正在编辑行的数据\")]),_c('td',[_c('code',[_vm._v(\"data:Object\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"toggleRowSelection\")]),_c('td',[_vm._v(\"启用复选后切换行的选中状态\")]),_c('td',[_c('code',[_vm._v(\"row: Object, select: Boolean\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"resetQueryFields\")]),_c('td',[_vm._v(\"重置搜索条件\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"doLayout\")]),_c('td',[_vm._v(\"重新布局表格,当表格父容器由隐藏状态变为显示时，可能表格布局会错乱\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"-\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"slot\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#slot\"}},[_vm._v(\"¶\")]),_vm._v(\" Slot\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"插槽\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"column\")]),_c('td',[_vm._v(\"表格列插槽，可以自定义表格列渲染方式\")]),_c('td',[_c('code',[_vm._v(\"{row,column,prop,cellValue,$index,field}\")]),_vm._v(\" \"),_c('code',[_vm._v(\"field\")]),_vm._v(\"为行编辑字段信息\")])]),_c('tr',[_c('td',[_vm._v(\"header\")]),_c('td',[_vm._v(\"自定义表格表头显示方式\")]),_c('td',[_c('code',[_vm._v(\"{label,prop,column, $index, field }\")])])]),_c('tr',[_c('td',[_vm._v(\"button\")]),_c('td',[_vm._v(\"自定义表头顶部按钮\")]),_c('td',[_c('code',[_vm._v(\"{button, selectedRow}\")]),_vm._v(\" \"),_c('code',[_vm._v(\"selectedRow\")]),_vm._v(\"为选中的表格行数据\")])]),_c('tr',[_c('td',[_vm._v(\"toolbar\")]),_c('td',[_vm._v(\"自定义顶部工具条, 工具条会放在左侧按钮与右侧搜索区域中间\")]),_c('td',[_vm._v(\"-\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"column-attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#column-attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" Column Attributes\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('em',[_vm._v(\"列属性除以下属性外，elementui 列其他属性均可使用\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"label\")]),_c('td',[_vm._v(\"列名\")]),_c('td',[_c('code',[_vm._v(\"String\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"prop\")]),_c('td',[_vm._v(\"列属性\")]),_c('td',[_c('code',[_vm._v(\"String\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"width\")]),_c('td',[_vm._v(\"表头宽度\")]),_c('td',[_c('code',[_vm._v(\"Number\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"sortable\")]),_c('td',[_vm._v(\"是否排序列\")]),_c('td',[_c('code',[_vm._v(\"Boolean\")])]),_c('td',[_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"formatter\")]),_c('td',[_vm._v(\"单个元格式化\")]),_c('td',[_c('code',[_vm._v(\"(row,column,cellValue):String\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"nests\")]),_c('td',[_vm._v(\"嵌套列\")]),_c('td',[_c('code',[_vm._v(\"Array<Column>\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"events\")]),_c('td',[_vm._v(\"单元格事件，见elementui单元格事件\")]),_c('td',[_c('code',[_vm._v(\"Object<Event>\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"actions\")]),_c('td',[_vm._v(\"操作列，详见操作列属性\")]),_c('td',[_c('code',[_vm._v(\"Array<Object> \")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"editable\")]),_c('td',[_vm._v(\"是否可编辑行\")]),_c('td',[_c('code',[_vm._v(\"Boolean\")])]),_c('td',[_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"field\")]),_c('td',[_vm._v(\"行编辑字符，详见行编辑字段属性\")]),_c('td',[_c('code',[_vm._v(\"Object\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"beforeEdit\")]),_c('td',[_vm._v(\"当前单元格开启编辑时调用，返回true则开启编辑\")]),_c('td',[_c('code',[_vm._v(\"(row,column,cellValue,index):Boolean\")])]),_c('td')]),_c('tr',[_c('td',[_vm._v(\"useSlot\")]),_c('td',[_vm._v(\"是否在当前列使用插槽，插槽名称为 \"),_c('code',[_vm._v(\"column\")])]),_c('td',[_c('code',[_vm._v(\"Boolean\")])]),_c('td',[_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"hidden\")]),_c('td',[_vm._v(\"是否隐藏当前列\")]),_c('td',[_vm._v(\"`Boolean\")]),_c('td',[_vm._v(\"Function`\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"table-headbtn-attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-headbtn-attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" Table HeadBtn Attributes\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('em',[_vm._v(\"表头按钮除以下属性外，elementui 按钮其他属性均可使用\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"id\")]),_c('td',[_vm._v(\"按钮唯一标识，必填\")]),_c('td',[_vm._v(\"`String\")]),_c('td',[_vm._v(\"Number`\")])]),_c('tr',[_c('td',[_vm._v(\"text\")]),_c('td',[_vm._v(\"按钮显示文字\")]),_c('td',[_c('code',[_vm._v(\"String\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"icon\")]),_c('td',[_vm._v(\"按钮显示图标\")]),_c('td',[_c('code',[_vm._v(\"String\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"click\")]),_c('td',[_vm._v(\"点击按钮事件,传入选中的行数据\")]),_c('td',[_c('code',[_vm._v(\"(rows):void\")])]),_c('td',[_vm._v(\"-\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"row-button-attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#row-button-attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" row Button Attributes\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"id\")]),_c('td',[_vm._v(\"按钮唯一标识，必填\")]),_c('td',[_vm._v(\"`String\")]),_c('td',[_vm._v(\"Number`\")])]),_c('tr',[_c('td',[_vm._v(\"text\")]),_c('td',[_vm._v(\"按钮冒泡显示的文字\")]),_c('td',[_c('code',[_vm._v(\"String\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"icon\")]),_c('td',[_vm._v(\"按钮图标，必填\")]),_c('td',[_c('code',[_vm._v(\"String\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"before\")]),_c('td',[_vm._v(\"按钮渲染前调用，返回false不渲染按钮\")]),_c('td',[_c('code',[_vm._v(\"(row,column,index):Boolean\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"click\")]),_c('td',[_vm._v(\"点击按钮事件\")]),_c('td',[_c('code',[_vm._v(\"(row,column,index):void\")])]),_c('td',[_vm._v(\"-\")])])])])}]\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content element-doc\">\n        <h2 id=\"searchtab-table\"><a class=\"header-anchor\" href=\"#searchtab-table\">¶</a> SearchTab Table</h2>\n<p>开发者：（谢森林）<br/>\n将表格常用的功能进行了整合封装，能高效完成常规业务开发</p>\n<h3 id=\"ji-chu-yong-fa\"><a class=\"header-anchor\" href=\"#ji-chu-yong-fa\">¶</a> 基础用法</h3>\n<p>简单使用</p>\n<demo-block>\n        <div><p>只显示表头与数据</p>\n</div>\n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div style=&quot;height: 100px;&quot;&gt;\n    &lt;fst-table :columns=&quot;columns&quot; :data=&quot;data&quot; :pagination=&quot;false&quot;/&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        }\n      ]),\n      data: [\n        {\n          name: '森林',\n          sex: 1,\n          age: 18\n        }\n      ],\n      // 是否显示多选框\n      selectable: true,\n      // 是否显示序号列\n      sequence: true\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"shi-yong-fen-ye\"><a class=\"header-anchor\" href=\"#shi-yong-fen-ye\">¶</a> 使用分页</h3>\n<p>使用分页</p>\n<demo-block>\n        <div><p>显示分页组件，配置参数</p>\n</div>\n        <template slot=\"source\"><element-demo1 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;fst-table\n    v-loading=&quot;loading&quot;\n    :columns=&quot;columns&quot;\n    :data=&quot;data&quot;\n    :current-page.sync=&quot;currentPage&quot;\n    :page-size.sync=&quot;pageSize&quot;\n    :total=&quot;total&quot;\n    height=&quot;auto&quot;\n    @page-change=&quot;$_handlePageChange&quot;\n  /&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        }\n      ]),\n      data: [],\n      // 当前页码\n      currentPage: 1,\n      // 每页条数\n      pageSize: 10,\n      // 总条数\n      total: 0,\n      loading: false\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    // 加载表格数据\n    loadData() {\n      this.loading = true\n      setTimeout(() =&gt; {\n        this.total = 40\n        const { currentPage, pageSize } = this\n        this.data = new Array(pageSize).fill({}).map((item, index) =&gt; {\n          return {\n            name: `森林${currentPage + (index + 1) * 10}`,\n            sex: Math.random() &gt; 0.5 ? 1 : 0,\n            age: Math.floor(Math.random() * 100)\n          }\n        })\n        this.loading = false\n      }, 1000)\n    },\n    $_handlePageChange() {\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\n      console.log(this.pageSize, this.currentPage)\n      this.loadData()\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"ding-bu-an-niu-yu-xing-cao-zuo-an-niu\"><a class=\"header-anchor\" href=\"#ding-bu-an-niu-yu-xing-cao-zuo-an-niu\">¶</a> 顶部按钮与行操作按钮</h3>\n<p>使用顶部按钮与行操作按钮</p>\n<demo-block>\n        <div><p>顶部按钮与行操作按钮</p>\n</div>\n        <template slot=\"source\"><element-demo2 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div style=&quot;height: 300px;&quot;&gt;\n    &lt;fst-table\n      v-loading=&quot;loading&quot;\n      :columns=&quot;columns&quot;\n      :data=&quot;data&quot;\n      :current-page.sync=&quot;currentPage&quot;\n      :page-size.sync=&quot;pageSize&quot;\n      :total=&quot;total&quot;\n      :buttons=&quot;buttons&quot;\n      @page-change=&quot;$_handlePageChange&quot;\n    /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          // 可以指定列的宽度，与element-ui原生用法一致\n          width: 220,\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        },\n        {\n          label: '公众号',\n          prop: 'officialAccount'\n        },\n        // 行编辑按钮，在表格末尾出现，自动锁定右侧\n        {\n          width: 180,\n          label: '操作',\n          actions: [\n            {\n              id: 'follow',\n              text: '添加好友',\n              click: this.$_handleFollowAuthor\n            },\n            {\n              id: 'edit',\n              text: '编辑',\n              // 可以通过before控制按钮是否显示，比如下面年龄四十岁的才会显示编辑按钮\n              before(row) {\n                return row.age &lt; 40\n              },\n              click: this.$_handleEdit\n            },\n            {\n              id: 'delete',\n              text: '删除',\n              icon: 'el-icon-delete',\n              disabled(row) {\n                return row.sex === 0\n              },\n              // 为了拿到this,这里需要用箭头函数\n              click: () =&gt; {\n                this.$alert('女生被禁止删除了')\n              }\n            }\n          ]\n        }\n      ]),\n      data: [],\n      // 当前页码\n      currentPage: 1,\n      // 每页条数\n      pageSize: 10,\n      // 总条数\n      total: 0,\n      loading: false,\n      buttons: Object.freeze([\n        {\n          // id 必须有而且是在当前按钮数组里面是唯一的\n          id: 'add',\n          text: '新增',\n          type: 'primary',\n          icon: 'el-icon-circle-plus',\n          click: this.$_handleAdd\n        },\n        {\n          id: 'delete',\n          text: '删除',\n          // rows 是表格选中的行，如果没有选中行，则禁用删除按钮, disabled可以是一个boolean值或者函数\n          disabled: rows =&gt; !rows.length,\n          click: this.$_handleRemove\n        },\n        {\n          id: 'auth',\n          text: '这个按钮根据权限显示',\n          // 可以通过返回 true/false来控制按钮是否显示\n          before: (/** rows */) =&gt; {\n            return true\n          }\n        },\n        {\n          id: 'dropdown',\n          text: '下拉按钮',\n          children: [\n            {\n              id: 'moveUp',\n              text: '上移',\n              icon: 'el-icon-arrow-up',\n              click: () =&gt; {\n                console.log('上移')\n              }\n            },\n            {\n              id: 'moveDown',\n              text: '下移',\n              icon: 'el-icon-arrow-down',\n              disabled: rows =&gt; !rows.length,\n              click: () =&gt; {\n                console.log('下移')\n              }\n            }\n          ]\n        }\n      ])\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    // 加载表格数据\n    loadData() {\n      this.loading = true\n      setTimeout(() =&gt; {\n        this.total = 40\n        const { currentPage, pageSize } = this\n        this.data = new Array(pageSize).fill({}).map((item, index) =&gt; {\n          return {\n            id: currentPage + (index + 1) * 10,\n            name: `森林${currentPage + (index + 1) * 10}`,\n            sex: Math.random() &gt; 0.5 ? 1 : 0,\n            age: Math.floor(Math.random() * 100),\n            officialAccount: '前端Sir'\n          }\n        })\n        this.loading = false\n      }, 1000)\n    },\n    $_handlePageChange() {\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\n      console.log(this.pageSize, this.currentPage)\n      this.loadData()\n    },\n    // 新增\n    $_handleAdd() {\n      this.$alert('点击了新增按钮')\n    },\n    // 顶部按钮会自动将表格所选的行传出来\n    $_handleRemove(rows) {\n      const ids = rows.map(({ id }) =&gt; id)\n      this.$alert(`要删除的行id为${ids.join(',')}`)\n    },\n    // 关注作者公众号\n    $_handleFollowAuthor() {\n      const image = require('../assets/images/qrcode.png')\n      const h = this.$createElement\n      this.$msgbox({\n        title: '扫码添加',\n        message: h('img', {\n          attrs: {\n            src: image\n          },\n          style: {\n            width: '400px'\n          }\n        })\n      })\n    },\n    /**\n     * row 这一行的数据\n     */\n    $_handleEdit(row, column) {\n      console.log(row, column)\n      this.$alert(`点击了姓名为【${row.name}】的行上的按钮`)\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"an-niu-cha-cao\"><a class=\"header-anchor\" href=\"#an-niu-cha-cao\">¶</a> 按钮插槽</h3>\n<p>按钮使用插槽</p>\n<demo-block>\n        <div><p>按钮使用插槽</p>\n</div>\n        <template slot=\"source\"><element-demo3 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div style=&quot;height: 300px;&quot;&gt;\n    &lt;fst-table\n      v-loading=&quot;loading&quot;\n      :columns=&quot;columns&quot;\n      :data=&quot;data&quot;\n      :current-page.sync=&quot;currentPage&quot;\n      :page-size.sync=&quot;pageSize&quot;\n      :total=&quot;total&quot;\n      :buttons=&quot;buttons&quot;\n      @page-change=&quot;$_handlePageChange&quot;\n    &gt;\n      &lt;template #button=&quot;{id}&quot;&gt;\n        &lt;template v-if=&quot;id === 'slot'&quot;&gt;\n          &lt;el-button type=&quot;primary&quot; size=&quot;small&quot;&gt;\n            自定义顶部按钮\n          &lt;/el-button&gt;\n        &lt;/template&gt;\n      &lt;/template&gt;\n\n      &lt;template #action=&quot;{id}&quot;&gt;\n        &lt;template v-if=&quot;id === 'slot'&quot;&gt;\n          &lt;el-button type=&quot;text&quot; size=&quot;small&quot;&gt;\n            自定义操作按钮\n          &lt;/el-button&gt;\n        &lt;/template&gt;\n      &lt;/template&gt;\n    &lt;/fst-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          // 可以指定列的宽度，与element-ui原生用法一致\n          width: 220,\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        },\n        {\n          label: '好友',\n          prop: 'officialAccount'\n        },\n        // 行编辑按钮，在表格末尾出现，自动锁定右侧\n        {\n          width: 220,\n          label: '操作',\n          actions: [\n            {\n              id: 'follow',\n              text: '添加好友',\n              click: this.$_handleFollowAuthor\n            },\n            {\n              id: 'slot',\n              useSlot: true\n            }\n          ]\n        }\n      ]),\n      data: [],\n      // 当前页码\n      currentPage: 1,\n      // 每页条数\n      pageSize: 10,\n      // 总条数\n      total: 0,\n      loading: false,\n      buttons: Object.freeze([\n        {\n          // id 必须有而且是在当前按钮数组里面是唯一的\n          id: 'add',\n          text: '新增',\n          type: 'primary',\n          icon: 'el-icon-circle-plus',\n          click: this.$_handleAdd\n        },\n        {\n          id: 'slot',\n          useSlot: true\n        }\n      ])\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    // 加载表格数据\n    loadData() {\n      this.loading = true\n      setTimeout(() =&gt; {\n        this.total = 40\n        const { currentPage, pageSize } = this\n        this.data = new Array(pageSize).fill({}).map((item, index) =&gt; {\n          return {\n            id: currentPage + (index + 1) * 10,\n            name: `森林${currentPage + (index + 1) * 10}`,\n            sex: Math.random() &gt; 0.5 ? 1 : 0,\n            age: Math.floor(Math.random() * 100),\n            officialAccount: '前端Sir'\n          }\n        })\n        this.loading = false\n      }, 1000)\n    },\n    $_handlePageChange() {\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\n      console.log(this.pageSize, this.currentPage)\n      this.loadData()\n    },\n    // 新增\n    $_handleAdd() {\n      this.$alert('点击了新增按钮')\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"biao-ge-xing-bian-ji\"><a class=\"header-anchor\" href=\"#biao-ge-xing-bian-ji\">¶</a> 表格行编辑</h3>\n<p>表格行编辑</p>\n<demo-block>\n        <div><p>表格行编辑</p>\n</div>\n        <template slot=\"source\"><element-demo4 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div style=&quot;height: 150px;&quot;&gt;\n    &lt;fst-table\n      ref=&quot;table&quot;\n      :columns=&quot;columns&quot;\n      :data=&quot;data&quot;\n      :pagination=&quot;false&quot;\n      :selectable=&quot;selectable&quot;\n      :sequence=&quot;sequence&quot;\n    /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          label: '姓名',\n          prop: 'name',\n          editable: true,\n          field: {\n            componentType: 'input',\n            rules: [\n              {\n                required: true,\n                message: '请输入姓名'\n              }\n            ]\n          }\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === '1' ? '男' : '女'\n          },\n          editable: true,\n          field: {\n            componentType: 'select',\n            options: [\n              {\n                label: '男',\n                value: '1'\n              },\n              {\n                label: '女',\n                value: '0'\n              }\n            ]\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age',\n          editable: true,\n          field: {\n            componentType: 'number'\n          }\n        },\n        {\n          label: '操作',\n          actions: [\n            {\n              id: 'edit',\n              text: '编辑',\n              before: row =&gt; {\n                return !this.editIds.includes(row.id)\n              },\n              click: this.$_handleEdit\n            },\n            {\n              id: 'save',\n              text: '保存',\n              before: row =&gt; {\n                return this.editIds.includes(row.id)\n              },\n              click: this.$_handleSave\n            }\n          ]\n        }\n      ]),\n      data: [\n        {\n          // 行编辑必须指定rowKey字段，默认是id,如果修改为其他字段，需要给表格指定row-key=&quot;字段名&quot;\n          id: '0',\n          name: '森林',\n          sex: '1',\n          age: 18\n        },\n        {\n          // 行编辑必须指定rowKey字段，默认是id,如果修改为其他字段，需要给表格指定row-key=&quot;字段名&quot;\n          id: '1',\n          name: '森林1',\n          sex: '0',\n          age: 18\n        }\n      ],\n      // 是否显示多选框\n      selectable: true,\n      // 是否显示序号列\n      sequence: true,\n      editIds: []\n    }\n  },\n  methods: {\n    $_handleEdit(row) {\n      // 通过调用 startEditRow 可以开启行编辑\n      this.$refs.table.startEditRow(row.id)\n      // 记录开启了行编辑的id\n      this.editIds.push(row.id)\n    },\n    $_handleSave(row) {\n      this.$refs.table.endEditRow(row.id, (valid, result, oldRow) =&gt; {\n        if (valid) {\n          const index = this.editIds.findIndex(item =&gt; item === row.id)\n          this.editIds.splice(index, 1)\n        } else {\n          // 如果校验失败，则返回校验的第一个输入框的异常信息\n          console.log(result)\n          this.$message.error(result.message)\n        }\n      })\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"table-attributes\"><a class=\"header-anchor\" href=\"#table-attributes\">¶</a> Table Attributes</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>columns</td>\n<td>表格列,详见字段属性说明</td>\n<td><code>Array&lt;Object&gt;</code></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>buttons</td>\n<td>表格上方的按钮，详见按钮字符说明</td>\n<td><code>Array&lt;Object&gt;</code></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>pagination</td>\n<td>是否启用分页</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>pageSize</td>\n<td>分页后每页条数</td>\n<td><code>Number</code></td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td>total</td>\n<td>分页后数据总条数</td>\n<td><code>Number</code></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>currentPage</td>\n<td>分页后当前页码</td>\n<td><code>Number</code></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>selectable</td>\n<td>表格是否显示复选框</td>\n<td><code>Boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>sequence</td>\n<td>表格前是否显示序号列</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>height</td>\n<td>表格高度,只有在特定情况下使用</td>\n<td>`Number</td>\n<td>String</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"table-event\"><a class=\"header-anchor\" href=\"#table-event\">¶</a> Table Event</h3>\n<p><em>表格除了以下事件外，可以使用element ui 表格组件的其他所有事件</em></p>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>query</td>\n<td>有搜索字段后点击搜索按钮触发</td>\n<td><code>formData</code>:输入的搜索条件</td>\n</tr>\n<tr>\n<td>page-change</td>\n<td>用户修改分页条数，页码等触发</td>\n<td>-</td>\n</tr>\n<tr>\n<td>selection-change</td>\n<td>用户修改复选框选中的行时触发</td>\n<td><code>selection</code>: 选中的行数据</td>\n</tr>\n<tr>\n<td>current-change</td>\n<td>用户点击行时触发</td>\n<td><code>current</code>: 点击的行数据</td>\n</tr>\n<tr>\n<td>sort-change</td>\n<td>在启用表头排序后排序状态发生变化触发</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"table-function\"><a class=\"header-anchor\" href=\"#table-function\">¶</a> Table Function</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>startEditRow</td>\n<td>开始行编辑</td>\n<td><code>index</code>: 编辑的行索引</td>\n<td>-</td>\n</tr>\n<tr>\n<td>endEditRow</td>\n<td>结束行编辑</td>\n<td><code>callback(valid, data, rows)</code>: 回调函数， valid: 行编辑验证是否成功 data: 验证成功行编辑数据，失败时为失败原因 rows: 编辑的这一行的原始数据</td>\n<td>-</td>\n</tr>\n<tr>\n<td>isEditRow</td>\n<td>当前表格是否正在行编辑</td>\n<td>-</td>\n<td><code>result:Boolean</code></td>\n</tr>\n<tr>\n<td>cancelEditRow</td>\n<td>取消行编辑</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getSelectionRows</td>\n<td>获取复选框选中的行</td>\n<td>-</td>\n<td><code>rows:Array&lt;row&gt;</code></td>\n</tr>\n<tr>\n<td>getCurrentRow</td>\n<td>获取点击行选中的行</td>\n<td>-</td>\n<td><code>row:Object</code></td>\n</tr>\n<tr>\n<td>setCurrentRow</td>\n<td>单行选中时设置选中的行</td>\n<td><code>row:Object</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>getEditFieldValues</td>\n<td>获取正在编辑的行的数据</td>\n<td>-</td>\n<td><code>data:Object</code></td>\n</tr>\n<tr>\n<td>setEditFieldValues</td>\n<td>设置正在编辑行的数据</td>\n<td><code>data:Object</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>toggleRowSelection</td>\n<td>启用复选后切换行的选中状态</td>\n<td><code>row: Object, select: Boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>resetQueryFields</td>\n<td>重置搜索条件</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>doLayout</td>\n<td>重新布局表格,当表格父容器由隐藏状态变为显示时，可能表格布局会错乱</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"slot\"><a class=\"header-anchor\" href=\"#slot\">¶</a> Slot</h3>\n<table>\n<thead>\n<tr>\n<th>插槽</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>column</td>\n<td>表格列插槽，可以自定义表格列渲染方式</td>\n<td><code>{row,column,prop,cellValue,$index,field}</code>  <code>field</code>为行编辑字段信息</td>\n</tr>\n<tr>\n<td>header</td>\n<td>自定义表格表头显示方式</td>\n<td><code>{label,prop,column, $index, field }</code></td>\n</tr>\n<tr>\n<td>button</td>\n<td>自定义表头顶部按钮</td>\n<td><code>{button, selectedRow}</code>  <code>selectedRow</code>为选中的表格行数据</td>\n</tr>\n<tr>\n<td>toolbar</td>\n<td>自定义顶部工具条, 工具条会放在左侧按钮与右侧搜索区域中间</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"column-attributes\"><a class=\"header-anchor\" href=\"#column-attributes\">¶</a> Column Attributes</h3>\n<p><em>列属性除以下属性外，elementui 列其他属性均可使用</em></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>label</td>\n<td>列名</td>\n<td><code>String</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>prop</td>\n<td>列属性</td>\n<td><code>String</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>width</td>\n<td>表头宽度</td>\n<td><code>Number</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>sortable</td>\n<td>是否排序列</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>formatter</td>\n<td>单个元格式化</td>\n<td><code>(row,column,cellValue):String</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>nests</td>\n<td>嵌套列</td>\n<td><code>Array&lt;Column&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>events</td>\n<td>单元格事件，见elementui单元格事件</td>\n<td><code>Object&lt;Event&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>actions</td>\n<td>操作列，详见操作列属性</td>\n<td><code>Array&lt;Object&gt; </code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>editable</td>\n<td>是否可编辑行</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>field</td>\n<td>行编辑字符，详见行编辑字段属性</td>\n<td><code>Object</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>beforeEdit</td>\n<td>当前单元格开启编辑时调用，返回true则开启编辑</td>\n<td><code>(row,column,cellValue,index):Boolean</code></td>\n<td></td>\n</tr>\n<tr>\n<td>useSlot</td>\n<td>是否在当前列使用插槽，插槽名称为 <code>column</code></td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>是否隐藏当前列</td>\n<td>`Boolean</td>\n<td>Function`</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"table-headbtn-attributes\"><a class=\"header-anchor\" href=\"#table-headbtn-attributes\">¶</a> Table HeadBtn  Attributes</h3>\n<p><em>表头按钮除以下属性外，elementui 按钮其他属性均可使用</em></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>按钮唯一标识，必填</td>\n<td>`String</td>\n<td>Number`</td>\n</tr>\n<tr>\n<td>text</td>\n<td>按钮显示文字</td>\n<td><code>String</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>按钮显示图标</td>\n<td><code>String</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>click</td>\n<td>点击按钮事件,传入选中的行数据</td>\n<td><code>(rows):void</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"row-button-attributes\"><a class=\"header-anchor\" href=\"#row-button-attributes\">¶</a> row Button Attributes</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>按钮唯一标识，必填</td>\n<td>`String</td>\n<td>Number`</td>\n</tr>\n<tr>\n<td>text</td>\n<td>按钮冒泡显示的文字</td>\n<td><code>String</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>按钮图标，必填</td>\n<td><code>String</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>before</td>\n<td>按钮渲染前调用，返回false不渲染按钮</td>\n<td><code>(row,column,index):Boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>click</td>\n<td>点击按钮事件</td>\n<td><code>(row,column,index):void</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n\n      </section>\n    </template>\n    <script>\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticStyle:{\"height\":\"100px\"}},[_c('fst-table',{attrs:{\"columns\":_vm.columns,\"data\":_vm.data,\"pagination\":false}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        }\n      ]),\n      data: [\n        {\n          name: '森林',\n          sex: 1,\n          age: 18\n        }\n      ],\n      // 是否显示多选框\n      selectable: true,\n      // 是否显示序号列\n      sequence: true\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo1\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('fst-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"columns\":_vm.columns,\"data\":_vm.data,\"current-page\":_vm.currentPage,\"page-size\":_vm.pageSize,\"total\":_vm.total,\"height\":\"auto\"},on:{\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event},\"update:pageSize\":function($event){_vm.pageSize=$event},\"update:page-size\":function($event){_vm.pageSize=$event},\"page-change\":_vm.$_handlePageChange}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        }\n      ]),\n      data: [],\n      // 当前页码\n      currentPage: 1,\n      // 每页条数\n      pageSize: 10,\n      // 总条数\n      total: 0,\n      loading: false\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    // 加载表格数据\n    loadData() {\n      this.loading = true\n      setTimeout(() => {\n        this.total = 40\n        const { currentPage, pageSize } = this\n        this.data = new Array(pageSize).fill({}).map((item, index) => {\n          return {\n            name: `森林${currentPage + (index + 1) * 10}`,\n            sex: Math.random() > 0.5 ? 1 : 0,\n            age: Math.floor(Math.random() * 100)\n          }\n        })\n        this.loading = false\n      }, 1000)\n    },\n    $_handlePageChange() {\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\n      console.log(this.pageSize, this.currentPage)\n      this.loadData()\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo2\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticStyle:{\"height\":\"300px\"}},[_c('fst-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"columns\":_vm.columns,\"data\":_vm.data,\"current-page\":_vm.currentPage,\"page-size\":_vm.pageSize,\"total\":_vm.total,\"buttons\":_vm.buttons},on:{\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event},\"update:pageSize\":function($event){_vm.pageSize=$event},\"update:page-size\":function($event){_vm.pageSize=$event},\"page-change\":_vm.$_handlePageChange}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          // 可以指定列的宽度，与element-ui原生用法一致\n          width: 220,\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        },\n        {\n          label: '公众号',\n          prop: 'officialAccount'\n        },\n        // 行编辑按钮，在表格末尾出现，自动锁定右侧\n        {\n          width: 180,\n          label: '操作',\n          actions: [\n            {\n              id: 'follow',\n              text: '添加好友',\n              click: this.$_handleFollowAuthor\n            },\n            {\n              id: 'edit',\n              text: '编辑',\n              // 可以通过before控制按钮是否显示，比如下面年龄四十岁的才会显示编辑按钮\n              before(row) {\n                return row.age < 40\n              },\n              click: this.$_handleEdit\n            },\n            {\n              id: 'delete',\n              text: '删除',\n              icon: 'el-icon-delete',\n              disabled(row) {\n                return row.sex === 0\n              },\n              // 为了拿到this,这里需要用箭头函数\n              click: () => {\n                this.$alert('女生被禁止删除了')\n              }\n            }\n          ]\n        }\n      ]),\n      data: [],\n      // 当前页码\n      currentPage: 1,\n      // 每页条数\n      pageSize: 10,\n      // 总条数\n      total: 0,\n      loading: false,\n      buttons: Object.freeze([\n        {\n          // id 必须有而且是在当前按钮数组里面是唯一的\n          id: 'add',\n          text: '新增',\n          type: 'primary',\n          icon: 'el-icon-circle-plus',\n          click: this.$_handleAdd\n        },\n        {\n          id: 'delete',\n          text: '删除',\n          // rows 是表格选中的行，如果没有选中行，则禁用删除按钮, disabled可以是一个boolean值或者函数\n          disabled: rows => !rows.length,\n          click: this.$_handleRemove\n        },\n        {\n          id: 'auth',\n          text: '这个按钮根据权限显示',\n          // 可以通过返回 true/false来控制按钮是否显示\n          before: (/** rows */) => {\n            return true\n          }\n        },\n        {\n          id: 'dropdown',\n          text: '下拉按钮',\n          children: [\n            {\n              id: 'moveUp',\n              text: '上移',\n              icon: 'el-icon-arrow-up',\n              click: () => {\n                console.log('上移')\n              }\n            },\n            {\n              id: 'moveDown',\n              text: '下移',\n              icon: 'el-icon-arrow-down',\n              disabled: rows => !rows.length,\n              click: () => {\n                console.log('下移')\n              }\n            }\n          ]\n        }\n      ])\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    // 加载表格数据\n    loadData() {\n      this.loading = true\n      setTimeout(() => {\n        this.total = 40\n        const { currentPage, pageSize } = this\n        this.data = new Array(pageSize).fill({}).map((item, index) => {\n          return {\n            id: currentPage + (index + 1) * 10,\n            name: `森林${currentPage + (index + 1) * 10}`,\n            sex: Math.random() > 0.5 ? 1 : 0,\n            age: Math.floor(Math.random() * 100),\n            officialAccount: '前端Sir'\n          }\n        })\n        this.loading = false\n      }, 1000)\n    },\n    $_handlePageChange() {\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\n      console.log(this.pageSize, this.currentPage)\n      this.loadData()\n    },\n    // 新增\n    $_handleAdd() {\n      this.$alert('点击了新增按钮')\n    },\n    // 顶部按钮会自动将表格所选的行传出来\n    $_handleRemove(rows) {\n      const ids = rows.map(({ id }) => id)\n      this.$alert(`要删除的行id为${ids.join(',')}`)\n    },\n    // 关注作者公众号\n    $_handleFollowAuthor() {\n      const image = require('../assets/images/qrcode.png')\n      const h = this.$createElement\n      this.$msgbox({\n        title: '扫码添加',\n        message: h('img', {\n          attrs: {\n            src: image\n          },\n          style: {\n            width: '400px'\n          }\n        })\n      })\n    },\n    /**\n     * row 这一行的数据\n     */\n    $_handleEdit(row, column) {\n      console.log(row, column)\n      this.$alert(`点击了姓名为【${row.name}】的行上的按钮`)\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo3\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticStyle:{\"height\":\"300px\"}},[_c('fst-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"columns\":_vm.columns,\"data\":_vm.data,\"current-page\":_vm.currentPage,\"page-size\":_vm.pageSize,\"total\":_vm.total,\"buttons\":_vm.buttons},on:{\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event},\"update:pageSize\":function($event){_vm.pageSize=$event},\"update:page-size\":function($event){_vm.pageSize=$event},\"page-change\":_vm.$_handlePageChange},scopedSlots:_vm._u([{key:\"button\",fn:function(ref){\nvar id = ref.id;\nreturn [(id === 'slot')?[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"}},[_vm._v(\"\\n            自定义顶部按钮\\n          \")])]:_vm._e()]}},{key:\"action\",fn:function(ref){\nvar id = ref.id;\nreturn [(id === 'slot')?[_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"}},[_vm._v(\"\\n            自定义操作按钮\\n          \")])]:_vm._e()]}}])})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          // 可以指定列的宽度，与element-ui原生用法一致\n          width: 220,\n          label: '姓名',\n          prop: 'name'\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === 1 ? '男' : '女'\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age'\n        },\n        {\n          label: '好友',\n          prop: 'officialAccount'\n        },\n        // 行编辑按钮，在表格末尾出现，自动锁定右侧\n        {\n          width: 220,\n          label: '操作',\n          actions: [\n            {\n              id: 'follow',\n              text: '添加好友',\n              click: this.$_handleFollowAuthor\n            },\n            {\n              id: 'slot',\n              useSlot: true\n            }\n          ]\n        }\n      ]),\n      data: [],\n      // 当前页码\n      currentPage: 1,\n      // 每页条数\n      pageSize: 10,\n      // 总条数\n      total: 0,\n      loading: false,\n      buttons: Object.freeze([\n        {\n          // id 必须有而且是在当前按钮数组里面是唯一的\n          id: 'add',\n          text: '新增',\n          type: 'primary',\n          icon: 'el-icon-circle-plus',\n          click: this.$_handleAdd\n        },\n        {\n          id: 'slot',\n          useSlot: true\n        }\n      ])\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    // 加载表格数据\n    loadData() {\n      this.loading = true\n      setTimeout(() => {\n        this.total = 40\n        const { currentPage, pageSize } = this\n        this.data = new Array(pageSize).fill({}).map((item, index) => {\n          return {\n            id: currentPage + (index + 1) * 10,\n            name: `森林${currentPage + (index + 1) * 10}`,\n            sex: Math.random() > 0.5 ? 1 : 0,\n            age: Math.floor(Math.random() * 100),\n            officialAccount: '前端Sir'\n          }\n        })\n        this.loading = false\n      }, 1000)\n    },\n    $_handlePageChange() {\n      // 因为上面设置属性指定了.sync,所以这两个属性会自动变化\n      console.log(this.pageSize, this.currentPage)\n      this.loadData()\n    },\n    // 新增\n    $_handleAdd() {\n      this.$alert('点击了新增按钮')\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo4\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticStyle:{\"height\":\"150px\"}},[_c('fst-table',{ref:\"table\",attrs:{\"columns\":_vm.columns,\"data\":_vm.data,\"pagination\":false,\"selectable\":_vm.selectable,\"sequence\":_vm.sequence}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    return {\n      columns: Object.freeze([\n        {\n          label: '姓名',\n          prop: 'name',\n          editable: true,\n          field: {\n            componentType: 'input',\n            rules: [\n              {\n                required: true,\n                message: '请输入姓名'\n              }\n            ]\n          }\n        },\n        {\n          label: '性别',\n          prop: 'sex',\n          // 格式化表格,与element-ui 的表格属性相同\n          formatter(row, column, cellValue) {\n            return cellValue === '1' ? '男' : '女'\n          },\n          editable: true,\n          field: {\n            componentType: 'select',\n            options: [\n              {\n                label: '男',\n                value: '1'\n              },\n              {\n                label: '女',\n                value: '0'\n              }\n            ]\n          }\n        },\n        {\n          label: '年龄',\n          prop: 'age',\n          editable: true,\n          field: {\n            componentType: 'number'\n          }\n        },\n        {\n          label: '操作',\n          actions: [\n            {\n              id: 'edit',\n              text: '编辑',\n              before: row => {\n                return !this.editIds.includes(row.id)\n              },\n              click: this.$_handleEdit\n            },\n            {\n              id: 'save',\n              text: '保存',\n              before: row => {\n                return this.editIds.includes(row.id)\n              },\n              click: this.$_handleSave\n            }\n          ]\n        }\n      ]),\n      data: [\n        {\n          // 行编辑必须指定rowKey字段，默认是id,如果修改为其他字段，需要给表格指定row-key=\"字段名\"\n          id: '0',\n          name: '森林',\n          sex: '1',\n          age: 18\n        },\n        {\n          // 行编辑必须指定rowKey字段，默认是id,如果修改为其他字段，需要给表格指定row-key=\"字段名\"\n          id: '1',\n          name: '森林1',\n          sex: '0',\n          age: 18\n        }\n      ],\n      // 是否显示多选框\n      selectable: true,\n      // 是否显示序号列\n      sequence: true,\n      editIds: []\n    }\n  },\n  methods: {\n    $_handleEdit(row) {\n      // 通过调用 startEditRow 可以开启行编辑\n      this.$refs.table.startEditRow(row.id)\n      // 记录开启了行编辑的id\n      this.editIds.push(row.id)\n    },\n    $_handleSave(row) {\n      this.$refs.table.endEditRow(row.id, (valid, result, oldRow) => {\n        if (valid) {\n          const index = this.editIds.findIndex(item => item === row.id)\n          this.editIds.splice(index, 1)\n        } else {\n          // 如果校验失败，则返回校验的第一个输入框的异常信息\n          console.log(result)\n          this.$message.error(result.message)\n        }\n      })\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  ","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js!../../loader/md-loader/index.js!../../../../node_modules/eslint-loader/index.js??ref--14-0!./table.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js!../../loader/md-loader/index.js!../../../../node_modules/eslint-loader/index.js??ref--14-0!./table.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./table.md?vue&type=template&id=fb278a8e&\"\nimport script from \"./table.md?vue&type=script&lang=js&\"\nexport * from \"./table.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var map = {\n\t\"./docs/i18n.md\": \"5111\",\n\t\"./docs/icon.md\": \"9bcd\",\n\t\"./docs/installation.md\": \"acec\",\n\t\"./docs/quickstart.md\": \"0dae\",\n\t\"./docs/search-tab.md\": \"2496\",\n\t\"./docs/table.md\": \"6fb1\",\n\t\"./docs/tree-select.md\": \"cea0\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"828a\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content element-doc\"},[_vm._m(0),_c('p',[_vm._v(\"提供了一套常用的图标集合。\")]),_vm._m(1),_vm._m(2),_c('demo-block',[_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<i class=\\\"el-icon-edit\\\"></i>\\n<i class=\\\"el-icon-share\\\"></i>\\n<i class=\\\"el-icon-delete\\\"></i>\\n<el-button type=\\\"primary\\\" icon=\\\"el-icon-search\\\">搜索</el-button>\\n\\n\")])])])],2),_vm._m(3),_c('ul',{staticClass:\"icon-list\"},_vm._l((_vm.$icon),function(name){return _c('li',{key:name},[_c('span',[_c('i',{class:'el-icon-' + name}),_c('span',{staticClass:\"icon-name\"},[_vm._v(_vm._s('el-icon-' + name))])])])}),0)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"icon-tu-biao\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#icon-tu-biao\"}},[_vm._v(\"¶\")]),_vm._v(\" Icon 图标\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"shi-yong-fang-fa\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#shi-yong-fang-fa\"}},[_vm._v(\"¶\")]),_vm._v(\" 使用方法\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"直接通过设置类名为 \"),_c('code',[_vm._v(\"el-icon-iconName\")]),_vm._v(\" 来使用即可。例如：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"tu-biao-ji-he\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#tu-biao-ji-he\"}},[_vm._v(\"¶\")]),_vm._v(\" 图标集合\")])}]\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content element-doc\">\n        <h2 id=\"icon-tu-biao\"><a class=\"header-anchor\" href=\"#icon-tu-biao\">¶</a> Icon 图标</h2>\n<p>提供了一套常用的图标集合。</p>\n<h3 id=\"shi-yong-fang-fa\"><a class=\"header-anchor\" href=\"#shi-yong-fang-fa\">¶</a> 使用方法</h3>\n<p>直接通过设置类名为 <code>el-icon-iconName</code> 来使用即可。例如：</p>\n<demo-block>\n        \n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;i class=&quot;el-icon-edit&quot;&gt;&lt;/i&gt;\n&lt;i class=&quot;el-icon-share&quot;&gt;&lt;/i&gt;\n&lt;i class=&quot;el-icon-delete&quot;&gt;&lt;/i&gt;\n&lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-search&quot;&gt;搜索&lt;/el-button&gt;\n\n</code></pre></template></demo-block><h3 id=\"tu-biao-ji-he\"><a class=\"header-anchor\" href=\"#tu-biao-ji-he\">¶</a> 图标集合</h3>\n<ul class=\"icon-list\">\n  <li v-for=\"name in $icon\" :key=\"name\">\n    <span>\n      <i :class=\"'el-icon-' + name\"></i>\n      <span class=\"icon-name\">{{'el-icon-' + name}}</span>\n    </span>\n  </li>\n</ul>\n\n      </section>\n    </template>\n    <script>\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('i',{staticClass:\"el-icon-edit\"}),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-share\"}),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-delete\"}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-search\"}},[_vm._v(\"搜索\")])],1)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  ","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js!../../loader/md-loader/index.js!../../../../node_modules/eslint-loader/index.js??ref--14-0!./icon.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js!../../loader/md-loader/index.js!../../../../node_modules/eslint-loader/index.js??ref--14-0!./icon.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./icon.md?vue&type=template&id=5532a0a2&\"\nimport script from \"./icon.md?vue&type=script&lang=js&\"\nexport * from \"./icon.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/qrcode.85df5887.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content element-doc\"},[_c('h2',{attrs:{\"id\":\"an-zhuang\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#an-zhuang\"}},[_vm._v(\"¶\")]),_vm._v(\" 安装\")]),_c('h3',{attrs:{\"id\":\"npm-an-zhuang\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#npm-an-zhuang\"}},[_vm._v(\"¶\")]),_vm._v(\" npm 安装\")]),_c('p',[_vm._v(\"推荐使用 npm 的方式安装，它能更好地和 \"),_c('a',{attrs:{\"href\":\"https://webpack.js.org/\"}},[_vm._v(\"webpack\")]),_vm._v(\" 打包工具配合使用。\")]),_c('pre',[_c('code',{staticClass:\"language-shell\"},[_vm._v(\"npm i fst-ui -S\\n\")])])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./installation.md?vue&type=template&id=db407148&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content element-doc\"},[_vm._m(0),_vm._m(1),_vm._m(2),_vm._m(3),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"会根据values的类型区分单选或者多选，selectParams 为el-select 参数， treeParams为 el-tree 参数\")])]),_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <fst-tree-select  v-model=\\\"values\\\" :selectParams=\\\"selectParams\\\" :treeParams=\\\"treeParams\\\"></fst-tree-select>\\n</template>\\n\\n<script>\\n  export default { \\n    data() {\\n      return {\\n        values: '',\\n        selectParams: {\\n          clearable: true,\\n          placeholder: '请选择'\\n        },\\n        treeParams: {\\n          clickParent: true,\\n          data: [{\\n            label: `节点：1`,\\n            id: 1,\\n            children: [\\n              {\\n                label: `节点：2`,\\n                id: 2,\\n              }\\n            ]\\n          }],\\n          props: {\\n            children: 'children',\\n            label: 'label',\\n            value: 'id'\\n        },\\n      }\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(4),_vm._m(5),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"会根据values的类型区分单选或者多选，selectParams 为el-select 参数， treeParams为 el-tree 参数\")])]),_c('template',{slot:\"source\"},[_c('element-demo1')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <fst-tree-select  v-model=\\\"values\\\" :selectParams=\\\"selectParams\\\" :treeParams=\\\"treeParams\\\"></fst-tree-select>\\n</template>\\n\\n<script>\\n  export default { \\n    data() {\\n      return {\\n        values: [],\\n        selectParams: {\\n          clearable: true,\\n          placeholder: '请选择'\\n        },\\n        treeParams: {\\n          data: [{\\n            label: `节点：1`,\\n            id: 1,\\n            children: [\\n              {\\n                label: `节点：2`,\\n                id: 2,\\n              }\\n            ]\\n          }],\\n          props: {\\n            children: 'children',\\n            label: 'label',\\n            value: 'id'\\n        },\\n      }\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(6),_c('p',[_vm._v(\"更新、渲染\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"调用组件\"),_c('code',[_vm._v(\"treeDataUpdateFun\")]),_vm._v(\"可更新tree数据，\"),_c('code',[_vm._v(\"renderContent\")]),_vm._v(\"可自定义树节点绘制\")])]),_c('template',{slot:\"source\"},[_c('element-demo2')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <fst-tree-select  v-model=\\\"values\\\" :selectParams=\\\"selectParams\\\" :treeParams=\\\"treeParams\\\" ref=\\\"treeSelect\\\"></fst-tree-select>\\n</template>\\n\\n<script>\\n  export default { \\n    data() {\\n      return {\\n        values: [],\\n        selectParams: {\\n          clearable: true,\\n          placeholder: '请选择'\\n        },\\n        treeParams: {\\n          clickParent: false,\\n          data: [],\\n          leafOnly: true,\\n          renderContent: this._renderFun,\\n          props: {\\n            children: 'children',\\n            label: 'name',\\n            rootId: '0',\\n            disabled: 'disabled',\\n            parentId: 'parentId',\\n            value: 'id'\\n          },\\n       }\\n     }\\n   },\\n   mounted() {\\n      let data = [];\\n      const { label, children, parentId, value, rootId } = this.treeParams.props;\\n      for (let i = 0; i < 5; i++) {\\n          let rootNode = {\\n              [label]: `节点：${i}`,\\n              [parentId]: rootId,\\n              [value]: i,\\n              [children]: []\\n          };\\n          for (let a = 0; a < 5; a++) {\\n              let subId = `${rootNode[value]}_${a}`;\\n              let subNode = {\\n                  [label]: `子节点：${subId}`,\\n                  [parentId]: rootNode[value],\\n                  [value]: subId,\\n                  [children]: []\\n              };\\n              for (let b = 0; b < 5; b++) {\\n                  let endId = `${subId}_${b}`;\\n                  let endNode = {\\n                      [label]: `末级节点：${endId}`,\\n                      [parentId]: subNode[value],\\n                      [value]: endId,\\n                      [children]: []\\n                  };\\n                  subNode[children].push(endNode);\\n              }\\n              rootNode[children].push(subNode);\\n          }\\n          data.push(rootNode);\\n      }\\n      this.$nextTick(() => {\\n          this.$refs.treeSelect.treeDataUpdateFun(data);\\n      });\\n  },\\n  methods: {\\n    _renderFun(h, { node, data, store }) {\\n      const { props, clickParent } = this.treeParams;\\n      return (\\n          <span class={['custom-tree-node', !clickParent && data[props.children] && data[props.children].length ? 'disabled' : null]}>\\n              <span>{node.label}</span>\\n          </span>\\n      );\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(7),_c('p',[_vm._v(\"搜索\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"配置\"),_c('code',[_vm._v(\"filterable:true\")])])]),_c('template',{slot:\"source\"},[_c('element-demo3')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <fst-tree-select  v-model=\\\"values\\\" :selectParams=\\\"selectParams\\\" :treeParams=\\\"treeParams\\\" ref=\\\"treeSelect\\\"></fst-tree-select>\\n</template>\\n\\n<script>\\n  export default { \\n    data() {\\n      return {\\n        values: [],\\n        selectParams: {\\n          clearable: true,\\n          placeholder: '请选择'\\n        },\\n        treeParams: {\\n          clickParent: true,\\n          filterable: true,\\n          // 只想要子节点，不需要父节点\\n          leafOnly: true,\\n          includeHalfChecked: false,\\n          'check-strictly': false,\\n          'default-expand-all': true,\\n          'expand-on-click-node': false,\\n          'render-content': this._renderFun,\\n          props: {\\n            children: 'children',\\n            label: 'name',\\n            rootId: '0',\\n            disabled: 'disabled',\\n            parentId: 'parentId',\\n            value: 'id'\\n          },\\n       }\\n     }\\n   },\\n   mounted() {\\n      let data = [];\\n      const { label, children, parentId, value, rootId } = this.treeParams.props;\\n      for (let i = 0; i < 5; i++) {\\n          let rootNode = {\\n              [label]: `节点：${i}`,\\n              [parentId]: rootId,\\n              [value]: i,\\n              [children]: []\\n          };\\n          for (let a = 0; a < 5; a++) {\\n              let subId = `${rootNode[value]}_${a}`;\\n              let subNode = {\\n                  [label]: `子节点：${subId}`,\\n                  [parentId]: rootNode[value],\\n                  [value]: subId,\\n                  [children]: []\\n              };\\n              for (let b = 0; b < 5; b++) {\\n                  let endId = `${subId}_${b}`;\\n                  let endNode = {\\n                      [label]: `末级节点：${endId}`,\\n                      [parentId]: subNode[value],\\n                      [value]: endId,\\n                      [children]: []\\n                  };\\n                  subNode[children].push(endNode);\\n              }\\n              rootNode[children].push(subNode);\\n          }\\n          data.push(rootNode);\\n      }\\n      this.$nextTick(() => {\\n          this.$refs.treeSelect.treeDataUpdateFun(data);\\n      });\\n  },\\n  methods: {\\n    _renderFun(h, { node, data, store }) {\\n      const { props, clickParent } = this.treeParams;\\n      return (\\n          <span class={['custom-tree-node', !clickParent && data[props.children] && data[props.children].length ? 'disabled' : null]}>\\n              <span>{node.label}</span>\\n          </span>\\n      );\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(8),_vm._m(9),_vm._m(10),_vm._m(11),_vm._m(12),_vm._m(13)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"tree-select\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#tree-select\"}},[_vm._v(\"¶\")]),_vm._v(\" tree-select\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"开发者：（dawdler）\"),_c('br'),_vm._v(\" 类似 Select 的选择控件，可选择的数据结构是一个树形结构时，可以使用 TreeSelect，例如公司层级、学科系统、分类目录等等。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"dan-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#dan-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" 单选\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"初始\"),_c('code',[_vm._v(\"fst-tree-select\")]),_vm._v(\"组件\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"duo-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#duo-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" 多选\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"treeParams\")]),_vm._v(\"参数\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"shou-dong-geng-xin-tree-jie-dian-shu-ju-zi-ding-yi-xuan-ran\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#shou-dong-geng-xin-tree-jie-dian-shu-ju-zi-ding-yi-xuan-ran\"}},[_vm._v(\"¶\")]),_vm._v(\" 手动更新tree节点数据，自定义渲染\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"zhi-chi-tree-sou-suo\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zhi-chi-tree-sou-suo\"}},[_vm._v(\"¶\")]),_vm._v(\" 支持tree搜索\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"props\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#props\"}},[_vm._v(\"¶\")]),_vm._v(\" Props\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"Name\")]),_c('th',[_vm._v(\"Description\")]),_c('th',[_vm._v(\"Type\")]),_c('th',[_vm._v(\"Required\")]),_c('th',[_vm._v(\"Default\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"value\")]),_c('td',[_vm._v(\"v-model,存储的是treeParams.data里面的id\")]),_c('td',[_c('code',[_vm._v(\"String\")]),_vm._v(\" / \"),_c('code',[_vm._v(\"Array\")]),_vm._v(\" / \"),_c('code',[_vm._v(\"Number\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_c('code',[_vm._v(\"''\")])])]),_c('tr',[_c('td',[_vm._v(\"styles\")]),_c('td',[_vm._v(\"el-select样式\")]),_c('td',[_c('code',[_vm._v(\"Object\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"{}\")])]),_c('tr',[_c('td',[_vm._v(\"selectClass\")]),_c('td',[_vm._v(\"下拉框 挂类\")]),_c('td',[_c('code',[_vm._v(\"String\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"popoverClass\")]),_c('td',[_vm._v(\"popover 挂类\")]),_c('td',[_c('code',[_vm._v(\"String\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"disabled\")]),_c('td',[_vm._v(\"是否禁用文本框\")]),_c('td',[_c('code',[_vm._v(\"Boolean\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"placement\")]),_c('td',[_vm._v(\"弹出框位置\")]),_c('td',[_c('code',[_vm._v(\"String\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"bottom\")])]),_c('tr',[_c('td',[_vm._v(\"treeRenderFun\")]),_c('td',[_vm._v(\"树渲染方法，具体参考el-tree Function(h, { node, data, store }) {}\")]),_c('td',[_c('code',[_vm._v(\"Function\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"filterNodeMethod\")]),_c('td',[_vm._v(\"搜索过滤方法，具体参考el-tree Function(h, { value, data, node }) {}\")]),_c('td',[_c('code',[_vm._v(\"Function\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"selectParams\")]),_c('td',[_vm._v(\"文本框参数，几乎支持el-select所有的API\"),_c('br'),_vm._v(\" 取消参数：\"),_c('br'),_vm._v(\" 设定下拉框的弹出框隐藏：\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\":popper-append-to-body=\\\"false\\\"\")]),_vm._v(\" \"),_c('br'),_vm._v(\" 搜索从弹出框里面执行： \"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"filterable=\\\"false\\\"\")])]),_c('td',[_c('code',[_vm._v(\"Object\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"Object默认参数：\"),_c('br'),_c('br'),_vm._v(\" 是否可以清空选项：\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"clearable: true,\")]),_c('br'),_c('br'),_vm._v(\" 是否禁用：\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"disabled: false,\")]),_c('br'),_c('br'),_vm._v(\" 搜索框placeholder文字：\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"placeholder: '请选择',\")]),_c('br'),_c('br')])]),_c('tr',[_c('td',[_vm._v(\"treeParams\")]),_c('td',[_vm._v(\"下拉树参数，几乎支持el-tree所有的API\"),_c('br'),_vm._v(\" 取消参数:\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\":show-checkbox=\\\"selectParams.multiple\\\"\")]),_c('br'),_vm._v(\" 使用下拉框参数multiple判断是否对树进行多选\"),_c('br'),_vm._v(\" 取消对el-tree的人为传参show-checkbox\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\":node-key=\\\"propsValue\\\"\")]),_vm._v(\" 自动获取treeParams.props.value\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\":draggable=\\\"false\\\"\")]),_vm._v(\" 屏蔽拖动\")]),_c('td',[_c('code',[_vm._v(\"Object\")])]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"Object默认参数：\"),_c('br'),_c('br'),_vm._v(\" 在有子级的情况下是否点击父级关闭弹出框,false 只能点击子级关闭弹出框：\"),_c('br'),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"clickParent: false\")]),_c('br'),_c('br'),_vm._v(\" 是否显示搜索框：\"),_c('br'),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"filterable: false\")]),_c('br'),_c('br'),_vm._v(\" 是否只是叶子节点：\"),_c('br'),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"leafOnly: false\")]),_c('br'),_c('br'),_vm._v(\" 是否包含半选节点：\"),_c('br'),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"includeHalfChecked: false\")]),_c('br'),_c('br'),_vm._v(\" 下拉树的数据：\"),_c('br'),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"data:[]\")]),_c('br'),_c('br'),_vm._v(\" 下拉树的props：\"),_c('br'),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"props: {\")]),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"children: 'children',\")]),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"label: 'name',\")]),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"value: 'flowId',\")]),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"disabled: 'disabled'\")]),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"}\")])])]),_c('tr',[_c('td',[_vm._v(\"children\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"label\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"code\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"value\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"disabled\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_c('code',[_vm._v(\"false\")])]),_c('td',[_vm._v(\"-\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"events\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#events\"}},[_vm._v(\"¶\")]),_vm._v(\" Events\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"Event Name\")]),_c('th',[_vm._v(\"Description\")]),_c('th',[_vm._v(\"Parameters\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"searchFun\")]),_c('td',[_vm._v(\"对外抛出搜索方法，自行判断是走后台查询，还是前端过滤\"),_c('br'),_vm._v(\" 前端过滤：this.$refs.treeSelect.$refs.tree.filter(value);\"),_c('br'),_vm._v(\" 后台查询：this.$refs.treeSelect.treeDataUpdateFun(data);\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"node-click\")]),_c('td',[_vm._v(\"点击节点，对外抛出 \"),_c('code',[_vm._v(\"data, node, vm\")]),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"data:\")]),_vm._v(\" 当前点击的节点数据\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"node:\")]),_vm._v(\" 当前点击的node\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"vm:\")]),_vm._v(\" 当前组件的vm\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"check\")]),_c('td',[_vm._v(\"点击复选框，对外抛出 \"),_c('code',[_vm._v(\"data, node, vm\")]),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"data:\")]),_vm._v(\" 当前点击的节点数据\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"node:\")]),_vm._v(\" 当前点击的node\"),_c('br'),_vm._v(\" \"),_c('code',[_vm._v(\"vm:\")]),_vm._v(\" 当前组件的vm\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"removeTag\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"input\")]),_c('td',[_vm._v(\"下拉框清空，对外抛出``this.$emit('input', multiple ? [] : '');`\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"select-clear\")]),_c('td',[_vm._v(\"下拉框清空，对外抛出``this.$emit('select-clear');`\")]),_c('td',[_vm._v(\"-\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"methods\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#methods\"}},[_vm._v(\"¶\")]),_vm._v(\" Methods\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"Method\")]),_c('th',[_vm._v(\"Description\")]),_c('th',[_vm._v(\"Parameters\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"treeDataUpdateFun\")]),_c('td',[_vm._v(\"树列表更新数据\")]),_c('td',[_vm._v(\"Array\")])]),_c('tr',[_c('td',[_vm._v(\"filterFun\")]),_c('td',[_vm._v(\"本地过滤方法\")]),_c('td',[_vm._v(\"String\")])])])])}]\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content element-doc\">\n        <h2 id=\"tree-select\"><a class=\"header-anchor\" href=\"#tree-select\">¶</a> tree-select</h2>\n<p>开发者：（dawdler）<br/>\n类似 Select 的选择控件，可选择的数据结构是一个树形结构时，可以使用 TreeSelect，例如公司层级、学科系统、分类目录等等。</p>\n<h3 id=\"dan-xuan\"><a class=\"header-anchor\" href=\"#dan-xuan\">¶</a> 单选</h3>\n<p>初始<code>fst-tree-select</code>组件</p>\n<demo-block>\n        <div><p>会根据values的类型区分单选或者多选，selectParams 为el-select 参数， treeParams为 el-tree 参数</p>\n</div>\n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;fst-tree-select  v-model=&quot;values&quot; :selectParams=&quot;selectParams&quot; :treeParams=&quot;treeParams&quot;&gt;&lt;/fst-tree-select&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default { \n    data() {\n      return {\n        values: '',\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          clickParent: true,\n          data: [{\n            label: `节点：1`,\n            id: 1,\n            children: [\n              {\n                label: `节点：2`,\n                id: 2,\n              }\n            ]\n          }],\n          props: {\n            children: 'children',\n            label: 'label',\n            value: 'id'\n        },\n      }\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"duo-xuan\"><a class=\"header-anchor\" href=\"#duo-xuan\">¶</a> 多选</h3>\n<p><code>treeParams</code>参数</p>\n<demo-block>\n        <div><p>会根据values的类型区分单选或者多选，selectParams 为el-select 参数， treeParams为 el-tree 参数</p>\n</div>\n        <template slot=\"source\"><element-demo1 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;fst-tree-select  v-model=&quot;values&quot; :selectParams=&quot;selectParams&quot; :treeParams=&quot;treeParams&quot;&gt;&lt;/fst-tree-select&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default { \n    data() {\n      return {\n        values: [],\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          data: [{\n            label: `节点：1`,\n            id: 1,\n            children: [\n              {\n                label: `节点：2`,\n                id: 2,\n              }\n            ]\n          }],\n          props: {\n            children: 'children',\n            label: 'label',\n            value: 'id'\n        },\n      }\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"shou-dong-geng-xin-tree-jie-dian-shu-ju-zi-ding-yi-xuan-ran\"><a class=\"header-anchor\" href=\"#shou-dong-geng-xin-tree-jie-dian-shu-ju-zi-ding-yi-xuan-ran\">¶</a> 手动更新tree节点数据，自定义渲染</h3>\n<p>更新、渲染</p>\n<demo-block>\n        <div><p>调用组件<code>treeDataUpdateFun</code>可更新tree数据，<code>renderContent</code>可自定义树节点绘制</p>\n</div>\n        <template slot=\"source\"><element-demo2 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;fst-tree-select  v-model=&quot;values&quot; :selectParams=&quot;selectParams&quot; :treeParams=&quot;treeParams&quot; ref=&quot;treeSelect&quot;&gt;&lt;/fst-tree-select&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default { \n    data() {\n      return {\n        values: [],\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          clickParent: false,\n          data: [],\n          leafOnly: true,\n          renderContent: this._renderFun,\n          props: {\n            children: 'children',\n            label: 'name',\n            rootId: '0',\n            disabled: 'disabled',\n            parentId: 'parentId',\n            value: 'id'\n          },\n       }\n     }\n   },\n   mounted() {\n      let data = [];\n      const { label, children, parentId, value, rootId } = this.treeParams.props;\n      for (let i = 0; i &lt; 5; i++) {\n          let rootNode = {\n              [label]: `节点：${i}`,\n              [parentId]: rootId,\n              [value]: i,\n              [children]: []\n          };\n          for (let a = 0; a &lt; 5; a++) {\n              let subId = `${rootNode[value]}_${a}`;\n              let subNode = {\n                  [label]: `子节点：${subId}`,\n                  [parentId]: rootNode[value],\n                  [value]: subId,\n                  [children]: []\n              };\n              for (let b = 0; b &lt; 5; b++) {\n                  let endId = `${subId}_${b}`;\n                  let endNode = {\n                      [label]: `末级节点：${endId}`,\n                      [parentId]: subNode[value],\n                      [value]: endId,\n                      [children]: []\n                  };\n                  subNode[children].push(endNode);\n              }\n              rootNode[children].push(subNode);\n          }\n          data.push(rootNode);\n      }\n      this.$nextTick(() =&gt; {\n          this.$refs.treeSelect.treeDataUpdateFun(data);\n      });\n  },\n  methods: {\n    _renderFun(h, { node, data, store }) {\n      const { props, clickParent } = this.treeParams;\n      return (\n          &lt;span class={['custom-tree-node', !clickParent &amp;&amp; data[props.children] &amp;&amp; data[props.children].length ? 'disabled' : null]}&gt;\n              &lt;span&gt;{node.label}&lt;/span&gt;\n          &lt;/span&gt;\n      );\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"zhi-chi-tree-sou-suo\"><a class=\"header-anchor\" href=\"#zhi-chi-tree-sou-suo\">¶</a> 支持tree搜索</h3>\n<p>搜索</p>\n<demo-block>\n        <div><p>配置<code>filterable:true</code></p>\n</div>\n        <template slot=\"source\"><element-demo3 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;fst-tree-select  v-model=&quot;values&quot; :selectParams=&quot;selectParams&quot; :treeParams=&quot;treeParams&quot; ref=&quot;treeSelect&quot;&gt;&lt;/fst-tree-select&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default { \n    data() {\n      return {\n        values: [],\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          clickParent: true,\n          filterable: true,\n          // 只想要子节点，不需要父节点\n          leafOnly: true,\n          includeHalfChecked: false,\n          'check-strictly': false,\n          'default-expand-all': true,\n          'expand-on-click-node': false,\n          'render-content': this._renderFun,\n          props: {\n            children: 'children',\n            label: 'name',\n            rootId: '0',\n            disabled: 'disabled',\n            parentId: 'parentId',\n            value: 'id'\n          },\n       }\n     }\n   },\n   mounted() {\n      let data = [];\n      const { label, children, parentId, value, rootId } = this.treeParams.props;\n      for (let i = 0; i &lt; 5; i++) {\n          let rootNode = {\n              [label]: `节点：${i}`,\n              [parentId]: rootId,\n              [value]: i,\n              [children]: []\n          };\n          for (let a = 0; a &lt; 5; a++) {\n              let subId = `${rootNode[value]}_${a}`;\n              let subNode = {\n                  [label]: `子节点：${subId}`,\n                  [parentId]: rootNode[value],\n                  [value]: subId,\n                  [children]: []\n              };\n              for (let b = 0; b &lt; 5; b++) {\n                  let endId = `${subId}_${b}`;\n                  let endNode = {\n                      [label]: `末级节点：${endId}`,\n                      [parentId]: subNode[value],\n                      [value]: endId,\n                      [children]: []\n                  };\n                  subNode[children].push(endNode);\n              }\n              rootNode[children].push(subNode);\n          }\n          data.push(rootNode);\n      }\n      this.$nextTick(() =&gt; {\n          this.$refs.treeSelect.treeDataUpdateFun(data);\n      });\n  },\n  methods: {\n    _renderFun(h, { node, data, store }) {\n      const { props, clickParent } = this.treeParams;\n      return (\n          &lt;span class={['custom-tree-node', !clickParent &amp;&amp; data[props.children] &amp;&amp; data[props.children].length ? 'disabled' : null]}&gt;\n              &lt;span&gt;{node.label}&lt;/span&gt;\n          &lt;/span&gt;\n      );\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"props\"><a class=\"header-anchor\" href=\"#props\">¶</a> Props</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>v-model,存储的是treeParams.data里面的id</td>\n<td><code>String</code> / <code>Array</code> / <code>Number</code></td>\n<td><code>false</code></td>\n<td><code>''</code></td>\n</tr>\n<tr>\n<td>styles</td>\n<td>el-select样式</td>\n<td><code>Object</code></td>\n<td><code>false</code></td>\n<td>{}</td>\n</tr>\n<tr>\n<td>selectClass</td>\n<td>下拉框 挂类</td>\n<td><code>String</code></td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>popoverClass</td>\n<td>popover 挂类</td>\n<td><code>String</code></td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用文本框</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n<td>false</td>\n</tr>\n<tr>\n<td>placement</td>\n<td>弹出框位置</td>\n<td><code>String</code></td>\n<td><code>false</code></td>\n<td>bottom</td>\n</tr>\n<tr>\n<td>treeRenderFun</td>\n<td>树渲染方法，具体参考el-tree Function(h, { node, data, store }) {}</td>\n<td><code>Function</code></td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>filterNodeMethod</td>\n<td>搜索过滤方法，具体参考el-tree Function(h, { value, data, node }) {}</td>\n<td><code>Function</code></td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>selectParams</td>\n<td>文本框参数，几乎支持el-select所有的API<br> 取消参数：<br> 设定下拉框的弹出框隐藏：<br> <code>:popper-append-to-body=&quot;false&quot;</code> <br> 搜索从弹出框里面执行： <br> <code>filterable=&quot;false&quot;</code></td>\n<td><code>Object</code></td>\n<td><code>false</code></td>\n<td>Object默认参数：<br><br> 是否可以清空选项：<br> <code>clearable: true,</code><br><br> 是否禁用：<br> <code>disabled: false,</code><br><br> 搜索框placeholder文字：<br> <code>placeholder: '请选择',</code><br><br></td>\n</tr>\n<tr>\n<td>treeParams</td>\n<td>下拉树参数，几乎支持el-tree所有的API<br> 取消参数:<br> <code>:show-checkbox=&quot;selectParams.multiple&quot;</code><br> 使用下拉框参数multiple判断是否对树进行多选<br> 取消对el-tree的人为传参show-checkbox<br> <code>:node-key=&quot;propsValue&quot;</code>     自动获取treeParams.props.value<br> <code>:draggable=&quot;false&quot;</code>         屏蔽拖动</td>\n<td><code>Object</code></td>\n<td><code>false</code></td>\n<td>Object默认参数：<br><br> 在有子级的情况下是否点击父级关闭弹出框,false 只能点击子级关闭弹出框：<br><br> <code>clickParent: false</code><br><br> 是否显示搜索框：<br><br> <code>filterable: false</code><br><br> 是否只是叶子节点：<br><br> <code>leafOnly: false</code><br><br> 是否包含半选节点：<br><br> <code>includeHalfChecked: false</code><br><br> 下拉树的数据：<br><br> <code>data:[]</code><br><br> 下拉树的props：<br><br> <code>props: {</code><br> <code>children: 'children',</code><br> <code>label: 'name',</code><br> <code>value: 'flowId',</code><br> <code>disabled: 'disabled'</code><br> <code>}</code></td>\n</tr>\n<tr>\n<td>children</td>\n<td>-</td>\n<td>—</td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>label</td>\n<td>-</td>\n<td>—</td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>code</td>\n<td>-</td>\n<td>—</td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>value</td>\n<td>-</td>\n<td>—</td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>-</td>\n<td>—</td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"events\"><a class=\"header-anchor\" href=\"#events\">¶</a> Events</h3>\n<table>\n<thead>\n<tr>\n<th>Event Name</th>\n<th>Description</th>\n<th>Parameters</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>searchFun</td>\n<td>对外抛出搜索方法，自行判断是走后台查询，还是前端过滤<br> 前端过滤：this.$refs.treeSelect.$refs.tree.filter(value);<br> 后台查询：this.$refs.treeSelect.treeDataUpdateFun(data);</td>\n<td>-</td>\n</tr>\n<tr>\n<td>node-click</td>\n<td>点击节点，对外抛出   <code>data, node, vm</code><br> <code>data:</code> 当前点击的节点数据<br> <code>node:</code> 当前点击的node<br> <code>vm:</code> 当前组件的vm</td>\n<td>-</td>\n</tr>\n<tr>\n<td>check</td>\n<td>点击复选框，对外抛出   <code>data, node, vm</code><br> <code>data:</code> 当前点击的节点数据<br> <code>node:</code> 当前点击的node<br> <code>vm:</code> 当前组件的vm</td>\n<td>-</td>\n</tr>\n<tr>\n<td>removeTag</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>input</td>\n<td>下拉框清空，对外抛出``this.$emit('input', multiple ? [] : '');`</td>\n<td>-</td>\n</tr>\n<tr>\n<td>select-clear</td>\n<td>下拉框清空，对外抛出``this.$emit('select-clear');`</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"methods\"><a class=\"header-anchor\" href=\"#methods\">¶</a> Methods</h3>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n<th>Parameters</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>treeDataUpdateFun</td>\n<td>树列表更新数据</td>\n<td>Array</td>\n</tr>\n<tr>\n<td>filterFun</td>\n<td>本地过滤方法</td>\n<td>String</td>\n</tr>\n</tbody>\n</table>\n\n      </section>\n    </template>\n    <script>\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('fst-tree-select',{attrs:{\"selectParams\":_vm.selectParams,\"treeParams\":_vm.treeParams},model:{value:(_vm.values),callback:function ($$v) {_vm.values=$$v},expression:\"values\"}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = { \n    data() {\n      return {\n        values: '',\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          clickParent: true,\n          data: [{\n            label: `节点：1`,\n            id: 1,\n            children: [\n              {\n                label: `节点：2`,\n                id: 2,\n              }\n            ]\n          }],\n          props: {\n            children: 'children',\n            label: 'label',\n            value: 'id'\n        },\n      }\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo1\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('fst-tree-select',{attrs:{\"selectParams\":_vm.selectParams,\"treeParams\":_vm.treeParams},model:{value:(_vm.values),callback:function ($$v) {_vm.values=$$v},expression:\"values\"}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = { \n    data() {\n      return {\n        values: [],\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          data: [{\n            label: `节点：1`,\n            id: 1,\n            children: [\n              {\n                label: `节点：2`,\n                id: 2,\n              }\n            ]\n          }],\n          props: {\n            children: 'children',\n            label: 'label',\n            value: 'id'\n        },\n      }\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo2\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('fst-tree-select',{ref:\"treeSelect\",attrs:{\"selectParams\":_vm.selectParams,\"treeParams\":_vm.treeParams},model:{value:(_vm.values),callback:function ($$v) {_vm.values=$$v},expression:\"values\"}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = { \n    data() {\n      return {\n        values: [],\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          clickParent: false,\n          data: [],\n          leafOnly: true,\n          renderContent: this._renderFun,\n          props: {\n            children: 'children',\n            label: 'name',\n            rootId: '0',\n            disabled: 'disabled',\n            parentId: 'parentId',\n            value: 'id'\n          },\n       }\n     }\n   },\n   mounted() {\n      let data = [];\n      const { label, children, parentId, value, rootId } = this.treeParams.props;\n      for (let i = 0; i < 5; i++) {\n          let rootNode = {\n              [label]: `节点：${i}`,\n              [parentId]: rootId,\n              [value]: i,\n              [children]: []\n          };\n          for (let a = 0; a < 5; a++) {\n              let subId = `${rootNode[value]}_${a}`;\n              let subNode = {\n                  [label]: `子节点：${subId}`,\n                  [parentId]: rootNode[value],\n                  [value]: subId,\n                  [children]: []\n              };\n              for (let b = 0; b < 5; b++) {\n                  let endId = `${subId}_${b}`;\n                  let endNode = {\n                      [label]: `末级节点：${endId}`,\n                      [parentId]: subNode[value],\n                      [value]: endId,\n                      [children]: []\n                  };\n                  subNode[children].push(endNode);\n              }\n              rootNode[children].push(subNode);\n          }\n          data.push(rootNode);\n      }\n      this.$nextTick(() => {\n          this.$refs.treeSelect.treeDataUpdateFun(data);\n      });\n  },\n  methods: {\n    _renderFun(h, { node, data, store }) {\n      const { props, clickParent } = this.treeParams;\n      return (\n          <span class={['custom-tree-node', !clickParent && data[props.children] && data[props.children].length ? 'disabled' : null]}>\n              <span>{node.label}</span>\n          </span>\n      );\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo3\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('fst-tree-select',{ref:\"treeSelect\",attrs:{\"selectParams\":_vm.selectParams,\"treeParams\":_vm.treeParams},model:{value:(_vm.values),callback:function ($$v) {_vm.values=$$v},expression:\"values\"}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = { \n    data() {\n      return {\n        values: [],\n        selectParams: {\n          clearable: true,\n          placeholder: '请选择'\n        },\n        treeParams: {\n          clickParent: true,\n          filterable: true,\n          // 只想要子节点，不需要父节点\n          leafOnly: true,\n          includeHalfChecked: false,\n          'check-strictly': false,\n          'default-expand-all': true,\n          'expand-on-click-node': false,\n          'render-content': this._renderFun,\n          props: {\n            children: 'children',\n            label: 'name',\n            rootId: '0',\n            disabled: 'disabled',\n            parentId: 'parentId',\n            value: 'id'\n          },\n       }\n     }\n   },\n   mounted() {\n      let data = [];\n      const { label, children, parentId, value, rootId } = this.treeParams.props;\n      for (let i = 0; i < 5; i++) {\n          let rootNode = {\n              [label]: `节点：${i}`,\n              [parentId]: rootId,\n              [value]: i,\n              [children]: []\n          };\n          for (let a = 0; a < 5; a++) {\n              let subId = `${rootNode[value]}_${a}`;\n              let subNode = {\n                  [label]: `子节点：${subId}`,\n                  [parentId]: rootNode[value],\n                  [value]: subId,\n                  [children]: []\n              };\n              for (let b = 0; b < 5; b++) {\n                  let endId = `${subId}_${b}`;\n                  let endNode = {\n                      [label]: `末级节点：${endId}`,\n                      [parentId]: subNode[value],\n                      [value]: endId,\n                      [children]: []\n                  };\n                  subNode[children].push(endNode);\n              }\n              rootNode[children].push(subNode);\n          }\n          data.push(rootNode);\n      }\n      this.$nextTick(() => {\n          this.$refs.treeSelect.treeDataUpdateFun(data);\n      });\n  },\n  methods: {\n    _renderFun(h, { node, data, store }) {\n      const { props, clickParent } = this.treeParams;\n      return (\n          <span class={['custom-tree-node', !clickParent && data[props.children] && data[props.children].length ? 'disabled' : null]}>\n              <span>{node.label}</span>\n          </span>\n      );\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  ","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js!../../loader/md-loader/index.js!../../../../node_modules/eslint-loader/index.js??ref--14-0!./tree-select.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js!../../loader/md-loader/index.js!../../../../node_modules/eslint-loader/index.js??ref--14-0!./tree-select.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tree-select.md?vue&type=template&id=730bbb95&\"\nimport script from \"./tree-select.md?vue&type=script&lang=js&\"\nexport * from \"./tree-select.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}